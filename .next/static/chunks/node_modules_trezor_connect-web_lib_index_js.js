/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_trezor_connect-web_lib_index_js"],{

/***/ "./node_modules/@protobufjs/aspromise/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@protobufjs/aspromise/index.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmanMvYXNwcm9taXNlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFCQUFxQjtBQUM3QztBQUNBLFVBQVU7QUFDVixXQUFXLFlBQVk7QUFDdkIsV0FBVyxNQUFNO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUIsV0FBVyxHQUFHO0FBQ2QsV0FBVyxNQUFNO0FBQ2pCLGFBQWEsWUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWZqcy9hc3Byb21pc2UvaW5kZXguanM/NDZiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxubW9kdWxlLmV4cG9ydHMgPSBhc1Byb21pc2U7XHJcblxyXG4vKipcclxuICogQ2FsbGJhY2sgYXMgdXNlZCBieSB7QGxpbmsgdXRpbC5hc1Byb21pc2V9LlxyXG4gKiBAdHlwZWRlZiBhc1Byb21pc2VDYWxsYmFja1xyXG4gKiBAdHlwZSB7ZnVuY3Rpb259XHJcbiAqIEBwYXJhbSB7RXJyb3J8bnVsbH0gZXJyb3IgRXJyb3IsIGlmIGFueVxyXG4gKiBAcGFyYW0gey4uLip9IHBhcmFtcyBBZGRpdGlvbmFsIGFyZ3VtZW50c1xyXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBSZXR1cm5zIGEgcHJvbWlzZSBmcm9tIGEgbm9kZS1zdHlsZSBjYWxsYmFjayBmdW5jdGlvbi5cclxuICogQG1lbWJlcm9mIHV0aWxcclxuICogQHBhcmFtIHthc1Byb21pc2VDYWxsYmFja30gZm4gRnVuY3Rpb24gdG8gY2FsbFxyXG4gKiBAcGFyYW0geyp9IGN0eCBGdW5jdGlvbiBjb250ZXh0XHJcbiAqIEBwYXJhbSB7Li4uKn0gcGFyYW1zIEZ1bmN0aW9uIGFyZ3VtZW50c1xyXG4gKiBAcmV0dXJucyB7UHJvbWlzZTwqPn0gUHJvbWlzaWZpZWQgZnVuY3Rpb25cclxuICovXHJcbmZ1bmN0aW9uIGFzUHJvbWlzZShmbiwgY3R4LyosIHZhcmFyZ3MgKi8pIHtcclxuICAgIHZhciBwYXJhbXMgID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKSxcclxuICAgICAgICBvZmZzZXQgID0gMCxcclxuICAgICAgICBpbmRleCAgID0gMixcclxuICAgICAgICBwZW5kaW5nID0gdHJ1ZTtcclxuICAgIHdoaWxlIChpbmRleCA8IGFyZ3VtZW50cy5sZW5ndGgpXHJcbiAgICAgICAgcGFyYW1zW29mZnNldCsrXSA9IGFyZ3VtZW50c1tpbmRleCsrXTtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiBleGVjdXRvcihyZXNvbHZlLCByZWplY3QpIHtcclxuICAgICAgICBwYXJhbXNbb2Zmc2V0XSA9IGZ1bmN0aW9uIGNhbGxiYWNrKGVyci8qLCB2YXJhcmdzICovKSB7XHJcbiAgICAgICAgICAgIGlmIChwZW5kaW5nKSB7XHJcbiAgICAgICAgICAgICAgICBwZW5kaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyKVxyXG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmFtcyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKG9mZnNldCA8IHBhcmFtcy5sZW5ndGgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtc1tvZmZzZXQrK10gPSBhcmd1bWVudHNbb2Zmc2V0XTtcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlLmFwcGx5KG51bGwsIHBhcmFtcyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGZuLmFwcGx5KGN0eCB8fCBudWxsLCBwYXJhbXMpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgICAgICBpZiAocGVuZGluZykge1xyXG4gICAgICAgICAgICAgICAgcGVuZGluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@protobufjs/aspromise/index.js\n"));

/***/ }),

/***/ "./node_modules/@protobufjs/base64/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@protobufjs/base64/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmanMvYmFzZTY0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0EsOEJBQThCLEVBQUUsbUJBQW1CLEVBQUUsaUJBQWlCLEVBQUU7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwcm90b2J1ZmpzL2Jhc2U2NC9pbmRleC5qcz82Nzg2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLyoqXHJcbiAqIEEgbWluaW1hbCBiYXNlNjQgaW1wbGVtZW50YXRpb24gZm9yIG51bWJlciBhcnJheXMuXHJcbiAqIEBtZW1iZXJvZiB1dGlsXHJcbiAqIEBuYW1lc3BhY2VcclxuICovXHJcbnZhciBiYXNlNjQgPSBleHBvcnRzO1xyXG5cclxuLyoqXHJcbiAqIENhbGN1bGF0ZXMgdGhlIGJ5dGUgbGVuZ3RoIG9mIGEgYmFzZTY0IGVuY29kZWQgc3RyaW5nLlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIEJhc2U2NCBlbmNvZGVkIHN0cmluZ1xyXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBCeXRlIGxlbmd0aFxyXG4gKi9cclxuYmFzZTY0Lmxlbmd0aCA9IGZ1bmN0aW9uIGxlbmd0aChzdHJpbmcpIHtcclxuICAgIHZhciBwID0gc3RyaW5nLmxlbmd0aDtcclxuICAgIGlmICghcClcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIHZhciBuID0gMDtcclxuICAgIHdoaWxlICgtLXAgJSA0ID4gMSAmJiBzdHJpbmcuY2hhckF0KHApID09PSBcIj1cIilcclxuICAgICAgICArK247XHJcbiAgICByZXR1cm4gTWF0aC5jZWlsKHN0cmluZy5sZW5ndGggKiAzKSAvIDQgLSBuO1xyXG59O1xyXG5cclxuLy8gQmFzZTY0IGVuY29kaW5nIHRhYmxlXHJcbnZhciBiNjQgPSBuZXcgQXJyYXkoNjQpO1xyXG5cclxuLy8gQmFzZTY0IGRlY29kaW5nIHRhYmxlXHJcbnZhciBzNjQgPSBuZXcgQXJyYXkoMTIzKTtcclxuXHJcbi8vIDY1Li45MCwgOTcuLjEyMiwgNDguLjU3LCA0MywgNDdcclxuZm9yICh2YXIgaSA9IDA7IGkgPCA2NDspXHJcbiAgICBzNjRbYjY0W2ldID0gaSA8IDI2ID8gaSArIDY1IDogaSA8IDUyID8gaSArIDcxIDogaSA8IDYyID8gaSAtIDQgOiBpIC0gNTkgfCA0M10gPSBpKys7XHJcblxyXG4vKipcclxuICogRW5jb2RlcyBhIGJ1ZmZlciB0byBhIGJhc2U2NCBlbmNvZGVkIHN0cmluZy5cclxuICogQHBhcmFtIHtVaW50OEFycmF5fSBidWZmZXIgU291cmNlIGJ1ZmZlclxyXG4gKiBAcGFyYW0ge251bWJlcn0gc3RhcnQgU291cmNlIHN0YXJ0XHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBlbmQgU291cmNlIGVuZFxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBCYXNlNjQgZW5jb2RlZCBzdHJpbmdcclxuICovXHJcbmJhc2U2NC5lbmNvZGUgPSBmdW5jdGlvbiBlbmNvZGUoYnVmZmVyLCBzdGFydCwgZW5kKSB7XHJcbiAgICB2YXIgcGFydHMgPSBudWxsLFxyXG4gICAgICAgIGNodW5rID0gW107XHJcbiAgICB2YXIgaSA9IDAsIC8vIG91dHB1dCBpbmRleFxyXG4gICAgICAgIGogPSAwLCAvLyBnb3RvIGluZGV4XHJcbiAgICAgICAgdDsgICAgIC8vIHRlbXBvcmFyeVxyXG4gICAgd2hpbGUgKHN0YXJ0IDwgZW5kKSB7XHJcbiAgICAgICAgdmFyIGIgPSBidWZmZXJbc3RhcnQrK107XHJcbiAgICAgICAgc3dpdGNoIChqKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICAgIGNodW5rW2krK10gPSBiNjRbYiA+PiAyXTtcclxuICAgICAgICAgICAgICAgIHQgPSAoYiAmIDMpIDw8IDQ7XHJcbiAgICAgICAgICAgICAgICBqID0gMTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICBjaHVua1tpKytdID0gYjY0W3QgfCBiID4+IDRdO1xyXG4gICAgICAgICAgICAgICAgdCA9IChiICYgMTUpIDw8IDI7XHJcbiAgICAgICAgICAgICAgICBqID0gMjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgICAgICBjaHVua1tpKytdID0gYjY0W3QgfCBiID4+IDZdO1xyXG4gICAgICAgICAgICAgICAgY2h1bmtbaSsrXSA9IGI2NFtiICYgNjNdO1xyXG4gICAgICAgICAgICAgICAgaiA9IDA7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGkgPiA4MTkxKSB7XHJcbiAgICAgICAgICAgIChwYXJ0cyB8fCAocGFydHMgPSBbXSkpLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsIGNodW5rKSk7XHJcbiAgICAgICAgICAgIGkgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmIChqKSB7XHJcbiAgICAgICAgY2h1bmtbaSsrXSA9IGI2NFt0XTtcclxuICAgICAgICBjaHVua1tpKytdID0gNjE7XHJcbiAgICAgICAgaWYgKGogPT09IDEpXHJcbiAgICAgICAgICAgIGNodW5rW2krK10gPSA2MTtcclxuICAgIH1cclxuICAgIGlmIChwYXJ0cykge1xyXG4gICAgICAgIGlmIChpKVxyXG4gICAgICAgICAgICBwYXJ0cy5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLCBjaHVuay5zbGljZSgwLCBpKSkpO1xyXG4gICAgICAgIHJldHVybiBwYXJ0cy5qb2luKFwiXCIpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLCBjaHVuay5zbGljZSgwLCBpKSk7XHJcbn07XHJcblxyXG52YXIgaW52YWxpZEVuY29kaW5nID0gXCJpbnZhbGlkIGVuY29kaW5nXCI7XHJcblxyXG4vKipcclxuICogRGVjb2RlcyBhIGJhc2U2NCBlbmNvZGVkIHN0cmluZyB0byBhIGJ1ZmZlci5cclxuICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZyBTb3VyY2Ugc3RyaW5nXHJcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnVmZmVyIERlc3RpbmF0aW9uIGJ1ZmZlclxyXG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0IERlc3RpbmF0aW9uIG9mZnNldFxyXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBOdW1iZXIgb2YgYnl0ZXMgd3JpdHRlblxyXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgZW5jb2RpbmcgaXMgaW52YWxpZFxyXG4gKi9cclxuYmFzZTY0LmRlY29kZSA9IGZ1bmN0aW9uIGRlY29kZShzdHJpbmcsIGJ1ZmZlciwgb2Zmc2V0KSB7XHJcbiAgICB2YXIgc3RhcnQgPSBvZmZzZXQ7XHJcbiAgICB2YXIgaiA9IDAsIC8vIGdvdG8gaW5kZXhcclxuICAgICAgICB0OyAgICAgLy8gdGVtcG9yYXJ5XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0cmluZy5sZW5ndGg7KSB7XHJcbiAgICAgICAgdmFyIGMgPSBzdHJpbmcuY2hhckNvZGVBdChpKyspO1xyXG4gICAgICAgIGlmIChjID09PSA2MSAmJiBqID4gMSlcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgaWYgKChjID0gczY0W2NdKSA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihpbnZhbGlkRW5jb2RpbmcpO1xyXG4gICAgICAgIHN3aXRjaCAoaikge1xyXG4gICAgICAgICAgICBjYXNlIDA6XHJcbiAgICAgICAgICAgICAgICB0ID0gYztcclxuICAgICAgICAgICAgICAgIGogPSAxO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgIGJ1ZmZlcltvZmZzZXQrK10gPSB0IDw8IDIgfCAoYyAmIDQ4KSA+PiA0O1xyXG4gICAgICAgICAgICAgICAgdCA9IGM7XHJcbiAgICAgICAgICAgICAgICBqID0gMjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgICAgICBidWZmZXJbb2Zmc2V0KytdID0gKHQgJiAxNSkgPDwgNCB8IChjICYgNjApID4+IDI7XHJcbiAgICAgICAgICAgICAgICB0ID0gYztcclxuICAgICAgICAgICAgICAgIGogPSAzO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgICAgIGJ1ZmZlcltvZmZzZXQrK10gPSAodCAmIDMpIDw8IDYgfCBjO1xyXG4gICAgICAgICAgICAgICAgaiA9IDA7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAoaiA9PT0gMSlcclxuICAgICAgICB0aHJvdyBFcnJvcihpbnZhbGlkRW5jb2RpbmcpO1xyXG4gICAgcmV0dXJuIG9mZnNldCAtIHN0YXJ0O1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFRlc3RzIGlmIHRoZSBzcGVjaWZpZWQgc3RyaW5nIGFwcGVhcnMgdG8gYmUgYmFzZTY0IGVuY29kZWQuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgU3RyaW5nIHRvIHRlc3RcclxuICogQHJldHVybnMge2Jvb2xlYW59IGB0cnVlYCBpZiBwcm9iYWJseSBiYXNlNjQgZW5jb2RlZCwgb3RoZXJ3aXNlIGZhbHNlXHJcbiAqL1xyXG5iYXNlNjQudGVzdCA9IGZ1bmN0aW9uIHRlc3Qoc3RyaW5nKSB7XHJcbiAgICByZXR1cm4gL14oPzpbQS1aYS16MC05Ky9dezR9KSooPzpbQS1aYS16MC05Ky9dezJ9PT18W0EtWmEtejAtOSsvXXszfT0pPyQvLnRlc3Qoc3RyaW5nKTtcclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@protobufjs/base64/index.js\n"));

/***/ }),

/***/ "./node_modules/@protobufjs/codegen/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@protobufjs/codegen/index.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmanMvY29kZWdlbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGVBQWUsMEJBQTBCO0FBQ3pDLGVBQWUsTUFBTTtBQUNyQixpQkFBaUIsa0JBQWtCO0FBQ25DLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUZBQW1GO0FBQ25GO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwSUFBMEksZ0NBQWdDO0FBQzFLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmanMvY29kZWdlbi9pbmRleC5qcz82NjUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5tb2R1bGUuZXhwb3J0cyA9IGNvZGVnZW47XHJcblxyXG4vKipcclxuICogQmVnaW5zIGdlbmVyYXRpbmcgYSBmdW5jdGlvbi5cclxuICogQG1lbWJlcm9mIHV0aWxcclxuICogQHBhcmFtIHtzdHJpbmdbXX0gZnVuY3Rpb25QYXJhbXMgRnVuY3Rpb24gcGFyYW1ldGVyIG5hbWVzXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBbZnVuY3Rpb25OYW1lXSBGdW5jdGlvbiBuYW1lIGlmIG5vdCBhbm9ueW1vdXNcclxuICogQHJldHVybnMge0NvZGVnZW59IEFwcGVuZGVyIHRoYXQgYXBwZW5kcyBjb2RlIHRvIHRoZSBmdW5jdGlvbidzIGJvZHlcclxuICovXHJcbmZ1bmN0aW9uIGNvZGVnZW4oZnVuY3Rpb25QYXJhbXMsIGZ1bmN0aW9uTmFtZSkge1xyXG5cclxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xyXG4gICAgaWYgKHR5cGVvZiBmdW5jdGlvblBhcmFtcyA9PT0gXCJzdHJpbmdcIikge1xyXG4gICAgICAgIGZ1bmN0aW9uTmFtZSA9IGZ1bmN0aW9uUGFyYW1zO1xyXG4gICAgICAgIGZ1bmN0aW9uUGFyYW1zID0gdW5kZWZpbmVkO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBib2R5ID0gW107XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBcHBlbmRzIGNvZGUgdG8gdGhlIGZ1bmN0aW9uJ3MgYm9keSBvciBmaW5pc2hlcyBnZW5lcmF0aW9uLlxyXG4gICAgICogQHR5cGVkZWYgQ29kZWdlblxyXG4gICAgICogQHR5cGUge2Z1bmN0aW9ufVxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd8T2JqZWN0LjxzdHJpbmcsKj59IFtmb3JtYXRTdHJpbmdPclNjb3BlXSBGb3JtYXQgc3RyaW5nIG9yLCB0byBmaW5pc2ggdGhlIGZ1bmN0aW9uLCBhbiBvYmplY3Qgb2YgYWRkaXRpb25hbCBzY29wZSB2YXJpYWJsZXMsIGlmIGFueVxyXG4gICAgICogQHBhcmFtIHsuLi4qfSBbZm9ybWF0UGFyYW1zXSBGb3JtYXQgcGFyYW1ldGVyc1xyXG4gICAgICogQHJldHVybnMge0NvZGVnZW58RnVuY3Rpb259IEl0c2VsZiBvciB0aGUgZ2VuZXJhdGVkIGZ1bmN0aW9uIGlmIGZpbmlzaGVkXHJcbiAgICAgKiBAdGhyb3dzIHtFcnJvcn0gSWYgZm9ybWF0IHBhcmFtZXRlciBjb3VudHMgZG8gbm90IG1hdGNoXHJcbiAgICAgKi9cclxuXHJcbiAgICBmdW5jdGlvbiBDb2RlZ2VuKGZvcm1hdFN0cmluZ09yU2NvcGUpIHtcclxuICAgICAgICAvLyBub3RlIHRoYXQgZXhwbGljaXQgYXJyYXkgaGFuZGxpbmcgYmVsb3cgbWFrZXMgdGhpcyB+NTAlIGZhc3RlclxyXG5cclxuICAgICAgICAvLyBmaW5pc2ggdGhlIGZ1bmN0aW9uXHJcbiAgICAgICAgaWYgKHR5cGVvZiBmb3JtYXRTdHJpbmdPclNjb3BlICE9PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgICAgICAgIHZhciBzb3VyY2UgPSB0b1N0cmluZygpO1xyXG4gICAgICAgICAgICBpZiAoY29kZWdlbi52ZXJib3NlKVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJjb2RlZ2VuOiBcIiArIHNvdXJjZSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxyXG4gICAgICAgICAgICBzb3VyY2UgPSBcInJldHVybiBcIiArIHNvdXJjZTtcclxuICAgICAgICAgICAgaWYgKGZvcm1hdFN0cmluZ09yU2NvcGUpIHtcclxuICAgICAgICAgICAgICAgIHZhciBzY29wZUtleXMgICA9IE9iamVjdC5rZXlzKGZvcm1hdFN0cmluZ09yU2NvcGUpLFxyXG4gICAgICAgICAgICAgICAgICAgIHNjb3BlUGFyYW1zID0gbmV3IEFycmF5KHNjb3BlS2V5cy5sZW5ndGggKyAxKSxcclxuICAgICAgICAgICAgICAgICAgICBzY29wZVZhbHVlcyA9IG5ldyBBcnJheShzY29wZUtleXMubGVuZ3RoKSxcclxuICAgICAgICAgICAgICAgICAgICBzY29wZU9mZnNldCA9IDA7XHJcbiAgICAgICAgICAgICAgICB3aGlsZSAoc2NvcGVPZmZzZXQgPCBzY29wZUtleXMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2NvcGVQYXJhbXNbc2NvcGVPZmZzZXRdID0gc2NvcGVLZXlzW3Njb3BlT2Zmc2V0XTtcclxuICAgICAgICAgICAgICAgICAgICBzY29wZVZhbHVlc1tzY29wZU9mZnNldF0gPSBmb3JtYXRTdHJpbmdPclNjb3BlW3Njb3BlS2V5c1tzY29wZU9mZnNldCsrXV07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBzY29wZVBhcmFtc1tzY29wZU9mZnNldF0gPSBzb3VyY2U7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gRnVuY3Rpb24uYXBwbHkobnVsbCwgc2NvcGVQYXJhbXMpLmFwcGx5KG51bGwsIHNjb3BlVmFsdWVzKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctZnVuY1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBGdW5jdGlvbihzb3VyY2UpKCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LWZ1bmNcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIG90aGVyd2lzZSBhcHBlbmQgdG8gYm9keVxyXG4gICAgICAgIHZhciBmb3JtYXRQYXJhbXMgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpLFxyXG4gICAgICAgICAgICBmb3JtYXRPZmZzZXQgPSAwO1xyXG4gICAgICAgIHdoaWxlIChmb3JtYXRPZmZzZXQgPCBmb3JtYXRQYXJhbXMubGVuZ3RoKVxyXG4gICAgICAgICAgICBmb3JtYXRQYXJhbXNbZm9ybWF0T2Zmc2V0XSA9IGFyZ3VtZW50c1srK2Zvcm1hdE9mZnNldF07XHJcbiAgICAgICAgZm9ybWF0T2Zmc2V0ID0gMDtcclxuICAgICAgICBmb3JtYXRTdHJpbmdPclNjb3BlID0gZm9ybWF0U3RyaW5nT3JTY29wZS5yZXBsYWNlKC8lKFslZGZpanNdKS9nLCBmdW5jdGlvbiByZXBsYWNlKCQwLCAkMSkge1xyXG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBmb3JtYXRQYXJhbXNbZm9ybWF0T2Zmc2V0KytdO1xyXG4gICAgICAgICAgICBzd2l0Y2ggKCQxKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiZFwiOiBjYXNlIFwiZlwiOiByZXR1cm4gU3RyaW5nKE51bWJlcih2YWx1ZSkpO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcImlcIjogcmV0dXJuIFN0cmluZyhNYXRoLmZsb29yKHZhbHVlKSk7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwialwiOiByZXR1cm4gSlNPTi5zdHJpbmdpZnkodmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcInNcIjogcmV0dXJuIFN0cmluZyh2YWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIFwiJVwiO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmIChmb3JtYXRPZmZzZXQgIT09IGZvcm1hdFBhcmFtcy5sZW5ndGgpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwicGFyYW1ldGVyIGNvdW50IG1pc21hdGNoXCIpO1xyXG4gICAgICAgIGJvZHkucHVzaChmb3JtYXRTdHJpbmdPclNjb3BlKTtcclxuICAgICAgICByZXR1cm4gQ29kZWdlbjtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiB0b1N0cmluZyhmdW5jdGlvbk5hbWVPdmVycmlkZSkge1xyXG4gICAgICAgIHJldHVybiBcImZ1bmN0aW9uIFwiICsgKGZ1bmN0aW9uTmFtZU92ZXJyaWRlIHx8IGZ1bmN0aW9uTmFtZSB8fCBcIlwiKSArIFwiKFwiICsgKGZ1bmN0aW9uUGFyYW1zICYmIGZ1bmN0aW9uUGFyYW1zLmpvaW4oXCIsXCIpIHx8IFwiXCIpICsgXCIpe1xcbiAgXCIgKyBib2R5LmpvaW4oXCJcXG4gIFwiKSArIFwiXFxufVwiO1xyXG4gICAgfVxyXG5cclxuICAgIENvZGVnZW4udG9TdHJpbmcgPSB0b1N0cmluZztcclxuICAgIHJldHVybiBDb2RlZ2VuO1xyXG59XHJcblxyXG4vKipcclxuICogQmVnaW5zIGdlbmVyYXRpbmcgYSBmdW5jdGlvbi5cclxuICogQG1lbWJlcm9mIHV0aWxcclxuICogQGZ1bmN0aW9uIGNvZGVnZW5cclxuICogQHBhcmFtIHtzdHJpbmd9IFtmdW5jdGlvbk5hbWVdIEZ1bmN0aW9uIG5hbWUgaWYgbm90IGFub255bW91c1xyXG4gKiBAcmV0dXJucyB7Q29kZWdlbn0gQXBwZW5kZXIgdGhhdCBhcHBlbmRzIGNvZGUgdG8gdGhlIGZ1bmN0aW9uJ3MgYm9keVxyXG4gKiBAdmFyaWF0aW9uIDJcclxuICovXHJcblxyXG4vKipcclxuICogV2hlbiBzZXQgdG8gYHRydWVgLCBjb2RlZ2VuIHdpbGwgbG9nIGdlbmVyYXRlZCBjb2RlIHRvIGNvbnNvbGUuIFVzZWZ1bCBmb3IgZGVidWdnaW5nLlxyXG4gKiBAbmFtZSB1dGlsLmNvZGVnZW4udmVyYm9zZVxyXG4gKiBAdHlwZSB7Ym9vbGVhbn1cclxuICovXHJcbmNvZGVnZW4udmVyYm9zZSA9IGZhbHNlO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@protobufjs/codegen/index.js\n"));

/***/ }),

/***/ "./node_modules/@protobufjs/eventemitter/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@protobufjs/eventemitter/index.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmanMvZXZlbnRlbWl0dGVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixXQUFXLEdBQUc7QUFDZCxhQUFhLG1CQUFtQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsbUJBQW1CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixxQkFBcUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLE1BQU07QUFDakIsYUFBYSxtQkFBbUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxxQkFBcUI7QUFDcEM7QUFDQSxvQkFBb0IscUJBQXFCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWZqcy9ldmVudGVtaXR0ZXIvaW5kZXguanM/Y2M3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxubW9kdWxlLmV4cG9ydHMgPSBFdmVudEVtaXR0ZXI7XHJcblxyXG4vKipcclxuICogQ29uc3RydWN0cyBhIG5ldyBldmVudCBlbWl0dGVyIGluc3RhbmNlLlxyXG4gKiBAY2xhc3NkZXNjIEEgbWluaW1hbCBldmVudCBlbWl0dGVyLlxyXG4gKiBAbWVtYmVyb2YgdXRpbFxyXG4gKiBAY29uc3RydWN0b3JcclxuICovXHJcbmZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlZ2lzdGVyZWQgbGlzdGVuZXJzLlxyXG4gICAgICogQHR5cGUge09iamVjdC48c3RyaW5nLCo+fVxyXG4gICAgICogQHByaXZhdGVcclxuICAgICAqL1xyXG4gICAgdGhpcy5fbGlzdGVuZXJzID0ge307XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZWdpc3RlcnMgYW4gZXZlbnQgbGlzdGVuZXIuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBldnQgRXZlbnQgbmFtZVxyXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBmbiBMaXN0ZW5lclxyXG4gKiBAcGFyYW0geyp9IFtjdHhdIExpc3RlbmVyIGNvbnRleHRcclxuICogQHJldHVybnMge3V0aWwuRXZlbnRFbWl0dGVyfSBgdGhpc2BcclxuICovXHJcbkV2ZW50RW1pdHRlci5wcm90b3R5cGUub24gPSBmdW5jdGlvbiBvbihldnQsIGZuLCBjdHgpIHtcclxuICAgICh0aGlzLl9saXN0ZW5lcnNbZXZ0XSB8fCAodGhpcy5fbGlzdGVuZXJzW2V2dF0gPSBbXSkpLnB1c2goe1xyXG4gICAgICAgIGZuICA6IGZuLFxyXG4gICAgICAgIGN0eCA6IGN0eCB8fCB0aGlzXHJcbiAgICB9KTtcclxuICAgIHJldHVybiB0aGlzO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFJlbW92ZXMgYW4gZXZlbnQgbGlzdGVuZXIgb3IgYW55IG1hdGNoaW5nIGxpc3RlbmVycyBpZiBhcmd1bWVudHMgYXJlIG9taXR0ZWQuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBbZXZ0XSBFdmVudCBuYW1lLiBSZW1vdmVzIGFsbCBsaXN0ZW5lcnMgaWYgb21pdHRlZC5cclxuICogQHBhcmFtIHtmdW5jdGlvbn0gW2ZuXSBMaXN0ZW5lciB0byByZW1vdmUuIFJlbW92ZXMgYWxsIGxpc3RlbmVycyBvZiBgZXZ0YCBpZiBvbWl0dGVkLlxyXG4gKiBAcmV0dXJucyB7dXRpbC5FdmVudEVtaXR0ZXJ9IGB0aGlzYFxyXG4gKi9cclxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vZmYgPSBmdW5jdGlvbiBvZmYoZXZ0LCBmbikge1xyXG4gICAgaWYgKGV2dCA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgIHRoaXMuX2xpc3RlbmVycyA9IHt9O1xyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgaWYgKGZuID09PSB1bmRlZmluZWQpXHJcbiAgICAgICAgICAgIHRoaXMuX2xpc3RlbmVyc1tldnRdID0gW107XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9saXN0ZW5lcnNbZXZ0XTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOylcclxuICAgICAgICAgICAgICAgIGlmIChsaXN0ZW5lcnNbaV0uZm4gPT09IGZuKVxyXG4gICAgICAgICAgICAgICAgICAgIGxpc3RlbmVycy5zcGxpY2UoaSwgMSk7XHJcbiAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgKytpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIEVtaXRzIGFuIGV2ZW50IGJ5IGNhbGxpbmcgaXRzIGxpc3RlbmVycyB3aXRoIHRoZSBzcGVjaWZpZWQgYXJndW1lbnRzLlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gZXZ0IEV2ZW50IG5hbWVcclxuICogQHBhcmFtIHsuLi4qfSBhcmdzIEFyZ3VtZW50c1xyXG4gKiBAcmV0dXJucyB7dXRpbC5FdmVudEVtaXR0ZXJ9IGB0aGlzYFxyXG4gKi9cclxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5lbWl0ID0gZnVuY3Rpb24gZW1pdChldnQpIHtcclxuICAgIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9saXN0ZW5lcnNbZXZ0XTtcclxuICAgIGlmIChsaXN0ZW5lcnMpIHtcclxuICAgICAgICB2YXIgYXJncyA9IFtdLFxyXG4gICAgICAgICAgICBpID0gMTtcclxuICAgICAgICBmb3IgKDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7KVxyXG4gICAgICAgICAgICBhcmdzLnB1c2goYXJndW1lbnRzW2krK10pO1xyXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOylcclxuICAgICAgICAgICAgbGlzdGVuZXJzW2ldLmZuLmFwcGx5KGxpc3RlbmVyc1tpKytdLmN0eCwgYXJncyk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcztcclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@protobufjs/eventemitter/index.js\n"));

/***/ }),

/***/ "./node_modules/@protobufjs/fetch/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@protobufjs/fetch/index.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = __webpack_require__(/*! @protobufjs/aspromise */ \"./node_modules/@protobufjs/aspromise/index.js\"),\r\n    inquire   = __webpack_require__(/*! @protobufjs/inquire */ \"./node_modules/@protobufjs/inquire/index.js\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmanMvZmV0Y2gvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFPLENBQUMsNEVBQXVCO0FBQy9DLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxpQkFBaUI7QUFDcEQ7QUFDQSxVQUFVO0FBQ1YsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlCQUFpQjtBQUN4QztBQUNBLFVBQVU7QUFDVixjQUFjLFNBQVM7QUFDdkIsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSwwREFBMEQ7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsY0FBYztBQUN6QixhQUFhLDRCQUE0QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDZCQUE2QjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwcm90b2J1ZmpzL2ZldGNoL2luZGV4LmpzP2ZjZjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbm1vZHVsZS5leHBvcnRzID0gZmV0Y2g7XHJcblxyXG52YXIgYXNQcm9taXNlID0gcmVxdWlyZShcIkBwcm90b2J1ZmpzL2FzcHJvbWlzZVwiKSxcclxuICAgIGlucXVpcmUgICA9IHJlcXVpcmUoXCJAcHJvdG9idWZqcy9pbnF1aXJlXCIpO1xyXG5cclxudmFyIGZzID0gaW5xdWlyZShcImZzXCIpO1xyXG5cclxuLyoqXHJcbiAqIE5vZGUtc3R5bGUgY2FsbGJhY2sgYXMgdXNlZCBieSB7QGxpbmsgdXRpbC5mZXRjaH0uXHJcbiAqIEB0eXBlZGVmIEZldGNoQ2FsbGJhY2tcclxuICogQHR5cGUge2Z1bmN0aW9ufVxyXG4gKiBAcGFyYW0gez9FcnJvcn0gZXJyb3IgRXJyb3IsIGlmIGFueSwgb3RoZXJ3aXNlIGBudWxsYFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvbnRlbnRzXSBGaWxlIGNvbnRlbnRzLCBpZiB0aGVyZSBoYXNuJ3QgYmVlbiBhbiBlcnJvclxyXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBPcHRpb25zIGFzIHVzZWQgYnkge0BsaW5rIHV0aWwuZmV0Y2h9LlxyXG4gKiBAdHlwZWRlZiBGZXRjaE9wdGlvbnNcclxuICogQHR5cGUge09iamVjdH1cclxuICogQHByb3BlcnR5IHtib29sZWFufSBbYmluYXJ5PWZhbHNlXSBXaGV0aGVyIGV4cGVjdGluZyBhIGJpbmFyeSByZXNwb25zZVxyXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IFt4aHI9ZmFsc2VdIElmIGB0cnVlYCwgZm9yY2VzIHRoZSB1c2Ugb2YgWE1MSHR0cFJlcXVlc3RcclxuICovXHJcblxyXG4vKipcclxuICogRmV0Y2hlcyB0aGUgY29udGVudHMgb2YgYSBmaWxlLlxyXG4gKiBAbWVtYmVyb2YgdXRpbFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gZmlsZW5hbWUgRmlsZSBwYXRoIG9yIHVybFxyXG4gKiBAcGFyYW0ge0ZldGNoT3B0aW9uc30gb3B0aW9ucyBGZXRjaCBvcHRpb25zXHJcbiAqIEBwYXJhbSB7RmV0Y2hDYWxsYmFja30gY2FsbGJhY2sgQ2FsbGJhY2sgZnVuY3Rpb25cclxuICogQHJldHVybnMge3VuZGVmaW5lZH1cclxuICovXHJcbmZ1bmN0aW9uIGZldGNoKGZpbGVuYW1lLCBvcHRpb25zLCBjYWxsYmFjaykge1xyXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICBjYWxsYmFjayA9IG9wdGlvbnM7XHJcbiAgICAgICAgb3B0aW9ucyA9IHt9O1xyXG4gICAgfSBlbHNlIGlmICghb3B0aW9ucylcclxuICAgICAgICBvcHRpb25zID0ge307XHJcblxyXG4gICAgaWYgKCFjYWxsYmFjaylcclxuICAgICAgICByZXR1cm4gYXNQcm9taXNlKGZldGNoLCB0aGlzLCBmaWxlbmFtZSwgb3B0aW9ucyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8taW52YWxpZC10aGlzXHJcblxyXG4gICAgLy8gaWYgYSBub2RlLWxpa2UgZmlsZXN5c3RlbSBpcyBwcmVzZW50LCB0cnkgaXQgZmlyc3QgYnV0IGZhbGwgYmFjayB0byBYSFIgaWYgbm90aGluZyBpcyBmb3VuZC5cclxuICAgIGlmICghb3B0aW9ucy54aHIgJiYgZnMgJiYgZnMucmVhZEZpbGUpXHJcbiAgICAgICAgcmV0dXJuIGZzLnJlYWRGaWxlKGZpbGVuYW1lLCBmdW5jdGlvbiBmZXRjaFJlYWRGaWxlQ2FsbGJhY2soZXJyLCBjb250ZW50cykge1xyXG4gICAgICAgICAgICByZXR1cm4gZXJyICYmIHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPT0gXCJ1bmRlZmluZWRcIlxyXG4gICAgICAgICAgICAgICAgPyBmZXRjaC54aHIoZmlsZW5hbWUsIG9wdGlvbnMsIGNhbGxiYWNrKVxyXG4gICAgICAgICAgICAgICAgOiBlcnJcclxuICAgICAgICAgICAgICAgID8gY2FsbGJhY2soZXJyKVxyXG4gICAgICAgICAgICAgICAgOiBjYWxsYmFjayhudWxsLCBvcHRpb25zLmJpbmFyeSA/IGNvbnRlbnRzIDogY29udGVudHMudG9TdHJpbmcoXCJ1dGY4XCIpKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAvLyB1c2UgdGhlIFhIUiB2ZXJzaW9uIG90aGVyd2lzZS5cclxuICAgIHJldHVybiBmZXRjaC54aHIoZmlsZW5hbWUsIG9wdGlvbnMsIGNhbGxiYWNrKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEZldGNoZXMgdGhlIGNvbnRlbnRzIG9mIGEgZmlsZS5cclxuICogQG5hbWUgdXRpbC5mZXRjaFxyXG4gKiBAZnVuY3Rpb25cclxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGggRmlsZSBwYXRoIG9yIHVybFxyXG4gKiBAcGFyYW0ge0ZldGNoQ2FsbGJhY2t9IGNhbGxiYWNrIENhbGxiYWNrIGZ1bmN0aW9uXHJcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XHJcbiAqIEB2YXJpYXRpb24gMlxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBGZXRjaGVzIHRoZSBjb250ZW50cyBvZiBhIGZpbGUuXHJcbiAqIEBuYW1lIHV0aWwuZmV0Y2hcclxuICogQGZ1bmN0aW9uXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIEZpbGUgcGF0aCBvciB1cmxcclxuICogQHBhcmFtIHtGZXRjaE9wdGlvbnN9IFtvcHRpb25zXSBGZXRjaCBvcHRpb25zXHJcbiAqIEByZXR1cm5zIHtQcm9taXNlPHN0cmluZ3xVaW50OEFycmF5Pn0gUHJvbWlzZVxyXG4gKiBAdmFyaWF0aW9uIDNcclxuICovXHJcblxyXG4vKiovXHJcbmZldGNoLnhociA9IGZ1bmN0aW9uIGZldGNoX3hocihmaWxlbmFtZSwgb3B0aW9ucywgY2FsbGJhY2spIHtcclxuICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgLyogd29ya3MgZXZlcnl3aGVyZSAqLyA9IGZ1bmN0aW9uIGZldGNoT25SZWFkeVN0YXRlQ2hhbmdlKCkge1xyXG5cclxuICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgIT09IDQpXHJcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcblxyXG4gICAgICAgIC8vIGxvY2FsIGNvcnMgc2VjdXJpdHkgZXJyb3JzIHJldHVybiBzdGF0dXMgMCAvIGVtcHR5IHN0cmluZywgdG9vLiBhZmFpayB0aGlzIGNhbm5vdCBiZVxyXG4gICAgICAgIC8vIHJlbGlhYmx5IGRpc3Rpbmd1aXNoZWQgZnJvbSBhbiBhY3R1YWxseSBlbXB0eSBmaWxlIGZvciBzZWN1cml0eSByZWFzb25zLiBmZWVsIGZyZWVcclxuICAgICAgICAvLyB0byBzZW5kIGEgcHVsbCByZXF1ZXN0IGlmIHlvdSBhcmUgYXdhcmUgb2YgYSBzb2x1dGlvbi5cclxuICAgICAgICBpZiAoeGhyLnN0YXR1cyAhPT0gMCAmJiB4aHIuc3RhdHVzICE9PSAyMDApXHJcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhFcnJvcihcInN0YXR1cyBcIiArIHhoci5zdGF0dXMpKTtcclxuXHJcbiAgICAgICAgLy8gaWYgYmluYXJ5IGRhdGEgaXMgZXhwZWN0ZWQsIG1ha2Ugc3VyZSB0aGF0IHNvbWUgc29ydCBvZiBhcnJheSBpcyByZXR1cm5lZCwgZXZlbiBpZlxyXG4gICAgICAgIC8vIEFycmF5QnVmZmVycyBhcmUgbm90IHN1cHBvcnRlZC4gdGhlIGJpbmFyeSBzdHJpbmcgZmFsbGJhY2ssIGhvd2V2ZXIsIGlzIHVuc2FmZS5cclxuICAgICAgICBpZiAob3B0aW9ucy5iaW5hcnkpIHtcclxuICAgICAgICAgICAgdmFyIGJ1ZmZlciA9IHhoci5yZXNwb25zZTtcclxuICAgICAgICAgICAgaWYgKCFidWZmZXIpIHtcclxuICAgICAgICAgICAgICAgIGJ1ZmZlciA9IFtdO1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB4aHIucmVzcG9uc2VUZXh0Lmxlbmd0aDsgKytpKVxyXG4gICAgICAgICAgICAgICAgICAgIGJ1ZmZlci5wdXNoKHhoci5yZXNwb25zZVRleHQuY2hhckNvZGVBdChpKSAmIDI1NSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwsIHR5cGVvZiBVaW50OEFycmF5ICE9PSBcInVuZGVmaW5lZFwiID8gbmV3IFVpbnQ4QXJyYXkoYnVmZmVyKSA6IGJ1ZmZlcik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBjYWxsYmFjayhudWxsLCB4aHIucmVzcG9uc2VUZXh0KTtcclxuICAgIH07XHJcblxyXG4gICAgaWYgKG9wdGlvbnMuYmluYXJ5KSB7XHJcbiAgICAgICAgLy8gcmVmOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvWE1MSHR0cFJlcXVlc3QvU2VuZGluZ19hbmRfUmVjZWl2aW5nX0JpbmFyeV9EYXRhI1JlY2VpdmluZ19iaW5hcnlfZGF0YV9pbl9vbGRlcl9icm93c2Vyc1xyXG4gICAgICAgIGlmIChcIm92ZXJyaWRlTWltZVR5cGVcIiBpbiB4aHIpXHJcbiAgICAgICAgICAgIHhoci5vdmVycmlkZU1pbWVUeXBlKFwidGV4dC9wbGFpbjsgY2hhcnNldD14LXVzZXItZGVmaW5lZFwiKTtcclxuICAgICAgICB4aHIucmVzcG9uc2VUeXBlID0gXCJhcnJheWJ1ZmZlclwiO1xyXG4gICAgfVxyXG5cclxuICAgIHhoci5vcGVuKFwiR0VUXCIsIGZpbGVuYW1lKTtcclxuICAgIHhoci5zZW5kKCk7XHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@protobufjs/fetch/index.js\n"));

/***/ }),

/***/ "./node_modules/@protobufjs/float/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@protobufjs/float/index.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@protobufjs/float/index.js\n"));

/***/ }),

/***/ "./node_modules/@protobufjs/inquire/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@protobufjs/inquire/index.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmanMvaW5xdWlyZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLCtEQUErRDtBQUMvRDtBQUNBO0FBQ0EsTUFBTSxhQUFhO0FBQ25CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwcm90b2J1ZmpzL2lucXVpcmUvaW5kZXguanM/NDdiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxubW9kdWxlLmV4cG9ydHMgPSBpbnF1aXJlO1xyXG5cclxuLyoqXHJcbiAqIFJlcXVpcmVzIGEgbW9kdWxlIG9ubHkgaWYgYXZhaWxhYmxlLlxyXG4gKiBAbWVtYmVyb2YgdXRpbFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gbW9kdWxlTmFtZSBNb2R1bGUgdG8gcmVxdWlyZVxyXG4gKiBAcmV0dXJucyB7P09iamVjdH0gUmVxdWlyZWQgbW9kdWxlIGlmIGF2YWlsYWJsZSBhbmQgbm90IGVtcHR5LCBvdGhlcndpc2UgYG51bGxgXHJcbiAqL1xyXG5mdW5jdGlvbiBpbnF1aXJlKG1vZHVsZU5hbWUpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgdmFyIG1vZCA9IGV2YWwoXCJxdWlyZVwiLnJlcGxhY2UoL14vLFwicmVcIikpKG1vZHVsZU5hbWUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWV2YWxcclxuICAgICAgICBpZiAobW9kICYmIChtb2QubGVuZ3RoIHx8IE9iamVjdC5rZXlzKG1vZCkubGVuZ3RoKSlcclxuICAgICAgICAgICAgcmV0dXJuIG1vZDtcclxuICAgIH0gY2F0Y2ggKGUpIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHlcclxuICAgIHJldHVybiBudWxsO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@protobufjs/inquire/index.js\n"));

/***/ }),

/***/ "./node_modules/@protobufjs/path/index.js":
/*!************************************************!*\
  !*** ./node_modules/@protobufjs/path/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmanMvcGF0aC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixHQUFHO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmanMvcGF0aC9pbmRleC5qcz8wOWVlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLyoqXHJcbiAqIEEgbWluaW1hbCBwYXRoIG1vZHVsZSB0byByZXNvbHZlIFVuaXgsIFdpbmRvd3MgYW5kIFVSTCBwYXRocyBhbGlrZS5cclxuICogQG1lbWJlcm9mIHV0aWxcclxuICogQG5hbWVzcGFjZVxyXG4gKi9cclxudmFyIHBhdGggPSBleHBvcnRzO1xyXG5cclxudmFyIGlzQWJzb2x1dGUgPVxyXG4vKipcclxuICogVGVzdHMgaWYgdGhlIHNwZWNpZmllZCBwYXRoIGlzIGFic29sdXRlLlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gcGF0aCBQYXRoIHRvIHRlc3RcclxuICogQHJldHVybnMge2Jvb2xlYW59IGB0cnVlYCBpZiBwYXRoIGlzIGFic29sdXRlXHJcbiAqL1xyXG5wYXRoLmlzQWJzb2x1dGUgPSBmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGgpIHtcclxuICAgIHJldHVybiAvXig/OlxcL3xcXHcrOikvLnRlc3QocGF0aCk7XHJcbn07XHJcblxyXG52YXIgbm9ybWFsaXplID1cclxuLyoqXHJcbiAqIE5vcm1hbGl6ZXMgdGhlIHNwZWNpZmllZCBwYXRoLlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gcGF0aCBQYXRoIHRvIG5vcm1hbGl6ZVxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBOb3JtYWxpemVkIHBhdGhcclxuICovXHJcbnBhdGgubm9ybWFsaXplID0gZnVuY3Rpb24gbm9ybWFsaXplKHBhdGgpIHtcclxuICAgIHBhdGggPSBwYXRoLnJlcGxhY2UoL1xcXFwvZywgXCIvXCIpXHJcbiAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXC97Mix9L2csIFwiL1wiKTtcclxuICAgIHZhciBwYXJ0cyAgICA9IHBhdGguc3BsaXQoXCIvXCIpLFxyXG4gICAgICAgIGFic29sdXRlID0gaXNBYnNvbHV0ZShwYXRoKSxcclxuICAgICAgICBwcmVmaXggICA9IFwiXCI7XHJcbiAgICBpZiAoYWJzb2x1dGUpXHJcbiAgICAgICAgcHJlZml4ID0gcGFydHMuc2hpZnQoKSArIFwiL1wiO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXJ0cy5sZW5ndGg7KSB7XHJcbiAgICAgICAgaWYgKHBhcnRzW2ldID09PSBcIi4uXCIpIHtcclxuICAgICAgICAgICAgaWYgKGkgPiAwICYmIHBhcnRzW2kgLSAxXSAhPT0gXCIuLlwiKVxyXG4gICAgICAgICAgICAgICAgcGFydHMuc3BsaWNlKC0taSwgMik7XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKGFic29sdXRlKVxyXG4gICAgICAgICAgICAgICAgcGFydHMuc3BsaWNlKGksIDEpO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICArK2k7XHJcbiAgICAgICAgfSBlbHNlIGlmIChwYXJ0c1tpXSA9PT0gXCIuXCIpXHJcbiAgICAgICAgICAgIHBhcnRzLnNwbGljZShpLCAxKTtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICsraTtcclxuICAgIH1cclxuICAgIHJldHVybiBwcmVmaXggKyBwYXJ0cy5qb2luKFwiL1wiKTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBSZXNvbHZlcyB0aGUgc3BlY2lmaWVkIGluY2x1ZGUgcGF0aCBhZ2FpbnN0IHRoZSBzcGVjaWZpZWQgb3JpZ2luIHBhdGguXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBvcmlnaW5QYXRoIFBhdGggdG8gdGhlIG9yaWdpbiBmaWxlXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBpbmNsdWRlUGF0aCBJbmNsdWRlIHBhdGggcmVsYXRpdmUgdG8gb3JpZ2luIHBhdGhcclxuICogQHBhcmFtIHtib29sZWFufSBbYWxyZWFkeU5vcm1hbGl6ZWQ9ZmFsc2VdIGB0cnVlYCBpZiBib3RoIHBhdGhzIGFyZSBhbHJlYWR5IGtub3duIHRvIGJlIG5vcm1hbGl6ZWRcclxuICogQHJldHVybnMge3N0cmluZ30gUGF0aCB0byB0aGUgaW5jbHVkZSBmaWxlXHJcbiAqL1xyXG5wYXRoLnJlc29sdmUgPSBmdW5jdGlvbiByZXNvbHZlKG9yaWdpblBhdGgsIGluY2x1ZGVQYXRoLCBhbHJlYWR5Tm9ybWFsaXplZCkge1xyXG4gICAgaWYgKCFhbHJlYWR5Tm9ybWFsaXplZClcclxuICAgICAgICBpbmNsdWRlUGF0aCA9IG5vcm1hbGl6ZShpbmNsdWRlUGF0aCk7XHJcbiAgICBpZiAoaXNBYnNvbHV0ZShpbmNsdWRlUGF0aCkpXHJcbiAgICAgICAgcmV0dXJuIGluY2x1ZGVQYXRoO1xyXG4gICAgaWYgKCFhbHJlYWR5Tm9ybWFsaXplZClcclxuICAgICAgICBvcmlnaW5QYXRoID0gbm9ybWFsaXplKG9yaWdpblBhdGgpO1xyXG4gICAgcmV0dXJuIChvcmlnaW5QYXRoID0gb3JpZ2luUGF0aC5yZXBsYWNlKC8oPzpcXC98XilbXi9dKyQvLCBcIlwiKSkubGVuZ3RoID8gbm9ybWFsaXplKG9yaWdpblBhdGggKyBcIi9cIiArIGluY2x1ZGVQYXRoKSA6IGluY2x1ZGVQYXRoO1xyXG59O1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@protobufjs/path/index.js\n"));

/***/ }),

/***/ "./node_modules/@protobufjs/pool/index.js":
/*!************************************************!*\
  !*** ./node_modules/@protobufjs/pool/index.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmanMvcG9vbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixnQkFBZ0I7QUFDNUM7QUFDQSxVQUFVO0FBQ1YsV0FBVyxRQUFRO0FBQ25CLGFBQWEsWUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0JBQWdCO0FBQ3hDO0FBQ0EsVUFBVTtBQUNWLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxZQUFZO0FBQ3pCLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUIsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwcm90b2J1ZmpzL3Bvb2wvaW5kZXguanM/MGZhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxubW9kdWxlLmV4cG9ydHMgPSBwb29sO1xyXG5cclxuLyoqXHJcbiAqIEFuIGFsbG9jYXRvciBhcyB1c2VkIGJ5IHtAbGluayB1dGlsLnBvb2x9LlxyXG4gKiBAdHlwZWRlZiBQb29sQWxsb2NhdG9yXHJcbiAqIEB0eXBlIHtmdW5jdGlvbn1cclxuICogQHBhcmFtIHtudW1iZXJ9IHNpemUgQnVmZmVyIHNpemVcclxuICogQHJldHVybnMge1VpbnQ4QXJyYXl9IEJ1ZmZlclxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBBIHNsaWNlciBhcyB1c2VkIGJ5IHtAbGluayB1dGlsLnBvb2x9LlxyXG4gKiBAdHlwZWRlZiBQb29sU2xpY2VyXHJcbiAqIEB0eXBlIHtmdW5jdGlvbn1cclxuICogQHBhcmFtIHtudW1iZXJ9IHN0YXJ0IFN0YXJ0IG9mZnNldFxyXG4gKiBAcGFyYW0ge251bWJlcn0gZW5kIEVuZCBvZmZzZXRcclxuICogQHJldHVybnMge1VpbnQ4QXJyYXl9IEJ1ZmZlciBzbGljZVxyXG4gKiBAdGhpcyB7VWludDhBcnJheX1cclxuICovXHJcblxyXG4vKipcclxuICogQSBnZW5lcmFsIHB1cnBvc2UgYnVmZmVyIHBvb2wuXHJcbiAqIEBtZW1iZXJvZiB1dGlsXHJcbiAqIEBmdW5jdGlvblxyXG4gKiBAcGFyYW0ge1Bvb2xBbGxvY2F0b3J9IGFsbG9jIEFsbG9jYXRvclxyXG4gKiBAcGFyYW0ge1Bvb2xTbGljZXJ9IHNsaWNlIFNsaWNlclxyXG4gKiBAcGFyYW0ge251bWJlcn0gW3NpemU9ODE5Ml0gU2xhYiBzaXplXHJcbiAqIEByZXR1cm5zIHtQb29sQWxsb2NhdG9yfSBQb29sZWQgYWxsb2NhdG9yXHJcbiAqL1xyXG5mdW5jdGlvbiBwb29sKGFsbG9jLCBzbGljZSwgc2l6ZSkge1xyXG4gICAgdmFyIFNJWkUgICA9IHNpemUgfHwgODE5MjtcclxuICAgIHZhciBNQVggICAgPSBTSVpFID4+PiAxO1xyXG4gICAgdmFyIHNsYWIgICA9IG51bGw7XHJcbiAgICB2YXIgb2Zmc2V0ID0gU0laRTtcclxuICAgIHJldHVybiBmdW5jdGlvbiBwb29sX2FsbG9jKHNpemUpIHtcclxuICAgICAgICBpZiAoc2l6ZSA8IDEgfHwgc2l6ZSA+IE1BWClcclxuICAgICAgICAgICAgcmV0dXJuIGFsbG9jKHNpemUpO1xyXG4gICAgICAgIGlmIChvZmZzZXQgKyBzaXplID4gU0laRSkge1xyXG4gICAgICAgICAgICBzbGFiID0gYWxsb2MoU0laRSk7XHJcbiAgICAgICAgICAgIG9mZnNldCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBidWYgPSBzbGljZS5jYWxsKHNsYWIsIG9mZnNldCwgb2Zmc2V0ICs9IHNpemUpO1xyXG4gICAgICAgIGlmIChvZmZzZXQgJiA3KSAvLyBhbGlnbiB0byAzMiBiaXRcclxuICAgICAgICAgICAgb2Zmc2V0ID0gKG9mZnNldCB8IDcpICsgMTtcclxuICAgICAgICByZXR1cm4gYnVmO1xyXG4gICAgfTtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@protobufjs/pool/index.js\n"));

/***/ }),

/***/ "./node_modules/@protobufjs/utf8/index.js":
/*!************************************************!*\
  !*** ./node_modules/@protobufjs/utf8/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmanMvdXRmOC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWZqcy91dGY4L2luZGV4LmpzP2I0YzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vKipcclxuICogQSBtaW5pbWFsIFVURjggaW1wbGVtZW50YXRpb24gZm9yIG51bWJlciBhcnJheXMuXHJcbiAqIEBtZW1iZXJvZiB1dGlsXHJcbiAqIEBuYW1lc3BhY2VcclxuICovXHJcbnZhciB1dGY4ID0gZXhwb3J0cztcclxuXHJcbi8qKlxyXG4gKiBDYWxjdWxhdGVzIHRoZSBVVEY4IGJ5dGUgbGVuZ3RoIG9mIGEgc3RyaW5nLlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIFN0cmluZ1xyXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBCeXRlIGxlbmd0aFxyXG4gKi9cclxudXRmOC5sZW5ndGggPSBmdW5jdGlvbiB1dGY4X2xlbmd0aChzdHJpbmcpIHtcclxuICAgIHZhciBsZW4gPSAwLFxyXG4gICAgICAgIGMgPSAwO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHJpbmcubGVuZ3RoOyArK2kpIHtcclxuICAgICAgICBjID0gc3RyaW5nLmNoYXJDb2RlQXQoaSk7XHJcbiAgICAgICAgaWYgKGMgPCAxMjgpXHJcbiAgICAgICAgICAgIGxlbiArPSAxO1xyXG4gICAgICAgIGVsc2UgaWYgKGMgPCAyMDQ4KVxyXG4gICAgICAgICAgICBsZW4gKz0gMjtcclxuICAgICAgICBlbHNlIGlmICgoYyAmIDB4RkMwMCkgPT09IDB4RDgwMCAmJiAoc3RyaW5nLmNoYXJDb2RlQXQoaSArIDEpICYgMHhGQzAwKSA9PT0gMHhEQzAwKSB7XHJcbiAgICAgICAgICAgICsraTtcclxuICAgICAgICAgICAgbGVuICs9IDQ7XHJcbiAgICAgICAgfSBlbHNlXHJcbiAgICAgICAgICAgIGxlbiArPSAzO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGxlbjtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBSZWFkcyBVVEY4IGJ5dGVzIGFzIGEgc3RyaW5nLlxyXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ1ZmZlciBTb3VyY2UgYnVmZmVyXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBzdGFydCBTb3VyY2Ugc3RhcnRcclxuICogQHBhcmFtIHtudW1iZXJ9IGVuZCBTb3VyY2UgZW5kXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFN0cmluZyByZWFkXHJcbiAqL1xyXG51dGY4LnJlYWQgPSBmdW5jdGlvbiB1dGY4X3JlYWQoYnVmZmVyLCBzdGFydCwgZW5kKSB7XHJcbiAgICB2YXIgbGVuID0gZW5kIC0gc3RhcnQ7XHJcbiAgICBpZiAobGVuIDwgMSlcclxuICAgICAgICByZXR1cm4gXCJcIjtcclxuICAgIHZhciBwYXJ0cyA9IG51bGwsXHJcbiAgICAgICAgY2h1bmsgPSBbXSxcclxuICAgICAgICBpID0gMCwgLy8gY2hhciBvZmZzZXRcclxuICAgICAgICB0OyAgICAgLy8gdGVtcG9yYXJ5XHJcbiAgICB3aGlsZSAoc3RhcnQgPCBlbmQpIHtcclxuICAgICAgICB0ID0gYnVmZmVyW3N0YXJ0KytdO1xyXG4gICAgICAgIGlmICh0IDwgMTI4KVxyXG4gICAgICAgICAgICBjaHVua1tpKytdID0gdDtcclxuICAgICAgICBlbHNlIGlmICh0ID4gMTkxICYmIHQgPCAyMjQpXHJcbiAgICAgICAgICAgIGNodW5rW2krK10gPSAodCAmIDMxKSA8PCA2IHwgYnVmZmVyW3N0YXJ0KytdICYgNjM7XHJcbiAgICAgICAgZWxzZSBpZiAodCA+IDIzOSAmJiB0IDwgMzY1KSB7XHJcbiAgICAgICAgICAgIHQgPSAoKHQgJiA3KSA8PCAxOCB8IChidWZmZXJbc3RhcnQrK10gJiA2MykgPDwgMTIgfCAoYnVmZmVyW3N0YXJ0KytdICYgNjMpIDw8IDYgfCBidWZmZXJbc3RhcnQrK10gJiA2MykgLSAweDEwMDAwO1xyXG4gICAgICAgICAgICBjaHVua1tpKytdID0gMHhEODAwICsgKHQgPj4gMTApO1xyXG4gICAgICAgICAgICBjaHVua1tpKytdID0gMHhEQzAwICsgKHQgJiAxMDIzKTtcclxuICAgICAgICB9IGVsc2VcclxuICAgICAgICAgICAgY2h1bmtbaSsrXSA9ICh0ICYgMTUpIDw8IDEyIHwgKGJ1ZmZlcltzdGFydCsrXSAmIDYzKSA8PCA2IHwgYnVmZmVyW3N0YXJ0KytdICYgNjM7XHJcbiAgICAgICAgaWYgKGkgPiA4MTkxKSB7XHJcbiAgICAgICAgICAgIChwYXJ0cyB8fCAocGFydHMgPSBbXSkpLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsIGNodW5rKSk7XHJcbiAgICAgICAgICAgIGkgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmIChwYXJ0cykge1xyXG4gICAgICAgIGlmIChpKVxyXG4gICAgICAgICAgICBwYXJ0cy5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLCBjaHVuay5zbGljZSgwLCBpKSkpO1xyXG4gICAgICAgIHJldHVybiBwYXJ0cy5qb2luKFwiXCIpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLCBjaHVuay5zbGljZSgwLCBpKSk7XHJcbn07XHJcblxyXG4vKipcclxuICogV3JpdGVzIGEgc3RyaW5nIGFzIFVURjggYnl0ZXMuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgU291cmNlIHN0cmluZ1xyXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ1ZmZlciBEZXN0aW5hdGlvbiBidWZmZXJcclxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldCBEZXN0aW5hdGlvbiBvZmZzZXRcclxuICogQHJldHVybnMge251bWJlcn0gQnl0ZXMgd3JpdHRlblxyXG4gKi9cclxudXRmOC53cml0ZSA9IGZ1bmN0aW9uIHV0Zjhfd3JpdGUoc3RyaW5nLCBidWZmZXIsIG9mZnNldCkge1xyXG4gICAgdmFyIHN0YXJ0ID0gb2Zmc2V0LFxyXG4gICAgICAgIGMxLCAvLyBjaGFyYWN0ZXIgMVxyXG4gICAgICAgIGMyOyAvLyBjaGFyYWN0ZXIgMlxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHJpbmcubGVuZ3RoOyArK2kpIHtcclxuICAgICAgICBjMSA9IHN0cmluZy5jaGFyQ29kZUF0KGkpO1xyXG4gICAgICAgIGlmIChjMSA8IDEyOCkge1xyXG4gICAgICAgICAgICBidWZmZXJbb2Zmc2V0KytdID0gYzE7XHJcbiAgICAgICAgfSBlbHNlIGlmIChjMSA8IDIwNDgpIHtcclxuICAgICAgICAgICAgYnVmZmVyW29mZnNldCsrXSA9IGMxID4+IDYgICAgICAgfCAxOTI7XHJcbiAgICAgICAgICAgIGJ1ZmZlcltvZmZzZXQrK10gPSBjMSAgICAgICAmIDYzIHwgMTI4O1xyXG4gICAgICAgIH0gZWxzZSBpZiAoKGMxICYgMHhGQzAwKSA9PT0gMHhEODAwICYmICgoYzIgPSBzdHJpbmcuY2hhckNvZGVBdChpICsgMSkpICYgMHhGQzAwKSA9PT0gMHhEQzAwKSB7XHJcbiAgICAgICAgICAgIGMxID0gMHgxMDAwMCArICgoYzEgJiAweDAzRkYpIDw8IDEwKSArIChjMiAmIDB4MDNGRik7XHJcbiAgICAgICAgICAgICsraTtcclxuICAgICAgICAgICAgYnVmZmVyW29mZnNldCsrXSA9IGMxID4+IDE4ICAgICAgfCAyNDA7XHJcbiAgICAgICAgICAgIGJ1ZmZlcltvZmZzZXQrK10gPSBjMSA+PiAxMiAmIDYzIHwgMTI4O1xyXG4gICAgICAgICAgICBidWZmZXJbb2Zmc2V0KytdID0gYzEgPj4gNiAgJiA2MyB8IDEyODtcclxuICAgICAgICAgICAgYnVmZmVyW29mZnNldCsrXSA9IGMxICAgICAgICYgNjMgfCAxMjg7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgYnVmZmVyW29mZnNldCsrXSA9IGMxID4+IDEyICAgICAgfCAyMjQ7XHJcbiAgICAgICAgICAgIGJ1ZmZlcltvZmZzZXQrK10gPSBjMSA+PiA2ICAmIDYzIHwgMTI4O1xyXG4gICAgICAgICAgICBidWZmZXJbb2Zmc2V0KytdID0gYzEgICAgICAgJiA2MyB8IDEyODtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gb2Zmc2V0IC0gc3RhcnQ7XHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@protobufjs/utf8/index.js\n"));

/***/ }),

/***/ "./node_modules/@sinclair/typebox/errors/errors.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sinclair/typebox/errors/errors.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/errors\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Errors = exports.ValueErrorIterator = exports.EscapeKey = exports.ValueErrorsUnknownTypeError = exports.ValueErrorType = void 0;\nconst guard_1 = __webpack_require__(/*! ../value/guard */ \"./node_modules/@sinclair/typebox/value/guard.js\");\nconst system_1 = __webpack_require__(/*! ../system/system */ \"./node_modules/@sinclair/typebox/system/system.js\");\nconst deref_1 = __webpack_require__(/*! ../value/deref */ \"./node_modules/@sinclair/typebox/value/deref.js\");\nconst hash_1 = __webpack_require__(/*! ../value/hash */ \"./node_modules/@sinclair/typebox/value/hash.js\");\nconst Types = __webpack_require__(/*! ../typebox */ \"./node_modules/@sinclair/typebox/typebox.js\");\n// --------------------------------------------------------------------------\n// ValueErrorType\n// --------------------------------------------------------------------------\nvar ValueErrorType;\n(function (ValueErrorType) {\n    ValueErrorType[ValueErrorType[\"ArrayContains\"] = 0] = \"ArrayContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMaxContains\"] = 1] = \"ArrayMaxContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMaxItems\"] = 2] = \"ArrayMaxItems\";\n    ValueErrorType[ValueErrorType[\"ArrayMinContains\"] = 3] = \"ArrayMinContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMinItems\"] = 4] = \"ArrayMinItems\";\n    ValueErrorType[ValueErrorType[\"ArrayUniqueItems\"] = 5] = \"ArrayUniqueItems\";\n    ValueErrorType[ValueErrorType[\"Array\"] = 6] = \"Array\";\n    ValueErrorType[ValueErrorType[\"AsyncIterator\"] = 7] = \"AsyncIterator\";\n    ValueErrorType[ValueErrorType[\"BigIntExclusiveMaximum\"] = 8] = \"BigIntExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"BigIntExclusiveMinimum\"] = 9] = \"BigIntExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"BigIntMaximum\"] = 10] = \"BigIntMaximum\";\n    ValueErrorType[ValueErrorType[\"BigIntMinimum\"] = 11] = \"BigIntMinimum\";\n    ValueErrorType[ValueErrorType[\"BigIntMultipleOf\"] = 12] = \"BigIntMultipleOf\";\n    ValueErrorType[ValueErrorType[\"BigInt\"] = 13] = \"BigInt\";\n    ValueErrorType[ValueErrorType[\"Boolean\"] = 14] = \"Boolean\";\n    ValueErrorType[ValueErrorType[\"DateExclusiveMaximumTimestamp\"] = 15] = \"DateExclusiveMaximumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateExclusiveMinimumTimestamp\"] = 16] = \"DateExclusiveMinimumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMaximumTimestamp\"] = 17] = \"DateMaximumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMinimumTimestamp\"] = 18] = \"DateMinimumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMultipleOfTimestamp\"] = 19] = \"DateMultipleOfTimestamp\";\n    ValueErrorType[ValueErrorType[\"Date\"] = 20] = \"Date\";\n    ValueErrorType[ValueErrorType[\"Function\"] = 21] = \"Function\";\n    ValueErrorType[ValueErrorType[\"IntegerExclusiveMaximum\"] = 22] = \"IntegerExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"IntegerExclusiveMinimum\"] = 23] = \"IntegerExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"IntegerMaximum\"] = 24] = \"IntegerMaximum\";\n    ValueErrorType[ValueErrorType[\"IntegerMinimum\"] = 25] = \"IntegerMinimum\";\n    ValueErrorType[ValueErrorType[\"IntegerMultipleOf\"] = 26] = \"IntegerMultipleOf\";\n    ValueErrorType[ValueErrorType[\"Integer\"] = 27] = \"Integer\";\n    ValueErrorType[ValueErrorType[\"IntersectUnevaluatedProperties\"] = 28] = \"IntersectUnevaluatedProperties\";\n    ValueErrorType[ValueErrorType[\"Intersect\"] = 29] = \"Intersect\";\n    ValueErrorType[ValueErrorType[\"Iterator\"] = 30] = \"Iterator\";\n    ValueErrorType[ValueErrorType[\"Kind\"] = 31] = \"Kind\";\n    ValueErrorType[ValueErrorType[\"Literal\"] = 32] = \"Literal\";\n    ValueErrorType[ValueErrorType[\"Never\"] = 33] = \"Never\";\n    ValueErrorType[ValueErrorType[\"Not\"] = 34] = \"Not\";\n    ValueErrorType[ValueErrorType[\"Null\"] = 35] = \"Null\";\n    ValueErrorType[ValueErrorType[\"NumberExclusiveMaximum\"] = 36] = \"NumberExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"NumberExclusiveMinimum\"] = 37] = \"NumberExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"NumberMaximum\"] = 38] = \"NumberMaximum\";\n    ValueErrorType[ValueErrorType[\"NumberMinimum\"] = 39] = \"NumberMinimum\";\n    ValueErrorType[ValueErrorType[\"NumberMultipleOf\"] = 40] = \"NumberMultipleOf\";\n    ValueErrorType[ValueErrorType[\"Number\"] = 41] = \"Number\";\n    ValueErrorType[ValueErrorType[\"ObjectAdditionalProperties\"] = 42] = \"ObjectAdditionalProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectMaxProperties\"] = 43] = \"ObjectMaxProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectMinProperties\"] = 44] = \"ObjectMinProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectRequiredProperty\"] = 45] = \"ObjectRequiredProperty\";\n    ValueErrorType[ValueErrorType[\"Object\"] = 46] = \"Object\";\n    ValueErrorType[ValueErrorType[\"Promise\"] = 47] = \"Promise\";\n    ValueErrorType[ValueErrorType[\"StringFormatUnknown\"] = 48] = \"StringFormatUnknown\";\n    ValueErrorType[ValueErrorType[\"StringFormat\"] = 49] = \"StringFormat\";\n    ValueErrorType[ValueErrorType[\"StringMaxLength\"] = 50] = \"StringMaxLength\";\n    ValueErrorType[ValueErrorType[\"StringMinLength\"] = 51] = \"StringMinLength\";\n    ValueErrorType[ValueErrorType[\"StringPattern\"] = 52] = \"StringPattern\";\n    ValueErrorType[ValueErrorType[\"String\"] = 53] = \"String\";\n    ValueErrorType[ValueErrorType[\"Symbol\"] = 54] = \"Symbol\";\n    ValueErrorType[ValueErrorType[\"TupleLength\"] = 55] = \"TupleLength\";\n    ValueErrorType[ValueErrorType[\"Tuple\"] = 56] = \"Tuple\";\n    ValueErrorType[ValueErrorType[\"Uint8ArrayMaxByteLength\"] = 57] = \"Uint8ArrayMaxByteLength\";\n    ValueErrorType[ValueErrorType[\"Uint8ArrayMinByteLength\"] = 58] = \"Uint8ArrayMinByteLength\";\n    ValueErrorType[ValueErrorType[\"Uint8Array\"] = 59] = \"Uint8Array\";\n    ValueErrorType[ValueErrorType[\"Undefined\"] = 60] = \"Undefined\";\n    ValueErrorType[ValueErrorType[\"Union\"] = 61] = \"Union\";\n    ValueErrorType[ValueErrorType[\"Void\"] = 62] = \"Void\";\n})(ValueErrorType || (exports.ValueErrorType = ValueErrorType = {}));\n// --------------------------------------------------------------------------\n// ValueErrors\n// --------------------------------------------------------------------------\nclass ValueErrorsUnknownTypeError extends Types.TypeBoxError {\n    constructor(schema) {\n        super('Unknown type');\n        this.schema = schema;\n    }\n}\nexports.ValueErrorsUnknownTypeError = ValueErrorsUnknownTypeError;\n// --------------------------------------------------------------------------\n// EscapeKey\n// --------------------------------------------------------------------------\nfunction EscapeKey(key) {\n    return key.replace(/~/g, '~0').replace(/\\//g, '~1'); // RFC6901 Path\n}\nexports.EscapeKey = EscapeKey;\n// --------------------------------------------------------------------------\n// Guards\n// --------------------------------------------------------------------------\nfunction IsDefined(value) {\n    return value !== undefined;\n}\n// --------------------------------------------------------------------------\n// ValueErrorIterator\n// --------------------------------------------------------------------------\nclass ValueErrorIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator;\n    }\n    /** Returns the first value error or undefined if no errors */\n    First() {\n        const next = this.iterator.next();\n        return next.done ? undefined : next.value;\n    }\n}\nexports.ValueErrorIterator = ValueErrorIterator;\n// --------------------------------------------------------------------------\n// Create\n// --------------------------------------------------------------------------\nfunction Create(type, schema, path, value) {\n    return { type, schema, path, value, message: system_1.TypeSystemErrorFunction.Get()(schema, type) };\n}\n// --------------------------------------------------------------------------\n// Types\n// --------------------------------------------------------------------------\nfunction* TAny(schema, references, path, value) { }\nfunction* TArray(schema, references, path, value) {\n    if (!(0, guard_1.IsArray)(value)) {\n        return yield Create(ValueErrorType.Array, schema, path, value);\n    }\n    if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {\n        yield Create(ValueErrorType.ArrayMinItems, schema, path, value);\n    }\n    if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {\n        yield Create(ValueErrorType.ArrayMaxItems, schema, path, value);\n    }\n    for (let i = 0; i < value.length; i++) {\n        yield* Visit(schema.items, references, `${path}/${i}`, value[i]);\n    }\n    // prettier-ignore\n    if (schema.uniqueItems === true && !((function () { const set = new Set(); for (const element of value) {\n        const hashed = (0, hash_1.Hash)(element);\n        if (set.has(hashed)) {\n            return false;\n        }\n        else {\n            set.add(hashed);\n        }\n    } return true; })())) {\n        yield Create(ValueErrorType.ArrayUniqueItems, schema, path, value);\n    }\n    // contains\n    if (!(IsDefined(schema.contains) || IsDefined(schema.minContains) || IsDefined(schema.maxContains))) {\n        return;\n    }\n    const containsSchema = IsDefined(schema.contains) ? schema.contains : Types.Type.Never();\n    const containsCount = value.reduce((acc, value, index) => (Visit(containsSchema, references, `${path}${index}`, value).next().done === true ? acc + 1 : acc), 0);\n    if (containsCount === 0) {\n        yield Create(ValueErrorType.ArrayContains, schema, path, value);\n    }\n    if ((0, guard_1.IsNumber)(schema.minContains) && containsCount < schema.minContains) {\n        yield Create(ValueErrorType.ArrayMinContains, schema, path, value);\n    }\n    if ((0, guard_1.IsNumber)(schema.maxContains) && containsCount > schema.maxContains) {\n        yield Create(ValueErrorType.ArrayMaxContains, schema, path, value);\n    }\n}\nfunction* TAsyncIterator(schema, references, path, value) {\n    if (!(0, guard_1.IsAsyncIterator)(value))\n        yield Create(ValueErrorType.AsyncIterator, schema, path, value);\n}\nfunction* TBigInt(schema, references, path, value) {\n    if (!(0, guard_1.IsBigInt)(value))\n        return yield Create(ValueErrorType.BigInt, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.BigIntExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.BigIntExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.BigIntMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.BigIntMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {\n        yield Create(ValueErrorType.BigIntMultipleOf, schema, path, value);\n    }\n}\nfunction* TBoolean(schema, references, path, value) {\n    if (!(0, guard_1.IsBoolean)(value))\n        yield Create(ValueErrorType.Boolean, schema, path, value);\n}\nfunction* TConstructor(schema, references, path, value) {\n    yield* Visit(schema.returns, references, path, value.prototype);\n}\nfunction* TDate(schema, references, path, value) {\n    if (!(0, guard_1.IsDate)(value))\n        return yield Create(ValueErrorType.Date, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {\n        yield Create(ValueErrorType.DateExclusiveMaximumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {\n        yield Create(ValueErrorType.DateExclusiveMinimumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {\n        yield Create(ValueErrorType.DateMaximumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {\n        yield Create(ValueErrorType.DateMinimumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {\n        yield Create(ValueErrorType.DateMultipleOfTimestamp, schema, path, value);\n    }\n}\nfunction* TFunction(schema, references, path, value) {\n    if (!(0, guard_1.IsFunction)(value))\n        yield Create(ValueErrorType.Function, schema, path, value);\n}\nfunction* TInteger(schema, references, path, value) {\n    if (!(0, guard_1.IsInteger)(value))\n        return yield Create(ValueErrorType.Integer, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.IntegerExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.IntegerExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.IntegerMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.IntegerMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        yield Create(ValueErrorType.IntegerMultipleOf, schema, path, value);\n    }\n}\nfunction* TIntersect(schema, references, path, value) {\n    for (const inner of schema.allOf) {\n        const next = Visit(inner, references, path, value).next();\n        if (!next.done) {\n            yield Create(ValueErrorType.Intersect, schema, path, value);\n            yield next.value;\n        }\n    }\n    if (schema.unevaluatedProperties === false) {\n        const keyCheck = new RegExp(Types.KeyResolver.ResolvePattern(schema));\n        for (const valueKey of Object.getOwnPropertyNames(value)) {\n            if (!keyCheck.test(valueKey)) {\n                yield Create(ValueErrorType.IntersectUnevaluatedProperties, schema, `${path}/${valueKey}`, value);\n            }\n        }\n    }\n    if (typeof schema.unevaluatedProperties === 'object') {\n        const keyCheck = new RegExp(Types.KeyResolver.ResolvePattern(schema));\n        for (const valueKey of Object.getOwnPropertyNames(value)) {\n            if (!keyCheck.test(valueKey)) {\n                const next = Visit(schema.unevaluatedProperties, references, `${path}/${valueKey}`, value[valueKey]).next();\n                if (!next.done)\n                    yield next.value; // yield interior\n            }\n        }\n    }\n}\nfunction* TIterator(schema, references, path, value) {\n    if (!(0, guard_1.IsIterator)(value))\n        yield Create(ValueErrorType.Iterator, schema, path, value);\n}\nfunction* TLiteral(schema, references, path, value) {\n    if (!(value === schema.const))\n        yield Create(ValueErrorType.Literal, schema, path, value);\n}\nfunction* TNever(schema, references, path, value) {\n    yield Create(ValueErrorType.Never, schema, path, value);\n}\nfunction* TNot(schema, references, path, value) {\n    if (Visit(schema.not, references, path, value).next().done === true)\n        yield Create(ValueErrorType.Not, schema, path, value);\n}\nfunction* TNull(schema, references, path, value) {\n    if (!(0, guard_1.IsNull)(value))\n        yield Create(ValueErrorType.Null, schema, path, value);\n}\nfunction* TNumber(schema, references, path, value) {\n    if (!system_1.TypeSystemPolicy.IsNumberLike(value))\n        return yield Create(ValueErrorType.Number, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.NumberExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.NumberExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.NumberMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.NumberMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        yield Create(ValueErrorType.NumberMultipleOf, schema, path, value);\n    }\n}\nfunction* TObject(schema, references, path, value) {\n    if (!system_1.TypeSystemPolicy.IsObjectLike(value))\n        return yield Create(ValueErrorType.Object, schema, path, value);\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);\n    }\n    const requiredKeys = Array.isArray(schema.required) ? schema.required : [];\n    const knownKeys = Object.getOwnPropertyNames(schema.properties);\n    const unknownKeys = Object.getOwnPropertyNames(value);\n    for (const requiredKey of requiredKeys) {\n        if (unknownKeys.includes(requiredKey))\n            continue;\n        yield Create(ValueErrorType.ObjectRequiredProperty, schema.properties[requiredKey], `${path}/${EscapeKey(requiredKey)}`, undefined);\n    }\n    if (schema.additionalProperties === false) {\n        for (const valueKey of unknownKeys) {\n            if (!knownKeys.includes(valueKey)) {\n                yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);\n            }\n        }\n    }\n    if (typeof schema.additionalProperties === 'object') {\n        for (const valueKey of unknownKeys) {\n            if (knownKeys.includes(valueKey))\n                continue;\n            yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);\n        }\n    }\n    for (const knownKey of knownKeys) {\n        const property = schema.properties[knownKey];\n        if (schema.required && schema.required.includes(knownKey)) {\n            yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);\n            if (Types.ExtendsUndefined.Check(schema) && !(knownKey in value)) {\n                yield Create(ValueErrorType.ObjectRequiredProperty, property, `${path}/${EscapeKey(knownKey)}`, undefined);\n            }\n        }\n        else {\n            if (system_1.TypeSystemPolicy.IsExactOptionalProperty(value, knownKey)) {\n                yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);\n            }\n        }\n    }\n}\nfunction* TPromise(schema, references, path, value) {\n    if (!(0, guard_1.IsPromise)(value))\n        yield Create(ValueErrorType.Promise, schema, path, value);\n}\nfunction* TRecord(schema, references, path, value) {\n    if (!system_1.TypeSystemPolicy.IsRecordLike(value))\n        return yield Create(ValueErrorType.Object, schema, path, value);\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);\n    }\n    const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n    const regex = new RegExp(patternKey);\n    for (const [propertyKey, propertyValue] of Object.entries(value)) {\n        if (regex.test(propertyKey))\n            yield* Visit(patternSchema, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n    }\n    if (typeof schema.additionalProperties === 'object') {\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\n            if (!regex.test(propertyKey))\n                yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n        }\n    }\n    if (schema.additionalProperties === false) {\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\n            if (regex.test(propertyKey))\n                continue;\n            return yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n        }\n    }\n}\nfunction* TRef(schema, references, path, value) {\n    yield* Visit((0, deref_1.Deref)(schema, references), references, path, value);\n}\nfunction* TString(schema, references, path, value) {\n    if (!(0, guard_1.IsString)(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {\n        yield Create(ValueErrorType.StringMinLength, schema, path, value);\n    }\n    if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {\n        yield Create(ValueErrorType.StringMaxLength, schema, path, value);\n    }\n    if ((0, guard_1.IsString)(schema.pattern)) {\n        const regex = new RegExp(schema.pattern);\n        if (!regex.test(value)) {\n            yield Create(ValueErrorType.StringPattern, schema, path, value);\n        }\n    }\n    if ((0, guard_1.IsString)(schema.format)) {\n        if (!Types.FormatRegistry.Has(schema.format)) {\n            yield Create(ValueErrorType.StringFormatUnknown, schema, path, value);\n        }\n        else {\n            const format = Types.FormatRegistry.Get(schema.format);\n            if (!format(value)) {\n                yield Create(ValueErrorType.StringFormat, schema, path, value);\n            }\n        }\n    }\n}\nfunction* TSymbol(schema, references, path, value) {\n    if (!(0, guard_1.IsSymbol)(value))\n        yield Create(ValueErrorType.Symbol, schema, path, value);\n}\nfunction* TTemplateLiteral(schema, references, path, value) {\n    if (!(0, guard_1.IsString)(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    const regex = new RegExp(schema.pattern);\n    if (!regex.test(value)) {\n        yield Create(ValueErrorType.StringPattern, schema, path, value);\n    }\n}\nfunction* TThis(schema, references, path, value) {\n    yield* Visit((0, deref_1.Deref)(schema, references), references, path, value);\n}\nfunction* TTuple(schema, references, path, value) {\n    if (!(0, guard_1.IsArray)(value))\n        return yield Create(ValueErrorType.Tuple, schema, path, value);\n    if (schema.items === undefined && !(value.length === 0)) {\n        return yield Create(ValueErrorType.TupleLength, schema, path, value);\n    }\n    if (!(value.length === schema.maxItems)) {\n        return yield Create(ValueErrorType.TupleLength, schema, path, value);\n    }\n    if (!schema.items) {\n        return;\n    }\n    for (let i = 0; i < schema.items.length; i++) {\n        yield* Visit(schema.items[i], references, `${path}/${i}`, value[i]);\n    }\n}\nfunction* TUndefined(schema, references, path, value) {\n    if (!(0, guard_1.IsUndefined)(value))\n        yield Create(ValueErrorType.Undefined, schema, path, value);\n}\nfunction* TUnion(schema, references, path, value) {\n    let count = 0;\n    for (const subschema of schema.anyOf) {\n        const errors = [...Visit(subschema, references, path, value)];\n        if (errors.length === 0)\n            return; // matched\n        count += errors.length;\n    }\n    if (count > 0) {\n        yield Create(ValueErrorType.Union, schema, path, value);\n    }\n}\nfunction* TUint8Array(schema, references, path, value) {\n    if (!(0, guard_1.IsUint8Array)(value))\n        return yield Create(ValueErrorType.Uint8Array, schema, path, value);\n    if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {\n        yield Create(ValueErrorType.Uint8ArrayMaxByteLength, schema, path, value);\n    }\n    if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {\n        yield Create(ValueErrorType.Uint8ArrayMinByteLength, schema, path, value);\n    }\n}\nfunction* TUnknown(schema, references, path, value) { }\nfunction* TVoid(schema, references, path, value) {\n    if (!system_1.TypeSystemPolicy.IsVoidLike(value))\n        yield Create(ValueErrorType.Void, schema, path, value);\n}\nfunction* TKind(schema, references, path, value) {\n    const check = Types.TypeRegistry.Get(schema[Types.Kind]);\n    if (!check(schema, value))\n        yield Create(ValueErrorType.Kind, schema, path, value);\n}\nfunction* Visit(schema, references, path, value) {\n    const references_ = IsDefined(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Types.Kind]) {\n        case 'Any':\n            return yield* TAny(schema_, references_, path, value);\n        case 'Array':\n            return yield* TArray(schema_, references_, path, value);\n        case 'AsyncIterator':\n            return yield* TAsyncIterator(schema_, references_, path, value);\n        case 'BigInt':\n            return yield* TBigInt(schema_, references_, path, value);\n        case 'Boolean':\n            return yield* TBoolean(schema_, references_, path, value);\n        case 'Constructor':\n            return yield* TConstructor(schema_, references_, path, value);\n        case 'Date':\n            return yield* TDate(schema_, references_, path, value);\n        case 'Function':\n            return yield* TFunction(schema_, references_, path, value);\n        case 'Integer':\n            return yield* TInteger(schema_, references_, path, value);\n        case 'Intersect':\n            return yield* TIntersect(schema_, references_, path, value);\n        case 'Iterator':\n            return yield* TIterator(schema_, references_, path, value);\n        case 'Literal':\n            return yield* TLiteral(schema_, references_, path, value);\n        case 'Never':\n            return yield* TNever(schema_, references_, path, value);\n        case 'Not':\n            return yield* TNot(schema_, references_, path, value);\n        case 'Null':\n            return yield* TNull(schema_, references_, path, value);\n        case 'Number':\n            return yield* TNumber(schema_, references_, path, value);\n        case 'Object':\n            return yield* TObject(schema_, references_, path, value);\n        case 'Promise':\n            return yield* TPromise(schema_, references_, path, value);\n        case 'Record':\n            return yield* TRecord(schema_, references_, path, value);\n        case 'Ref':\n            return yield* TRef(schema_, references_, path, value);\n        case 'String':\n            return yield* TString(schema_, references_, path, value);\n        case 'Symbol':\n            return yield* TSymbol(schema_, references_, path, value);\n        case 'TemplateLiteral':\n            return yield* TTemplateLiteral(schema_, references_, path, value);\n        case 'This':\n            return yield* TThis(schema_, references_, path, value);\n        case 'Tuple':\n            return yield* TTuple(schema_, references_, path, value);\n        case 'Undefined':\n            return yield* TUndefined(schema_, references_, path, value);\n        case 'Union':\n            return yield* TUnion(schema_, references_, path, value);\n        case 'Uint8Array':\n            return yield* TUint8Array(schema_, references_, path, value);\n        case 'Unknown':\n            return yield* TUnknown(schema_, references_, path, value);\n        case 'Void':\n            return yield* TVoid(schema_, references_, path, value);\n        default:\n            if (!Types.TypeRegistry.Has(schema_[Types.Kind]))\n                throw new ValueErrorsUnknownTypeError(schema);\n            return yield* TKind(schema_, references_, path, value);\n    }\n}\n/** Returns an iterator for each error in this value. */\nfunction Errors(...args) {\n    const iterator = args.length === 3 ? Visit(args[0], args[1], '', args[2]) : Visit(args[0], [], '', args[1]);\n    return new ValueErrorIterator(iterator);\n}\nexports.Errors = Errors;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sinclair/typebox/errors/errors.js\n"));

/***/ }),

/***/ "./node_modules/@sinclair/typebox/errors/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@sinclair/typebox/errors/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/errors\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./errors */ \"./node_modules/@sinclair/typebox/errors/errors.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNpbmNsYWlyL3R5cGVib3gvZXJyb3JzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLG1FQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2luY2xhaXIvdHlwZWJveC9lcnJvcnMvaW5kZXguanM/MjAwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQHNpbmNsYWlyL3R5cGVib3gvZXJyb3JzXG5cblRoZSBNSVQgTGljZW5zZSAoTUlUKVxuXG5Db3B5cmlnaHQgKGMpIDIwMTctMjAyMyBIYXlkbiBQYXRlcnNvbiAoc2luY2xhaXIpIDxoYXlkbi5kZXZlbG9wZXJAZ21haWwuY29tPlxuXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG5vZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG5pbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG50byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG5jb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cblRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG5hbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cblxuVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG5GSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbkxJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG5PVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG5USEUgU09GVFdBUkUuXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lcnJvcnNcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sinclair/typebox/errors/index.js\n"));

/***/ }),

/***/ "./node_modules/@sinclair/typebox/system/system.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sinclair/typebox/system/system.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/system\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DefaultErrorFunction = exports.TypeSystemPolicy = exports.TypeSystemErrorFunction = exports.TypeSystem = exports.TypeSystemDuplicateFormat = exports.TypeSystemDuplicateTypeKind = void 0;\nconst guard_1 = __webpack_require__(/*! ../value/guard */ \"./node_modules/@sinclair/typebox/value/guard.js\");\nconst errors_1 = __webpack_require__(/*! ../errors/errors */ \"./node_modules/@sinclair/typebox/errors/errors.js\");\nconst Types = __webpack_require__(/*! ../typebox */ \"./node_modules/@sinclair/typebox/typebox.js\");\n// --------------------------------------------------------------------------\n// Errors\n// --------------------------------------------------------------------------\nclass TypeSystemDuplicateTypeKind extends Types.TypeBoxError {\n    constructor(kind) {\n        super(`Duplicate type kind '${kind}' detected`);\n    }\n}\nexports.TypeSystemDuplicateTypeKind = TypeSystemDuplicateTypeKind;\nclass TypeSystemDuplicateFormat extends Types.TypeBoxError {\n    constructor(kind) {\n        super(`Duplicate string format '${kind}' detected`);\n    }\n}\nexports.TypeSystemDuplicateFormat = TypeSystemDuplicateFormat;\n// -------------------------------------------------------------------------------------------\n// TypeSystem\n// -------------------------------------------------------------------------------------------\n/** Creates user defined types and formats and provides overrides for value checking behaviours */\nvar TypeSystem;\n(function (TypeSystem) {\n    /** Creates a new type */\n    function Type(kind, check) {\n        if (Types.TypeRegistry.Has(kind))\n            throw new TypeSystemDuplicateTypeKind(kind);\n        Types.TypeRegistry.Set(kind, check);\n        return (options = {}) => Types.Type.Unsafe({ ...options, [Types.Kind]: kind });\n    }\n    TypeSystem.Type = Type;\n    /** Creates a new string format */\n    function Format(format, check) {\n        if (Types.FormatRegistry.Has(format))\n            throw new TypeSystemDuplicateFormat(format);\n        Types.FormatRegistry.Set(format, check);\n        return format;\n    }\n    TypeSystem.Format = Format;\n})(TypeSystem || (exports.TypeSystem = TypeSystem = {}));\n// --------------------------------------------------------------------------\n// TypeSystemErrorFunction\n// --------------------------------------------------------------------------\n/** Manages error message providers */\nvar TypeSystemErrorFunction;\n(function (TypeSystemErrorFunction) {\n    let errorMessageFunction = DefaultErrorFunction;\n    /** Resets the error message function to en-us */\n    function Reset() {\n        errorMessageFunction = DefaultErrorFunction;\n    }\n    TypeSystemErrorFunction.Reset = Reset;\n    /** Sets the error message function used to generate error messages */\n    function Set(callback) {\n        errorMessageFunction = callback;\n    }\n    TypeSystemErrorFunction.Set = Set;\n    /** Gets the error message function */\n    function Get() {\n        return errorMessageFunction;\n    }\n    TypeSystemErrorFunction.Get = Get;\n})(TypeSystemErrorFunction || (exports.TypeSystemErrorFunction = TypeSystemErrorFunction = {}));\n// --------------------------------------------------------------------------\n// TypeSystemPolicy\n// --------------------------------------------------------------------------\n/** Shared assertion routines used by the value and errors modules */\nvar TypeSystemPolicy;\n(function (TypeSystemPolicy) {\n    /** Sets whether TypeBox should assert optional properties using the TypeScript `exactOptionalPropertyTypes` assertion policy. The default is `false` */\n    TypeSystemPolicy.ExactOptionalPropertyTypes = false;\n    /** Sets whether arrays should be treated as a kind of objects. The default is `false` */\n    TypeSystemPolicy.AllowArrayObject = false;\n    /** Sets whether `NaN` or `Infinity` should be treated as valid numeric values. The default is `false` */\n    TypeSystemPolicy.AllowNaN = false;\n    /** Sets whether `null` should validate for void types. The default is `false` */\n    TypeSystemPolicy.AllowNullVoid = false;\n    /** Asserts this value using the ExactOptionalPropertyTypes policy */\n    function IsExactOptionalProperty(value, key) {\n        return TypeSystemPolicy.ExactOptionalPropertyTypes ? key in value : value[key] !== undefined;\n    }\n    TypeSystemPolicy.IsExactOptionalProperty = IsExactOptionalProperty;\n    /** Asserts this value using the AllowArrayObjects policy */\n    function IsObjectLike(value) {\n        const isObject = (0, guard_1.IsObject)(value);\n        return TypeSystemPolicy.AllowArrayObject ? isObject : isObject && !(0, guard_1.IsArray)(value);\n    }\n    TypeSystemPolicy.IsObjectLike = IsObjectLike;\n    /** Asserts this value as a record using the AllowArrayObjects policy */\n    function IsRecordLike(value) {\n        return IsObjectLike(value) && !(value instanceof Date) && !(value instanceof Uint8Array);\n    }\n    TypeSystemPolicy.IsRecordLike = IsRecordLike;\n    /** Asserts this value using the AllowNaN policy */\n    function IsNumberLike(value) {\n        const isNumber = (0, guard_1.IsNumber)(value);\n        return TypeSystemPolicy.AllowNaN ? isNumber : isNumber && Number.isFinite(value);\n    }\n    TypeSystemPolicy.IsNumberLike = IsNumberLike;\n    /** Asserts this value using the AllowVoidNull policy */\n    function IsVoidLike(value) {\n        const isUndefined = (0, guard_1.IsUndefined)(value);\n        return TypeSystemPolicy.AllowNullVoid ? isUndefined || value === null : isUndefined;\n    }\n    TypeSystemPolicy.IsVoidLike = IsVoidLike;\n})(TypeSystemPolicy || (exports.TypeSystemPolicy = TypeSystemPolicy = {}));\n// --------------------------------------------------------------------------\n// DefaultErrorFunction\n// --------------------------------------------------------------------------\n/** Creates an error message using en-US as the default locale */\nfunction DefaultErrorFunction(schema, errorType) {\n    switch (errorType) {\n        case errors_1.ValueErrorType.ArrayContains:\n            return 'Expected array to contain at least one matching value';\n        case errors_1.ValueErrorType.ArrayMaxContains:\n            return `Expected array to contain no more than ${schema.maxContains} matching values`;\n        case errors_1.ValueErrorType.ArrayMinContains:\n            return `Expected array to contain at least ${schema.minContains} matching values`;\n        case errors_1.ValueErrorType.ArrayMaxItems:\n            return `Expected array length to be less or equal to ${schema.maxItems}`;\n        case errors_1.ValueErrorType.ArrayMinItems:\n            return `Expected array length to be greater or equal to ${schema.minItems}`;\n        case errors_1.ValueErrorType.ArrayUniqueItems:\n            return 'Expected array elements to be unique';\n        case errors_1.ValueErrorType.Array:\n            return 'Expected array';\n        case errors_1.ValueErrorType.AsyncIterator:\n            return 'Expected AsyncIterator';\n        case errors_1.ValueErrorType.BigIntExclusiveMaximum:\n            return `Expected bigint to be less than ${schema.exclusiveMaximum}`;\n        case errors_1.ValueErrorType.BigIntExclusiveMinimum:\n            return `Expected bigint to be greater than ${schema.exclusiveMinimum}`;\n        case errors_1.ValueErrorType.BigIntMaximum:\n            return `Expected bigint to be less or equal to ${schema.maximum}`;\n        case errors_1.ValueErrorType.BigIntMinimum:\n            return `Expected bigint to be greater or equal to ${schema.minimum}`;\n        case errors_1.ValueErrorType.BigIntMultipleOf:\n            return `Expected bigint to be a multiple of ${schema.multipleOf}`;\n        case errors_1.ValueErrorType.BigInt:\n            return 'Expected bigint';\n        case errors_1.ValueErrorType.Boolean:\n            return 'Expected boolean';\n        case errors_1.ValueErrorType.DateExclusiveMinimumTimestamp:\n            return `Expected Date timestamp to be greater than ${schema.exclusiveMinimumTimestamp}`;\n        case errors_1.ValueErrorType.DateExclusiveMaximumTimestamp:\n            return `Expected Date timestamp to be less than ${schema.exclusiveMaximumTimestamp}`;\n        case errors_1.ValueErrorType.DateMinimumTimestamp:\n            return `Expected Date timestamp to be greater or equal to ${schema.minimumTimestamp}`;\n        case errors_1.ValueErrorType.DateMaximumTimestamp:\n            return `Expected Date timestamp to be less or equal to ${schema.maximumTimestamp}`;\n        case errors_1.ValueErrorType.DateMultipleOfTimestamp:\n            return `Expected Date timestamp to be a multiple of ${schema.multipleOfTimestamp}`;\n        case errors_1.ValueErrorType.Date:\n            return 'Expected Date';\n        case errors_1.ValueErrorType.Function:\n            return 'Expected function';\n        case errors_1.ValueErrorType.IntegerExclusiveMaximum:\n            return `Expected integer to be less than ${schema.exclusiveMaximum}`;\n        case errors_1.ValueErrorType.IntegerExclusiveMinimum:\n            return `Expected integer to be greater than ${schema.exclusiveMinimum}`;\n        case errors_1.ValueErrorType.IntegerMaximum:\n            return `Expected integer to be less or equal to ${schema.maximum}`;\n        case errors_1.ValueErrorType.IntegerMinimum:\n            return `Expected integer to be greater or equal to ${schema.minimum}`;\n        case errors_1.ValueErrorType.IntegerMultipleOf:\n            return `Expected integer to be a multiple of ${schema.multipleOf}`;\n        case errors_1.ValueErrorType.Integer:\n            return 'Expected integer';\n        case errors_1.ValueErrorType.IntersectUnevaluatedProperties:\n            return 'Unexpected property';\n        case errors_1.ValueErrorType.Intersect:\n            return 'Expected all values to match';\n        case errors_1.ValueErrorType.Iterator:\n            return 'Expected Iterator';\n        case errors_1.ValueErrorType.Literal:\n            return `Expected ${typeof schema.const === 'string' ? `'${schema.const}'` : schema.const}`;\n        case errors_1.ValueErrorType.Never:\n            return 'Never';\n        case errors_1.ValueErrorType.Not:\n            return 'Value should not match';\n        case errors_1.ValueErrorType.Null:\n            return 'Expected null';\n        case errors_1.ValueErrorType.NumberExclusiveMaximum:\n            return `Expected number to be less than ${schema.exclusiveMaximum}`;\n        case errors_1.ValueErrorType.NumberExclusiveMinimum:\n            return `Expected number to be greater than ${schema.exclusiveMinimum}`;\n        case errors_1.ValueErrorType.NumberMaximum:\n            return `Expected number to be less or equal to ${schema.maximum}`;\n        case errors_1.ValueErrorType.NumberMinimum:\n            return `Expected number to be greater or equal to ${schema.minimum}`;\n        case errors_1.ValueErrorType.NumberMultipleOf:\n            return `Expected number to be a multiple of ${schema.multipleOf}`;\n        case errors_1.ValueErrorType.Number:\n            return 'Expected number';\n        case errors_1.ValueErrorType.Object:\n            return 'Expected object';\n        case errors_1.ValueErrorType.ObjectAdditionalProperties:\n            return 'Unexpected property';\n        case errors_1.ValueErrorType.ObjectMaxProperties:\n            return `Expected object to have no more than ${schema.maxProperties} properties`;\n        case errors_1.ValueErrorType.ObjectMinProperties:\n            return `Expected object to have at least ${schema.minProperties} properties`;\n        case errors_1.ValueErrorType.ObjectRequiredProperty:\n            return 'Required property';\n        case errors_1.ValueErrorType.Promise:\n            return 'Expected Promise';\n        case errors_1.ValueErrorType.StringFormatUnknown:\n            return `Unknown format '${schema.format}'`;\n        case errors_1.ValueErrorType.StringFormat:\n            return `Expected string to match '${schema.format}' format`;\n        case errors_1.ValueErrorType.StringMaxLength:\n            return `Expected string length less or equal to ${schema.maxLength}`;\n        case errors_1.ValueErrorType.StringMinLength:\n            return `Expected string length greater or equal to ${schema.minLength}`;\n        case errors_1.ValueErrorType.StringPattern:\n            return `Expected string to match '${schema.pattern}'`;\n        case errors_1.ValueErrorType.String:\n            return 'Expected string';\n        case errors_1.ValueErrorType.Symbol:\n            return 'Expected symbol';\n        case errors_1.ValueErrorType.TupleLength:\n            return `Expected tuple to have ${schema.maxItems || 0} elements`;\n        case errors_1.ValueErrorType.Tuple:\n            return 'Expected tuple';\n        case errors_1.ValueErrorType.Uint8ArrayMaxByteLength:\n            return `Expected byte length less or equal to ${schema.maxByteLength}`;\n        case errors_1.ValueErrorType.Uint8ArrayMinByteLength:\n            return `Expected byte length greater or equal to ${schema.minByteLength}`;\n        case errors_1.ValueErrorType.Uint8Array:\n            return 'Expected Uint8Array';\n        case errors_1.ValueErrorType.Undefined:\n            return 'Expected undefined';\n        case errors_1.ValueErrorType.Union:\n            return 'Expected union value';\n        case errors_1.ValueErrorType.Void:\n            return 'Expected void';\n        case errors_1.ValueErrorType.Kind:\n            return `Expected kind '${schema[Types.Kind]}'`;\n        default:\n            return 'Unknown error type';\n    }\n}\nexports.DefaultErrorFunction = DefaultErrorFunction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sinclair/typebox/system/system.js\n"));

/***/ }),

/***/ "./node_modules/@sinclair/typebox/typebox.js":
/*!***************************************************!*\
  !*** ./node_modules/@sinclair/typebox/typebox.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Type = exports.JsonType = exports.JavaScriptTypeBuilder = exports.JsonTypeBuilder = exports.TypeBuilder = exports.TypeBuilderError = exports.TransformEncodeBuilder = exports.TransformDecodeBuilder = exports.TemplateLiteralDslParser = exports.TemplateLiteralGenerator = exports.TemplateLiteralGeneratorError = exports.TemplateLiteralFinite = exports.TemplateLiteralFiniteError = exports.TemplateLiteralParser = exports.TemplateLiteralParserError = exports.TemplateLiteralResolver = exports.TemplateLiteralPattern = exports.TemplateLiteralPatternError = exports.UnionResolver = exports.KeyArrayResolver = exports.KeyArrayResolverError = exports.KeyResolver = exports.ObjectMap = exports.Intrinsic = exports.IndexedAccessor = exports.TypeClone = exports.TypeExtends = exports.TypeExtendsResult = exports.TypeExtendsError = exports.ExtendsUndefined = exports.TypeGuard = exports.TypeGuardUnknownTypeError = exports.ValueGuard = exports.FormatRegistry = exports.TypeBoxError = exports.TypeRegistry = exports.PatternStringExact = exports.PatternNumberExact = exports.PatternBooleanExact = exports.PatternString = exports.PatternNumber = exports.PatternBoolean = exports.Kind = exports.Hint = exports.Optional = exports.Readonly = exports.Transform = void 0;\n// --------------------------------------------------------------------------\n// Symbols\n// --------------------------------------------------------------------------\nexports.Transform = Symbol.for('TypeBox.Transform');\nexports.Readonly = Symbol.for('TypeBox.Readonly');\nexports.Optional = Symbol.for('TypeBox.Optional');\nexports.Hint = Symbol.for('TypeBox.Hint');\nexports.Kind = Symbol.for('TypeBox.Kind');\n// --------------------------------------------------------------------------\n// Patterns\n// --------------------------------------------------------------------------\nexports.PatternBoolean = '(true|false)';\nexports.PatternNumber = '(0|[1-9][0-9]*)';\nexports.PatternString = '(.*)';\nexports.PatternBooleanExact = `^${exports.PatternBoolean}$`;\nexports.PatternNumberExact = `^${exports.PatternNumber}$`;\nexports.PatternStringExact = `^${exports.PatternString}$`;\n/** A registry for user defined types */\nvar TypeRegistry;\n(function (TypeRegistry) {\n    const map = new Map();\n    /** Returns the entries in this registry */\n    function Entries() {\n        return new Map(map);\n    }\n    TypeRegistry.Entries = Entries;\n    /** Clears all user defined types */\n    function Clear() {\n        return map.clear();\n    }\n    TypeRegistry.Clear = Clear;\n    /** Deletes a registered type */\n    function Delete(kind) {\n        return map.delete(kind);\n    }\n    TypeRegistry.Delete = Delete;\n    /** Returns true if this registry contains this kind */\n    function Has(kind) {\n        return map.has(kind);\n    }\n    TypeRegistry.Has = Has;\n    /** Sets a validation function for a user defined type */\n    function Set(kind, func) {\n        map.set(kind, func);\n    }\n    TypeRegistry.Set = Set;\n    /** Gets a custom validation function for a user defined type */\n    function Get(kind) {\n        return map.get(kind);\n    }\n    TypeRegistry.Get = Get;\n})(TypeRegistry || (exports.TypeRegistry = TypeRegistry = {}));\n// --------------------------------------------------------------------------\n// TypeBoxError\n// --------------------------------------------------------------------------\nclass TypeBoxError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.TypeBoxError = TypeBoxError;\n/** A registry for user defined string formats */\nvar FormatRegistry;\n(function (FormatRegistry) {\n    const map = new Map();\n    /** Returns the entries in this registry */\n    function Entries() {\n        return new Map(map);\n    }\n    FormatRegistry.Entries = Entries;\n    /** Clears all user defined string formats */\n    function Clear() {\n        return map.clear();\n    }\n    FormatRegistry.Clear = Clear;\n    /** Deletes a registered format */\n    function Delete(format) {\n        return map.delete(format);\n    }\n    FormatRegistry.Delete = Delete;\n    /** Returns true if the user defined string format exists */\n    function Has(format) {\n        return map.has(format);\n    }\n    FormatRegistry.Has = Has;\n    /** Sets a validation function for a user defined string format */\n    function Set(format, func) {\n        map.set(format, func);\n    }\n    FormatRegistry.Set = Set;\n    /** Gets a validation function for a user defined string format */\n    function Get(format) {\n        return map.get(format);\n    }\n    FormatRegistry.Get = Get;\n})(FormatRegistry || (exports.FormatRegistry = FormatRegistry = {}));\n// --------------------------------------------------------------------------\n// ValueGuard\n// --------------------------------------------------------------------------\n/** Provides functions to type guard raw JavaScript values */\nvar ValueGuard;\n(function (ValueGuard) {\n    /** Returns true if this value is an array */\n    function IsArray(value) {\n        return Array.isArray(value);\n    }\n    ValueGuard.IsArray = IsArray;\n    /** Returns true if this value is bigint */\n    function IsBigInt(value) {\n        return typeof value === 'bigint';\n    }\n    ValueGuard.IsBigInt = IsBigInt;\n    /** Returns true if this value is a boolean */\n    function IsBoolean(value) {\n        return typeof value === 'boolean';\n    }\n    ValueGuard.IsBoolean = IsBoolean;\n    /** Returns true if this value is a Date object */\n    function IsDate(value) {\n        return value instanceof globalThis.Date;\n    }\n    ValueGuard.IsDate = IsDate;\n    /** Returns true if this value is null */\n    function IsNull(value) {\n        return value === null;\n    }\n    ValueGuard.IsNull = IsNull;\n    /** Returns true if this value is number */\n    function IsNumber(value) {\n        return typeof value === 'number';\n    }\n    ValueGuard.IsNumber = IsNumber;\n    /** Returns true if this value is an object */\n    function IsObject(value) {\n        return typeof value === 'object' && value !== null;\n    }\n    ValueGuard.IsObject = IsObject;\n    /** Returns true if this value is string */\n    function IsString(value) {\n        return typeof value === 'string';\n    }\n    ValueGuard.IsString = IsString;\n    /** Returns true if this value is a Uint8Array */\n    function IsUint8Array(value) {\n        return value instanceof globalThis.Uint8Array;\n    }\n    ValueGuard.IsUint8Array = IsUint8Array;\n    /** Returns true if this value is undefined */\n    function IsUndefined(value) {\n        return value === undefined;\n    }\n    ValueGuard.IsUndefined = IsUndefined;\n})(ValueGuard || (exports.ValueGuard = ValueGuard = {}));\n// --------------------------------------------------------------------------\n// TypeGuard\n// --------------------------------------------------------------------------\nclass TypeGuardUnknownTypeError extends TypeBoxError {\n}\nexports.TypeGuardUnknownTypeError = TypeGuardUnknownTypeError;\n/** Provides functions to test if JavaScript values are TypeBox types */\nvar TypeGuard;\n(function (TypeGuard) {\n    function IsPattern(value) {\n        try {\n            new RegExp(value);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n    function IsControlCharacterFree(value) {\n        if (!ValueGuard.IsString(value))\n            return false;\n        for (let i = 0; i < value.length; i++) {\n            const code = value.charCodeAt(i);\n            if ((code >= 7 && code <= 13) || code === 27 || code === 127) {\n                return false;\n            }\n        }\n        return true;\n    }\n    function IsAdditionalProperties(value) {\n        return IsOptionalBoolean(value) || TSchema(value);\n    }\n    function IsOptionalBigInt(value) {\n        return ValueGuard.IsUndefined(value) || ValueGuard.IsBigInt(value);\n    }\n    function IsOptionalNumber(value) {\n        return ValueGuard.IsUndefined(value) || ValueGuard.IsNumber(value);\n    }\n    function IsOptionalBoolean(value) {\n        return ValueGuard.IsUndefined(value) || ValueGuard.IsBoolean(value);\n    }\n    function IsOptionalString(value) {\n        return ValueGuard.IsUndefined(value) || ValueGuard.IsString(value);\n    }\n    function IsOptionalPattern(value) {\n        return ValueGuard.IsUndefined(value) || (ValueGuard.IsString(value) && IsControlCharacterFree(value) && IsPattern(value));\n    }\n    function IsOptionalFormat(value) {\n        return ValueGuard.IsUndefined(value) || (ValueGuard.IsString(value) && IsControlCharacterFree(value));\n    }\n    function IsOptionalSchema(value) {\n        return ValueGuard.IsUndefined(value) || TSchema(value);\n    }\n    // ----------------------------------------------------------------\n    // Types\n    // ----------------------------------------------------------------\n    /** Returns true if the given value is TAny */\n    function TAny(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Any') &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TAny = TAny;\n    /** Returns true if the given value is TArray */\n    function TArray(schema) {\n        return (TKindOf(schema, 'Array') &&\n            schema.type === 'array' &&\n            IsOptionalString(schema.$id) &&\n            TSchema(schema.items) &&\n            IsOptionalNumber(schema.minItems) &&\n            IsOptionalNumber(schema.maxItems) &&\n            IsOptionalBoolean(schema.uniqueItems) &&\n            IsOptionalSchema(schema.contains) &&\n            IsOptionalNumber(schema.minContains) &&\n            IsOptionalNumber(schema.maxContains));\n    }\n    TypeGuard.TArray = TArray;\n    /** Returns true if the given value is TAsyncIterator */\n    function TAsyncIterator(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'AsyncIterator') &&\n            schema.type === 'AsyncIterator' &&\n            IsOptionalString(schema.$id) &&\n            TSchema(schema.items));\n    }\n    TypeGuard.TAsyncIterator = TAsyncIterator;\n    /** Returns true if the given value is TBigInt */\n    function TBigInt(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'BigInt') &&\n            schema.type === 'bigint' &&\n            IsOptionalString(schema.$id) &&\n            IsOptionalBigInt(schema.exclusiveMaximum) &&\n            IsOptionalBigInt(schema.exclusiveMinimum) &&\n            IsOptionalBigInt(schema.maximum) &&\n            IsOptionalBigInt(schema.minimum) &&\n            IsOptionalBigInt(schema.multipleOf));\n    }\n    TypeGuard.TBigInt = TBigInt;\n    /** Returns true if the given value is TBoolean */\n    function TBoolean(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Boolean') &&\n            schema.type === 'boolean' &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TBoolean = TBoolean;\n    /** Returns true if the given value is TConstructor */\n    function TConstructor(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Constructor') &&\n            schema.type === 'Constructor' &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsArray(schema.parameters) &&\n            schema.parameters.every(schema => TSchema(schema)) &&\n            TSchema(schema.returns));\n    }\n    TypeGuard.TConstructor = TConstructor;\n    /** Returns true if the given value is TDate */\n    function TDate(schema) {\n        return (TKindOf(schema, 'Date') &&\n            schema.type === 'Date' &&\n            IsOptionalString(schema.$id) &&\n            IsOptionalNumber(schema.exclusiveMaximumTimestamp) &&\n            IsOptionalNumber(schema.exclusiveMinimumTimestamp) &&\n            IsOptionalNumber(schema.maximumTimestamp) &&\n            IsOptionalNumber(schema.minimumTimestamp) &&\n            IsOptionalNumber(schema.multipleOfTimestamp));\n    }\n    TypeGuard.TDate = TDate;\n    /** Returns true if the given value is TFunction */\n    function TFunction(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Function') &&\n            schema.type === 'Function' &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsArray(schema.parameters) &&\n            schema.parameters.every(schema => TSchema(schema)) &&\n            TSchema(schema.returns));\n    }\n    TypeGuard.TFunction = TFunction;\n    /** Returns true if the given value is TInteger */\n    function TInteger(schema) {\n        return (TKindOf(schema, 'Integer') &&\n            schema.type === 'integer' &&\n            IsOptionalString(schema.$id) &&\n            IsOptionalNumber(schema.exclusiveMaximum) &&\n            IsOptionalNumber(schema.exclusiveMinimum) &&\n            IsOptionalNumber(schema.maximum) &&\n            IsOptionalNumber(schema.minimum) &&\n            IsOptionalNumber(schema.multipleOf));\n    }\n    TypeGuard.TInteger = TInteger;\n    /** Returns true if the given value is TIntersect */\n    function TIntersect(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Intersect') &&\n            (ValueGuard.IsString(schema.type) && schema.type !== 'object' ? false : true) &&\n            ValueGuard.IsArray(schema.allOf) &&\n            schema.allOf.every(schema => TSchema(schema) && !TTransform(schema)) &&\n            IsOptionalString(schema.type) &&\n            (IsOptionalBoolean(schema.unevaluatedProperties) || IsOptionalSchema(schema.unevaluatedProperties)) &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TIntersect = TIntersect;\n    /** Returns true if the given value is TIterator */\n    function TIterator(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Iterator') &&\n            schema.type === 'Iterator' &&\n            IsOptionalString(schema.$id) &&\n            TSchema(schema.items));\n    }\n    TypeGuard.TIterator = TIterator;\n    /** Returns true if the given value is a TKind with the given name. */\n    function TKindOf(schema, kind) {\n        return TKind(schema) && schema[exports.Kind] === kind;\n    }\n    TypeGuard.TKindOf = TKindOf;\n    /** Returns true if the given value is TKind */\n    function TKind(schema) {\n        return ValueGuard.IsObject(schema) && exports.Kind in schema && ValueGuard.IsString(schema[exports.Kind]);\n    }\n    TypeGuard.TKind = TKind;\n    /** Returns true if the given value is TLiteral<string> */\n    function TLiteralString(schema) {\n        return TLiteral(schema) && ValueGuard.IsString(schema.const);\n    }\n    TypeGuard.TLiteralString = TLiteralString;\n    /** Returns true if the given value is TLiteral<number> */\n    function TLiteralNumber(schema) {\n        return TLiteral(schema) && ValueGuard.IsNumber(schema.const);\n    }\n    TypeGuard.TLiteralNumber = TLiteralNumber;\n    /** Returns true if the given value is TLiteral<boolean> */\n    function TLiteralBoolean(schema) {\n        return TLiteral(schema) && ValueGuard.IsBoolean(schema.const);\n    }\n    TypeGuard.TLiteralBoolean = TLiteralBoolean;\n    /** Returns true if the given value is TLiteral */\n    function TLiteral(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Literal') &&\n            IsOptionalString(schema.$id) && (ValueGuard.IsBoolean(schema.const) ||\n            ValueGuard.IsNumber(schema.const) ||\n            ValueGuard.IsString(schema.const)));\n    }\n    TypeGuard.TLiteral = TLiteral;\n    /** Returns true if the given value is TNever */\n    function TNever(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Never') &&\n            ValueGuard.IsObject(schema.not) &&\n            Object.getOwnPropertyNames(schema.not).length === 0);\n    }\n    TypeGuard.TNever = TNever;\n    /** Returns true if the given value is TNot */\n    function TNot(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Not') &&\n            TSchema(schema.not));\n    }\n    TypeGuard.TNot = TNot;\n    /** Returns true if the given value is TNull */\n    function TNull(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Null') &&\n            schema.type === 'null' &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TNull = TNull;\n    /** Returns true if the given value is TNumber */\n    function TNumber(schema) {\n        return (TKindOf(schema, 'Number') &&\n            schema.type === 'number' &&\n            IsOptionalString(schema.$id) &&\n            IsOptionalNumber(schema.exclusiveMaximum) &&\n            IsOptionalNumber(schema.exclusiveMinimum) &&\n            IsOptionalNumber(schema.maximum) &&\n            IsOptionalNumber(schema.minimum) &&\n            IsOptionalNumber(schema.multipleOf));\n    }\n    TypeGuard.TNumber = TNumber;\n    /** Returns true if the given value is TObject */\n    function TObject(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Object') &&\n            schema.type === 'object' &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsObject(schema.properties) &&\n            IsAdditionalProperties(schema.additionalProperties) &&\n            IsOptionalNumber(schema.minProperties) &&\n            IsOptionalNumber(schema.maxProperties) &&\n            Object.entries(schema.properties).every(([key, schema]) => IsControlCharacterFree(key) && TSchema(schema)));\n    }\n    TypeGuard.TObject = TObject;\n    /** Returns true if the given value is TPromise */\n    function TPromise(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Promise') &&\n            schema.type === 'Promise' &&\n            IsOptionalString(schema.$id) &&\n            TSchema(schema.item));\n    }\n    TypeGuard.TPromise = TPromise;\n    /** Returns true if the given value is TRecord */\n    function TRecord(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Record') &&\n            schema.type === 'object' &&\n            IsOptionalString(schema.$id) &&\n            IsAdditionalProperties(schema.additionalProperties) &&\n            ValueGuard.IsObject(schema.patternProperties) &&\n            ((schema) => {\n                const keys = Object.getOwnPropertyNames(schema.patternProperties);\n                return (keys.length === 1 &&\n                    IsPattern(keys[0]) &&\n                    ValueGuard.IsObject(schema.patternProperties) &&\n                    TSchema(schema.patternProperties[keys[0]]));\n            })(schema));\n    }\n    TypeGuard.TRecord = TRecord;\n    /** Returns true if this value is TRecursive */\n    function TRecursive(schema) {\n        return ValueGuard.IsObject(schema) && exports.Hint in schema && schema[exports.Hint] === 'Recursive';\n    }\n    TypeGuard.TRecursive = TRecursive;\n    /** Returns true if the given value is TRef */\n    function TRef(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Ref') &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsString(schema.$ref));\n    }\n    TypeGuard.TRef = TRef;\n    /** Returns true if the given value is TString */\n    function TString(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'String') &&\n            schema.type === 'string' &&\n            IsOptionalString(schema.$id) &&\n            IsOptionalNumber(schema.minLength) &&\n            IsOptionalNumber(schema.maxLength) &&\n            IsOptionalPattern(schema.pattern) &&\n            IsOptionalFormat(schema.format));\n    }\n    TypeGuard.TString = TString;\n    /** Returns true if the given value is TSymbol */\n    function TSymbol(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Symbol') &&\n            schema.type === 'symbol' &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TSymbol = TSymbol;\n    /** Returns true if the given value is TTemplateLiteral */\n    function TTemplateLiteral(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'TemplateLiteral') &&\n            schema.type === 'string' &&\n            ValueGuard.IsString(schema.pattern) &&\n            schema.pattern[0] === '^' &&\n            schema.pattern[schema.pattern.length - 1] === '$');\n    }\n    TypeGuard.TTemplateLiteral = TTemplateLiteral;\n    /** Returns true if the given value is TThis */\n    function TThis(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'This') &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsString(schema.$ref));\n    }\n    TypeGuard.TThis = TThis;\n    /** Returns true of this value is TTransform */\n    function TTransform(schema) {\n        return ValueGuard.IsObject(schema) && exports.Transform in schema;\n    }\n    TypeGuard.TTransform = TTransform;\n    /** Returns true if the given value is TTuple */\n    function TTuple(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Tuple') &&\n            schema.type === 'array' &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsNumber(schema.minItems) &&\n            ValueGuard.IsNumber(schema.maxItems) &&\n            schema.minItems === schema.maxItems &&\n            (( // empty\n            ValueGuard.IsUndefined(schema.items) &&\n                ValueGuard.IsUndefined(schema.additionalItems) &&\n                schema.minItems === 0) || (ValueGuard.IsArray(schema.items) &&\n                schema.items.every(schema => TSchema(schema)))));\n    }\n    TypeGuard.TTuple = TTuple;\n    /** Returns true if the given value is TUndefined */\n    function TUndefined(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Undefined') &&\n            schema.type === 'undefined' &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TUndefined = TUndefined;\n    /** Returns true if the given value is TUnion<Literal<string | number>[]> */\n    function TUnionLiteral(schema) {\n        return TUnion(schema) && schema.anyOf.every((schema) => TLiteralString(schema) || TLiteralNumber(schema));\n    }\n    TypeGuard.TUnionLiteral = TUnionLiteral;\n    /** Returns true if the given value is TUnion */\n    function TUnion(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Union') &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsObject(schema) &&\n            ValueGuard.IsArray(schema.anyOf) &&\n            schema.anyOf.every(schema => TSchema(schema)));\n    }\n    TypeGuard.TUnion = TUnion;\n    /** Returns true if the given value is TUint8Array */\n    function TUint8Array(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Uint8Array') &&\n            schema.type === 'Uint8Array' &&\n            IsOptionalString(schema.$id) &&\n            IsOptionalNumber(schema.minByteLength) &&\n            IsOptionalNumber(schema.maxByteLength));\n    }\n    TypeGuard.TUint8Array = TUint8Array;\n    /** Returns true if the given value is TUnknown */\n    function TUnknown(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Unknown') &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TUnknown = TUnknown;\n    /** Returns true if the given value is a raw TUnsafe */\n    function TUnsafe(schema) {\n        return TKindOf(schema, 'Unsafe');\n    }\n    TypeGuard.TUnsafe = TUnsafe;\n    /** Returns true if the given value is TVoid */\n    function TVoid(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Void') &&\n            schema.type === 'void' &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TVoid = TVoid;\n    /** Returns true if this value has a Readonly symbol */\n    function TReadonly(schema) {\n        return ValueGuard.IsObject(schema) && schema[exports.Readonly] === 'Readonly';\n    }\n    TypeGuard.TReadonly = TReadonly;\n    /** Returns true if this value has a Optional symbol */\n    function TOptional(schema) {\n        return ValueGuard.IsObject(schema) && schema[exports.Optional] === 'Optional';\n    }\n    TypeGuard.TOptional = TOptional;\n    /** Returns true if the given value is TSchema */\n    function TSchema(schema) {\n        // prettier-ignore\n        return (ValueGuard.IsObject(schema)) && (TAny(schema) ||\n            TArray(schema) ||\n            TBoolean(schema) ||\n            TBigInt(schema) ||\n            TAsyncIterator(schema) ||\n            TConstructor(schema) ||\n            TDate(schema) ||\n            TFunction(schema) ||\n            TInteger(schema) ||\n            TIntersect(schema) ||\n            TIterator(schema) ||\n            TLiteral(schema) ||\n            TNever(schema) ||\n            TNot(schema) ||\n            TNull(schema) ||\n            TNumber(schema) ||\n            TObject(schema) ||\n            TPromise(schema) ||\n            TRecord(schema) ||\n            TRef(schema) ||\n            TString(schema) ||\n            TSymbol(schema) ||\n            TTemplateLiteral(schema) ||\n            TThis(schema) ||\n            TTuple(schema) ||\n            TUndefined(schema) ||\n            TUnion(schema) ||\n            TUint8Array(schema) ||\n            TUnknown(schema) ||\n            TUnsafe(schema) ||\n            TVoid(schema) ||\n            (TKind(schema) && TypeRegistry.Has(schema[exports.Kind])));\n    }\n    TypeGuard.TSchema = TSchema;\n})(TypeGuard || (exports.TypeGuard = TypeGuard = {}));\n// --------------------------------------------------------------------------\n// ExtendsUndefined\n// --------------------------------------------------------------------------\n/** Fast undefined check used for properties of type undefined */\nvar ExtendsUndefined;\n(function (ExtendsUndefined) {\n    function Check(schema) {\n        return schema[exports.Kind] === 'Intersect'\n            ? schema.allOf.every((schema) => Check(schema))\n            : schema[exports.Kind] === 'Union'\n                ? schema.anyOf.some((schema) => Check(schema))\n                : schema[exports.Kind] === 'Undefined'\n                    ? true\n                    : schema[exports.Kind] === 'Not'\n                        ? !Check(schema.not)\n                        : false;\n    }\n    ExtendsUndefined.Check = Check;\n})(ExtendsUndefined || (exports.ExtendsUndefined = ExtendsUndefined = {}));\n// --------------------------------------------------------------------------\n// TypeExtends\n// --------------------------------------------------------------------------\nclass TypeExtendsError extends TypeBoxError {\n}\nexports.TypeExtendsError = TypeExtendsError;\nvar TypeExtendsResult;\n(function (TypeExtendsResult) {\n    TypeExtendsResult[TypeExtendsResult[\"Union\"] = 0] = \"Union\";\n    TypeExtendsResult[TypeExtendsResult[\"True\"] = 1] = \"True\";\n    TypeExtendsResult[TypeExtendsResult[\"False\"] = 2] = \"False\";\n})(TypeExtendsResult || (exports.TypeExtendsResult = TypeExtendsResult = {}));\nvar TypeExtends;\n(function (TypeExtends) {\n    // --------------------------------------------------------------------------\n    // IntoBooleanResult\n    // --------------------------------------------------------------------------\n    function IntoBooleanResult(result) {\n        return result === TypeExtendsResult.False ? result : TypeExtendsResult.True;\n    }\n    // --------------------------------------------------------------------------\n    // Throw\n    // --------------------------------------------------------------------------\n    function Throw(message) {\n        throw new TypeExtendsError(message);\n    }\n    // --------------------------------------------------------------------------\n    // StructuralRight\n    // --------------------------------------------------------------------------\n    function IsStructuralRight(right) {\n        // prettier-ignore\n        return (TypeGuard.TNever(right) ||\n            TypeGuard.TIntersect(right) ||\n            TypeGuard.TUnion(right) ||\n            TypeGuard.TUnknown(right) ||\n            TypeGuard.TAny(right));\n    }\n    function StructuralRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TNever(right) ? TNeverRight(left, right) :\n            TypeGuard.TIntersect(right) ? TIntersectRight(left, right) :\n                TypeGuard.TUnion(right) ? TUnionRight(left, right) :\n                    TypeGuard.TUnknown(right) ? TUnknownRight(left, right) :\n                        TypeGuard.TAny(right) ? TAnyRight(left, right) :\n                            Throw('StructuralRight'));\n    }\n    // --------------------------------------------------------------------------\n    // Any\n    // --------------------------------------------------------------------------\n    function TAnyRight(left, right) {\n        return TypeExtendsResult.True;\n    }\n    function TAny(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TIntersect(right) ? TIntersectRight(left, right) :\n            (TypeGuard.TUnion(right) && right.anyOf.some((schema) => TypeGuard.TAny(schema) || TypeGuard.TUnknown(schema))) ? TypeExtendsResult.True :\n                TypeGuard.TUnion(right) ? TypeExtendsResult.Union :\n                    TypeGuard.TUnknown(right) ? TypeExtendsResult.True :\n                        TypeGuard.TAny(right) ? TypeExtendsResult.True :\n                            TypeExtendsResult.Union);\n    }\n    // --------------------------------------------------------------------------\n    // Array\n    // --------------------------------------------------------------------------\n    function TArrayRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TUnknown(left) ? TypeExtendsResult.False :\n            TypeGuard.TAny(left) ? TypeExtendsResult.Union :\n                TypeGuard.TNever(left) ? TypeExtendsResult.True :\n                    TypeExtendsResult.False);\n    }\n    function TArray(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TObject(right) && IsObjectArrayLike(right) ? TypeExtendsResult.True :\n            IsStructuralRight(right) ? StructuralRight(left, right) :\n                !TypeGuard.TArray(right) ? TypeExtendsResult.False :\n                    IntoBooleanResult(Visit(left.items, right.items)));\n    }\n    // --------------------------------------------------------------------------\n    // AsyncIterator\n    // --------------------------------------------------------------------------\n    function TAsyncIterator(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            !TypeGuard.TAsyncIterator(right) ? TypeExtendsResult.False :\n                IntoBooleanResult(Visit(left.items, right.items)));\n    }\n    // --------------------------------------------------------------------------\n    // BigInt\n    // --------------------------------------------------------------------------\n    function TBigInt(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TBigInt(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Boolean\n    // --------------------------------------------------------------------------\n    function TBooleanRight(left, right) {\n        return TypeGuard.TLiteral(left) && ValueGuard.IsBoolean(left.const) ? TypeExtendsResult.True : TypeGuard.TBoolean(left) ? TypeExtendsResult.True : TypeExtendsResult.False;\n    }\n    function TBoolean(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TBoolean(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Constructor\n    // --------------------------------------------------------------------------\n    function TConstructor(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                !TypeGuard.TConstructor(right) ? TypeExtendsResult.False :\n                    left.parameters.length > right.parameters.length ? TypeExtendsResult.False :\n                        (!left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === TypeExtendsResult.True)) ? TypeExtendsResult.False :\n                            IntoBooleanResult(Visit(left.returns, right.returns)));\n    }\n    // --------------------------------------------------------------------------\n    // Date\n    // --------------------------------------------------------------------------\n    function TDate(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TDate(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Function\n    // --------------------------------------------------------------------------\n    function TFunction(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                !TypeGuard.TFunction(right) ? TypeExtendsResult.False :\n                    left.parameters.length > right.parameters.length ? TypeExtendsResult.False :\n                        (!left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === TypeExtendsResult.True)) ? TypeExtendsResult.False :\n                            IntoBooleanResult(Visit(left.returns, right.returns)));\n    }\n    // --------------------------------------------------------------------------\n    // Integer\n    // --------------------------------------------------------------------------\n    function TIntegerRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TLiteral(left) && ValueGuard.IsNumber(left.const) ? TypeExtendsResult.True :\n            TypeGuard.TNumber(left) || TypeGuard.TInteger(left) ? TypeExtendsResult.True :\n                TypeExtendsResult.False);\n    }\n    function TInteger(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TInteger(right) || TypeGuard.TNumber(right) ? TypeExtendsResult.True :\n            IsStructuralRight(right) ? StructuralRight(left, right) :\n                TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                    TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Intersect\n    // --------------------------------------------------------------------------\n    function TIntersectRight(left, right) {\n        // prettier-ignore\n        return right.allOf.every((schema) => Visit(left, schema) === TypeExtendsResult.True)\n            ? TypeExtendsResult.True\n            : TypeExtendsResult.False;\n    }\n    function TIntersect(left, right) {\n        // prettier-ignore\n        return left.allOf.some((schema) => Visit(schema, right) === TypeExtendsResult.True)\n            ? TypeExtendsResult.True\n            : TypeExtendsResult.False;\n    }\n    // --------------------------------------------------------------------------\n    // Iterator\n    // --------------------------------------------------------------------------\n    function TIterator(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            !TypeGuard.TIterator(right) ? TypeExtendsResult.False :\n                IntoBooleanResult(Visit(left.items, right.items)));\n    }\n    // --------------------------------------------------------------------------\n    // Literal\n    // --------------------------------------------------------------------------\n    function TLiteral(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TLiteral(right) && right.const === left.const ? TypeExtendsResult.True :\n            IsStructuralRight(right) ? StructuralRight(left, right) :\n                TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                    TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                        TypeGuard.TString(right) ? TStringRight(left, right) :\n                            TypeGuard.TNumber(right) ? TNumberRight(left, right) :\n                                TypeGuard.TInteger(right) ? TIntegerRight(left, right) :\n                                    TypeGuard.TBoolean(right) ? TBooleanRight(left, right) :\n                                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Never\n    // --------------------------------------------------------------------------\n    function TNeverRight(left, right) {\n        return TypeExtendsResult.False;\n    }\n    function TNever(left, right) {\n        return TypeExtendsResult.True;\n    }\n    // --------------------------------------------------------------------------\n    // Not\n    // --------------------------------------------------------------------------\n    function UnwrapTNot(schema) {\n        let [current, depth] = [schema, 0];\n        while (true) {\n            if (!TypeGuard.TNot(current))\n                break;\n            current = current.not;\n            depth += 1;\n        }\n        return depth % 2 === 0 ? current : exports.Type.Unknown();\n    }\n    function TNot(left, right) {\n        // TypeScript has no concept of negated types, and attempts to correctly check the negated\n        // type at runtime would put TypeBox at odds with TypeScripts ability to statically infer\n        // the type. Instead we unwrap to either unknown or T and continue evaluating.\n        // prettier-ignore\n        return (TypeGuard.TNot(left) ? Visit(UnwrapTNot(left), right) :\n            TypeGuard.TNot(right) ? Visit(left, UnwrapTNot(right)) :\n                Throw('Invalid fallthrough for Not'));\n    }\n    // --------------------------------------------------------------------------\n    // Null\n    // --------------------------------------------------------------------------\n    function TNull(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TNull(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Number\n    // --------------------------------------------------------------------------\n    function TNumberRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TLiteralNumber(left) ? TypeExtendsResult.True :\n            TypeGuard.TNumber(left) || TypeGuard.TInteger(left) ? TypeExtendsResult.True :\n                TypeExtendsResult.False);\n    }\n    function TNumber(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TInteger(right) || TypeGuard.TNumber(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Object\n    // --------------------------------------------------------------------------\n    function IsObjectPropertyCount(schema, count) {\n        return Object.getOwnPropertyNames(schema.properties).length === count;\n    }\n    function IsObjectStringLike(schema) {\n        return IsObjectArrayLike(schema);\n    }\n    function IsObjectSymbolLike(schema) {\n        // prettier-ignore\n        return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'description' in schema.properties && TypeGuard.TUnion(schema.properties.description) && schema.properties.description.anyOf.length === 2 && ((TypeGuard.TString(schema.properties.description.anyOf[0]) &&\n            TypeGuard.TUndefined(schema.properties.description.anyOf[1])) || (TypeGuard.TString(schema.properties.description.anyOf[1]) &&\n            TypeGuard.TUndefined(schema.properties.description.anyOf[0]))));\n    }\n    function IsObjectNumberLike(schema) {\n        return IsObjectPropertyCount(schema, 0);\n    }\n    function IsObjectBooleanLike(schema) {\n        return IsObjectPropertyCount(schema, 0);\n    }\n    function IsObjectBigIntLike(schema) {\n        return IsObjectPropertyCount(schema, 0);\n    }\n    function IsObjectDateLike(schema) {\n        return IsObjectPropertyCount(schema, 0);\n    }\n    function IsObjectUint8ArrayLike(schema) {\n        return IsObjectArrayLike(schema);\n    }\n    function IsObjectFunctionLike(schema) {\n        const length = exports.Type.Number();\n        return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'length' in schema.properties && IntoBooleanResult(Visit(schema.properties['length'], length)) === TypeExtendsResult.True);\n    }\n    function IsObjectConstructorLike(schema) {\n        return IsObjectPropertyCount(schema, 0);\n    }\n    function IsObjectArrayLike(schema) {\n        const length = exports.Type.Number();\n        return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'length' in schema.properties && IntoBooleanResult(Visit(schema.properties['length'], length)) === TypeExtendsResult.True);\n    }\n    function IsObjectPromiseLike(schema) {\n        const then = exports.Type.Function([exports.Type.Any()], exports.Type.Any());\n        return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'then' in schema.properties && IntoBooleanResult(Visit(schema.properties['then'], then)) === TypeExtendsResult.True);\n    }\n    // --------------------------------------------------------------------------\n    // Property\n    // --------------------------------------------------------------------------\n    function Property(left, right) {\n        // prettier-ignore\n        return (Visit(left, right) === TypeExtendsResult.False ? TypeExtendsResult.False :\n            TypeGuard.TOptional(left) && !TypeGuard.TOptional(right) ? TypeExtendsResult.False :\n                TypeExtendsResult.True);\n    }\n    function TObjectRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TUnknown(left) ? TypeExtendsResult.False :\n            TypeGuard.TAny(left) ? TypeExtendsResult.Union : (TypeGuard.TNever(left) ||\n                (TypeGuard.TLiteralString(left) && IsObjectStringLike(right)) ||\n                (TypeGuard.TLiteralNumber(left) && IsObjectNumberLike(right)) ||\n                (TypeGuard.TLiteralBoolean(left) && IsObjectBooleanLike(right)) ||\n                (TypeGuard.TSymbol(left) && IsObjectSymbolLike(right)) ||\n                (TypeGuard.TBigInt(left) && IsObjectBigIntLike(right)) ||\n                (TypeGuard.TString(left) && IsObjectStringLike(right)) ||\n                (TypeGuard.TSymbol(left) && IsObjectSymbolLike(right)) ||\n                (TypeGuard.TNumber(left) && IsObjectNumberLike(right)) ||\n                (TypeGuard.TInteger(left) && IsObjectNumberLike(right)) ||\n                (TypeGuard.TBoolean(left) && IsObjectBooleanLike(right)) ||\n                (TypeGuard.TUint8Array(left) && IsObjectUint8ArrayLike(right)) ||\n                (TypeGuard.TDate(left) && IsObjectDateLike(right)) ||\n                (TypeGuard.TConstructor(left) && IsObjectConstructorLike(right)) ||\n                (TypeGuard.TFunction(left) && IsObjectFunctionLike(right))) ? TypeExtendsResult.True :\n                (TypeGuard.TRecord(left) && TypeGuard.TString(RecordKey(left))) ? (() => {\n                    // When expressing a Record with literal key values, the Record is converted into a Object with\n                    // the Hint assigned as `Record`. This is used to invert the extends logic.\n                    return right[exports.Hint] === 'Record' ? TypeExtendsResult.True : TypeExtendsResult.False;\n                })() :\n                    (TypeGuard.TRecord(left) && TypeGuard.TNumber(RecordKey(left))) ? (() => {\n                        return IsObjectPropertyCount(right, 0)\n                            ? TypeExtendsResult.True\n                            : TypeExtendsResult.False;\n                    })() :\n                        TypeExtendsResult.False);\n    }\n    function TObject(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                !TypeGuard.TObject(right) ? TypeExtendsResult.False :\n                    (() => {\n                        for (const key of Object.getOwnPropertyNames(right.properties)) {\n                            if (!(key in left.properties) && !TypeGuard.TOptional(right.properties[key])) {\n                                return TypeExtendsResult.False;\n                            }\n                            if (TypeGuard.TOptional(right.properties[key])) {\n                                return TypeExtendsResult.True;\n                            }\n                            if (Property(left.properties[key], right.properties[key]) === TypeExtendsResult.False) {\n                                return TypeExtendsResult.False;\n                            }\n                        }\n                        return TypeExtendsResult.True;\n                    })());\n    }\n    // --------------------------------------------------------------------------\n    // Promise\n    // --------------------------------------------------------------------------\n    function TPromise(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) && IsObjectPromiseLike(right) ? TypeExtendsResult.True :\n                !TypeGuard.TPromise(right) ? TypeExtendsResult.False :\n                    IntoBooleanResult(Visit(left.item, right.item)));\n    }\n    // --------------------------------------------------------------------------\n    // Record\n    // --------------------------------------------------------------------------\n    function RecordKey(schema) {\n        // prettier-ignore\n        return (exports.PatternNumberExact in schema.patternProperties ? exports.Type.Number() :\n            exports.PatternStringExact in schema.patternProperties ? exports.Type.String() :\n                Throw('Unknown record key pattern'));\n    }\n    function RecordValue(schema) {\n        // prettier-ignore\n        return (exports.PatternNumberExact in schema.patternProperties ? schema.patternProperties[exports.PatternNumberExact] :\n            exports.PatternStringExact in schema.patternProperties ? schema.patternProperties[exports.PatternStringExact] :\n                Throw('Unable to get record value schema'));\n    }\n    function TRecordRight(left, right) {\n        const [Key, Value] = [RecordKey(right), RecordValue(right)];\n        // prettier-ignore\n        return ((TypeGuard.TLiteralString(left) && TypeGuard.TNumber(Key) && IntoBooleanResult(Visit(left, Value)) === TypeExtendsResult.True) ? TypeExtendsResult.True :\n            TypeGuard.TUint8Array(left) && TypeGuard.TNumber(Key) ? Visit(left, Value) :\n                TypeGuard.TString(left) && TypeGuard.TNumber(Key) ? Visit(left, Value) :\n                    TypeGuard.TArray(left) && TypeGuard.TNumber(Key) ? Visit(left, Value) :\n                        TypeGuard.TObject(left) ? (() => {\n                            for (const key of Object.getOwnPropertyNames(left.properties)) {\n                                if (Property(Value, left.properties[key]) === TypeExtendsResult.False) {\n                                    return TypeExtendsResult.False;\n                                }\n                            }\n                            return TypeExtendsResult.True;\n                        })() :\n                            TypeExtendsResult.False);\n    }\n    function TRecord(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                !TypeGuard.TRecord(right) ? TypeExtendsResult.False :\n                    Visit(RecordValue(left), RecordValue(right)));\n    }\n    // --------------------------------------------------------------------------\n    // String\n    // --------------------------------------------------------------------------\n    function TStringRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TLiteral(left) && ValueGuard.IsString(left.const) ? TypeExtendsResult.True :\n            TypeGuard.TString(left) ? TypeExtendsResult.True :\n                TypeExtendsResult.False);\n    }\n    function TString(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TString(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Symbol\n    // --------------------------------------------------------------------------\n    function TSymbol(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TSymbol(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // TemplateLiteral\n    // --------------------------------------------------------------------------\n    function TTemplateLiteral(left, right) {\n        // TemplateLiteral types are resolved to either unions for finite expressions or string\n        // for infinite expressions. Here we call to TemplateLiteralResolver to resolve for\n        // either type and continue evaluating.\n        // prettier-ignore\n        return (TypeGuard.TTemplateLiteral(left) ? Visit(TemplateLiteralResolver.Resolve(left), right) :\n            TypeGuard.TTemplateLiteral(right) ? Visit(left, TemplateLiteralResolver.Resolve(right)) :\n                Throw('Invalid fallthrough for TemplateLiteral'));\n    }\n    // --------------------------------------------------------------------------\n    // Tuple\n    // --------------------------------------------------------------------------\n    function IsArrayOfTuple(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TArray(right) &&\n            left.items !== undefined &&\n            left.items.every((schema) => Visit(schema, right.items) === TypeExtendsResult.True));\n    }\n    function TTupleRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TNever(left) ? TypeExtendsResult.True :\n            TypeGuard.TUnknown(left) ? TypeExtendsResult.False :\n                TypeGuard.TAny(left) ? TypeExtendsResult.Union :\n                    TypeExtendsResult.False);\n    }\n    function TTuple(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) && IsObjectArrayLike(right) ? TypeExtendsResult.True :\n                TypeGuard.TArray(right) && IsArrayOfTuple(left, right) ? TypeExtendsResult.True :\n                    !TypeGuard.TTuple(right) ? TypeExtendsResult.False :\n                        (ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items)) || (!ValueGuard.IsUndefined(left.items) && ValueGuard.IsUndefined(right.items)) ? TypeExtendsResult.False :\n                            (ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items)) ? TypeExtendsResult.True :\n                                left.items.every((schema, index) => Visit(schema, right.items[index]) === TypeExtendsResult.True) ? TypeExtendsResult.True :\n                                    TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Uint8Array\n    // --------------------------------------------------------------------------\n    function TUint8Array(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TUint8Array(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Undefined\n    // --------------------------------------------------------------------------\n    function TUndefined(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TVoid(right) ? VoidRight(left, right) :\n                        TypeGuard.TUndefined(right) ? TypeExtendsResult.True :\n                            TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Union\n    // --------------------------------------------------------------------------\n    function TUnionRight(left, right) {\n        // prettier-ignore\n        return right.anyOf.some((schema) => Visit(left, schema) === TypeExtendsResult.True)\n            ? TypeExtendsResult.True\n            : TypeExtendsResult.False;\n    }\n    function TUnion(left, right) {\n        // prettier-ignore\n        return left.anyOf.every((schema) => Visit(schema, right) === TypeExtendsResult.True)\n            ? TypeExtendsResult.True\n            : TypeExtendsResult.False;\n    }\n    // --------------------------------------------------------------------------\n    // Unknown\n    // --------------------------------------------------------------------------\n    function TUnknownRight(left, right) {\n        return TypeExtendsResult.True;\n    }\n    function TUnknown(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TNever(right) ? TNeverRight(left, right) :\n            TypeGuard.TIntersect(right) ? TIntersectRight(left, right) :\n                TypeGuard.TUnion(right) ? TUnionRight(left, right) :\n                    TypeGuard.TAny(right) ? TAnyRight(left, right) :\n                        TypeGuard.TString(right) ? TStringRight(left, right) :\n                            TypeGuard.TNumber(right) ? TNumberRight(left, right) :\n                                TypeGuard.TInteger(right) ? TIntegerRight(left, right) :\n                                    TypeGuard.TBoolean(right) ? TBooleanRight(left, right) :\n                                        TypeGuard.TArray(right) ? TArrayRight(left, right) :\n                                            TypeGuard.TTuple(right) ? TTupleRight(left, right) :\n                                                TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                                                    TypeGuard.TUnknown(right) ? TypeExtendsResult.True :\n                                                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Void\n    // --------------------------------------------------------------------------\n    function VoidRight(left, right) {\n        // prettier-ignore\n        return TypeGuard.TUndefined(left) ? TypeExtendsResult.True :\n            TypeGuard.TUndefined(left) ? TypeExtendsResult.True :\n                TypeExtendsResult.False;\n    }\n    function TVoid(left, right) {\n        // prettier-ignore\n        return TypeGuard.TIntersect(right) ? TIntersectRight(left, right) :\n            TypeGuard.TUnion(right) ? TUnionRight(left, right) :\n                TypeGuard.TUnknown(right) ? TUnknownRight(left, right) :\n                    TypeGuard.TAny(right) ? TAnyRight(left, right) :\n                        TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                            TypeGuard.TVoid(right) ? TypeExtendsResult.True :\n                                TypeExtendsResult.False;\n    }\n    function Visit(left, right) {\n        // prettier-ignore\n        return (\n        // resolvable\n        (TypeGuard.TTemplateLiteral(left) || TypeGuard.TTemplateLiteral(right)) ? TTemplateLiteral(left, right) :\n            (TypeGuard.TNot(left) || TypeGuard.TNot(right)) ? TNot(left, right) :\n                // standard\n                TypeGuard.TAny(left) ? TAny(left, right) :\n                    TypeGuard.TArray(left) ? TArray(left, right) :\n                        TypeGuard.TBigInt(left) ? TBigInt(left, right) :\n                            TypeGuard.TBoolean(left) ? TBoolean(left, right) :\n                                TypeGuard.TAsyncIterator(left) ? TAsyncIterator(left, right) :\n                                    TypeGuard.TConstructor(left) ? TConstructor(left, right) :\n                                        TypeGuard.TDate(left) ? TDate(left, right) :\n                                            TypeGuard.TFunction(left) ? TFunction(left, right) :\n                                                TypeGuard.TInteger(left) ? TInteger(left, right) :\n                                                    TypeGuard.TIntersect(left) ? TIntersect(left, right) :\n                                                        TypeGuard.TIterator(left) ? TIterator(left, right) :\n                                                            TypeGuard.TLiteral(left) ? TLiteral(left, right) :\n                                                                TypeGuard.TNever(left) ? TNever(left, right) :\n                                                                    TypeGuard.TNull(left) ? TNull(left, right) :\n                                                                        TypeGuard.TNumber(left) ? TNumber(left, right) :\n                                                                            TypeGuard.TObject(left) ? TObject(left, right) :\n                                                                                TypeGuard.TRecord(left) ? TRecord(left, right) :\n                                                                                    TypeGuard.TString(left) ? TString(left, right) :\n                                                                                        TypeGuard.TSymbol(left) ? TSymbol(left, right) :\n                                                                                            TypeGuard.TTuple(left) ? TTuple(left, right) :\n                                                                                                TypeGuard.TPromise(left) ? TPromise(left, right) :\n                                                                                                    TypeGuard.TUint8Array(left) ? TUint8Array(left, right) :\n                                                                                                        TypeGuard.TUndefined(left) ? TUndefined(left, right) :\n                                                                                                            TypeGuard.TUnion(left) ? TUnion(left, right) :\n                                                                                                                TypeGuard.TUnknown(left) ? TUnknown(left, right) :\n                                                                                                                    TypeGuard.TVoid(left) ? TVoid(left, right) :\n                                                                                                                        Throw(`Unknown left type operand '${left[exports.Kind]}'`));\n    }\n    function Extends(left, right) {\n        return Visit(left, right);\n    }\n    TypeExtends.Extends = Extends;\n})(TypeExtends || (exports.TypeExtends = TypeExtends = {}));\n// --------------------------------------------------------------------------\n// TypeClone\n// --------------------------------------------------------------------------\n/** Specialized Clone for Types */\nvar TypeClone;\n(function (TypeClone) {\n    function ArrayType(value) {\n        return value.map((value) => Visit(value));\n    }\n    function DateType(value) {\n        return new Date(value.getTime());\n    }\n    function Uint8ArrayType(value) {\n        return new Uint8Array(value);\n    }\n    function ObjectType(value) {\n        const clonedProperties = Object.getOwnPropertyNames(value).reduce((acc, key) => ({ ...acc, [key]: Visit(value[key]) }), {});\n        const clonedSymbols = Object.getOwnPropertySymbols(value).reduce((acc, key) => ({ ...acc, [key]: Visit(value[key]) }), {});\n        return { ...clonedProperties, ...clonedSymbols };\n    }\n    function Visit(value) {\n        // prettier-ignore\n        return (ValueGuard.IsArray(value) ? ArrayType(value) :\n            ValueGuard.IsDate(value) ? DateType(value) :\n                ValueGuard.IsUint8Array(value) ? Uint8ArrayType(value) :\n                    ValueGuard.IsObject(value) ? ObjectType(value) :\n                        value);\n    }\n    /** Clones a Rest */\n    function Rest(schemas) {\n        return schemas.map((schema) => Type(schema));\n    }\n    TypeClone.Rest = Rest;\n    /** Clones a Type */\n    function Type(schema, options = {}) {\n        return { ...Visit(schema), ...options };\n    }\n    TypeClone.Type = Type;\n})(TypeClone || (exports.TypeClone = TypeClone = {}));\n// --------------------------------------------------------------------------\n// IndexedAccessor\n// --------------------------------------------------------------------------\nvar IndexedAccessor;\n(function (IndexedAccessor) {\n    function OptionalUnwrap(schema) {\n        return schema.map((schema) => {\n            const { [exports.Optional]: _, ...clone } = TypeClone.Type(schema);\n            return clone;\n        });\n    }\n    function IsIntersectOptional(schema) {\n        return schema.every((schema) => TypeGuard.TOptional(schema));\n    }\n    function IsUnionOptional(schema) {\n        return schema.some((schema) => TypeGuard.TOptional(schema));\n    }\n    function ResolveIntersect(schema) {\n        return IsIntersectOptional(schema.allOf) ? exports.Type.Optional(exports.Type.Intersect(OptionalUnwrap(schema.allOf))) : schema;\n    }\n    function ResolveUnion(schema) {\n        return IsUnionOptional(schema.anyOf) ? exports.Type.Optional(exports.Type.Union(OptionalUnwrap(schema.anyOf))) : schema;\n    }\n    function ResolveOptional(schema) {\n        // prettier-ignore\n        return schema[exports.Kind] === 'Intersect' ? ResolveIntersect(schema) :\n            schema[exports.Kind] === 'Union' ? ResolveUnion(schema) :\n                schema;\n    }\n    function TIntersect(schema, key) {\n        const resolved = schema.allOf.reduce((acc, schema) => {\n            const indexed = Visit(schema, key);\n            return indexed[exports.Kind] === 'Never' ? acc : [...acc, indexed];\n        }, []);\n        return ResolveOptional(exports.Type.Intersect(resolved));\n    }\n    function TUnion(schema, key) {\n        const resolved = schema.anyOf.map((schema) => Visit(schema, key));\n        return ResolveOptional(exports.Type.Union(resolved));\n    }\n    function TObject(schema, key) {\n        const property = schema.properties[key];\n        return ValueGuard.IsUndefined(property) ? exports.Type.Never() : exports.Type.Union([property]);\n    }\n    function TTuple(schema, key) {\n        const items = schema.items;\n        if (ValueGuard.IsUndefined(items))\n            return exports.Type.Never();\n        const element = items[key]; //\n        if (ValueGuard.IsUndefined(element))\n            return exports.Type.Never();\n        return element;\n    }\n    function Visit(schema, key) {\n        // prettier-ignore\n        return schema[exports.Kind] === 'Intersect' ? TIntersect(schema, key) :\n            schema[exports.Kind] === 'Union' ? TUnion(schema, key) :\n                schema[exports.Kind] === 'Object' ? TObject(schema, key) :\n                    schema[exports.Kind] === 'Tuple' ? TTuple(schema, key) :\n                        exports.Type.Never();\n    }\n    function Resolve(schema, keys, options = {}) {\n        const resolved = keys.map((key) => Visit(schema, key.toString()));\n        return ResolveOptional(exports.Type.Union(resolved, options));\n    }\n    IndexedAccessor.Resolve = Resolve;\n})(IndexedAccessor || (exports.IndexedAccessor = IndexedAccessor = {}));\n// --------------------------------------------------------------------------\n// Intrinsic\n// --------------------------------------------------------------------------\nvar Intrinsic;\n(function (Intrinsic) {\n    function Uncapitalize(value) {\n        const [first, rest] = [value.slice(0, 1), value.slice(1)];\n        return `${first.toLowerCase()}${rest}`;\n    }\n    function Capitalize(value) {\n        const [first, rest] = [value.slice(0, 1), value.slice(1)];\n        return `${first.toUpperCase()}${rest}`;\n    }\n    function Uppercase(value) {\n        return value.toUpperCase();\n    }\n    function Lowercase(value) {\n        return value.toLowerCase();\n    }\n    function IntrinsicTemplateLiteral(schema, mode) {\n        // note: template literals require special runtime handling as they are encoded in string patterns.\n        // This diverges from the mapped type which would otherwise map on the template literal kind.\n        const expression = TemplateLiteralParser.ParseExact(schema.pattern);\n        const finite = TemplateLiteralFinite.Check(expression);\n        if (!finite)\n            return { ...schema, pattern: IntrinsicLiteral(schema.pattern, mode) };\n        const strings = [...TemplateLiteralGenerator.Generate(expression)];\n        const literals = strings.map((value) => exports.Type.Literal(value));\n        const mapped = IntrinsicRest(literals, mode);\n        const union = exports.Type.Union(mapped);\n        return exports.Type.TemplateLiteral([union]);\n    }\n    function IntrinsicLiteral(value, mode) {\n        // prettier-ignore\n        return typeof value === 'string' ? (mode === 'Uncapitalize' ? Uncapitalize(value) :\n            mode === 'Capitalize' ? Capitalize(value) :\n                mode === 'Uppercase' ? Uppercase(value) :\n                    mode === 'Lowercase' ? Lowercase(value) :\n                        value) : value.toString();\n    }\n    function IntrinsicRest(schema, mode) {\n        if (schema.length === 0)\n            return [];\n        const [L, ...R] = schema;\n        return [Map(L, mode), ...IntrinsicRest(R, mode)];\n    }\n    function Visit(schema, mode) {\n        // prettier-ignore\n        return TypeGuard.TTemplateLiteral(schema) ? IntrinsicTemplateLiteral(schema, mode) :\n            TypeGuard.TUnion(schema) ? exports.Type.Union(IntrinsicRest(schema.anyOf, mode)) :\n                TypeGuard.TLiteral(schema) ? exports.Type.Literal(IntrinsicLiteral(schema.const, mode)) :\n                    schema;\n    }\n    /** Applies an intrinsic string manipulation to the given type. */\n    function Map(schema, mode) {\n        return Visit(schema, mode);\n    }\n    Intrinsic.Map = Map;\n})(Intrinsic || (exports.Intrinsic = Intrinsic = {}));\n// --------------------------------------------------------------------------\n// ObjectMap\n// --------------------------------------------------------------------------\nvar ObjectMap;\n(function (ObjectMap) {\n    function TIntersect(schema, callback) {\n        // prettier-ignore\n        return exports.Type.Intersect(schema.allOf.map((inner) => Visit(inner, callback)), { ...schema });\n    }\n    function TUnion(schema, callback) {\n        // prettier-ignore\n        return exports.Type.Union(schema.anyOf.map((inner) => Visit(inner, callback)), { ...schema });\n    }\n    function TObject(schema, callback) {\n        return callback(schema);\n    }\n    function Visit(schema, callback) {\n        // There are cases where users need to map objects with unregistered kinds. Using a TypeGuard here would\n        // prevent sub schema mapping as unregistered kinds will not pass TSchema checks. This is notable in the\n        // case of TObject where unregistered property kinds cause the TObject check to fail. As mapping is only\n        // used for composition, we use explicit checks instead.\n        // prettier-ignore\n        return (schema[exports.Kind] === 'Intersect' ? TIntersect(schema, callback) :\n            schema[exports.Kind] === 'Union' ? TUnion(schema, callback) :\n                schema[exports.Kind] === 'Object' ? TObject(schema, callback) :\n                    schema);\n    }\n    function Map(schema, callback, options) {\n        return { ...Visit(TypeClone.Type(schema), callback), ...options };\n    }\n    ObjectMap.Map = Map;\n})(ObjectMap || (exports.ObjectMap = ObjectMap = {}));\nvar KeyResolver;\n(function (KeyResolver) {\n    function UnwrapPattern(key) {\n        return key[0] === '^' && key[key.length - 1] === '$' ? key.slice(1, key.length - 1) : key;\n    }\n    function TIntersect(schema, options) {\n        return schema.allOf.reduce((acc, schema) => [...acc, ...Visit(schema, options)], []);\n    }\n    function TUnion(schema, options) {\n        const sets = schema.anyOf.map((inner) => Visit(inner, options));\n        return [...sets.reduce((set, outer) => outer.map((key) => (sets.every((inner) => inner.includes(key)) ? set.add(key) : set))[0], new Set())];\n    }\n    function TObject(schema, options) {\n        return Object.getOwnPropertyNames(schema.properties);\n    }\n    function TRecord(schema, options) {\n        return options.includePatterns ? Object.getOwnPropertyNames(schema.patternProperties) : [];\n    }\n    function Visit(schema, options) {\n        // prettier-ignore\n        return (TypeGuard.TIntersect(schema) ? TIntersect(schema, options) :\n            TypeGuard.TUnion(schema) ? TUnion(schema, options) :\n                TypeGuard.TObject(schema) ? TObject(schema, options) :\n                    TypeGuard.TRecord(schema) ? TRecord(schema, options) :\n                        []);\n    }\n    /** Resolves an array of keys in this schema */\n    function ResolveKeys(schema, options) {\n        return [...new Set(Visit(schema, options))];\n    }\n    KeyResolver.ResolveKeys = ResolveKeys;\n    /** Resolves a regular expression pattern matching all keys in this schema */\n    function ResolvePattern(schema) {\n        const keys = ResolveKeys(schema, { includePatterns: true });\n        const pattern = keys.map((key) => `(${UnwrapPattern(key)})`);\n        return `^(${pattern.join('|')})$`;\n    }\n    KeyResolver.ResolvePattern = ResolvePattern;\n})(KeyResolver || (exports.KeyResolver = KeyResolver = {}));\n// --------------------------------------------------------------------------\n// KeyArrayResolver\n// --------------------------------------------------------------------------\nclass KeyArrayResolverError extends TypeBoxError {\n}\nexports.KeyArrayResolverError = KeyArrayResolverError;\nvar KeyArrayResolver;\n(function (KeyArrayResolver) {\n    /** Resolves an array of string[] keys from the given schema or array type. */\n    function Resolve(schema) {\n        // prettier-ignore\n        return Array.isArray(schema) ? schema :\n            TypeGuard.TUnionLiteral(schema) ? schema.anyOf.map((schema) => schema.const.toString()) :\n                TypeGuard.TLiteral(schema) ? [schema.const] :\n                    TypeGuard.TTemplateLiteral(schema) ? (() => {\n                        const expression = TemplateLiteralParser.ParseExact(schema.pattern);\n                        if (!TemplateLiteralFinite.Check(expression))\n                            throw new KeyArrayResolverError('Cannot resolve keys from infinite template expression');\n                        return [...TemplateLiteralGenerator.Generate(expression)];\n                    })() : [];\n    }\n    KeyArrayResolver.Resolve = Resolve;\n})(KeyArrayResolver || (exports.KeyArrayResolver = KeyArrayResolver = {}));\n// --------------------------------------------------------------------------\n// UnionResolver\n// --------------------------------------------------------------------------\nvar UnionResolver;\n(function (UnionResolver) {\n    function* TUnion(union) {\n        for (const schema of union.anyOf) {\n            if (schema[exports.Kind] === 'Union') {\n                yield* TUnion(schema);\n            }\n            else {\n                yield schema;\n            }\n        }\n    }\n    /** Returns a resolved union with interior unions flattened */\n    function Resolve(union) {\n        return exports.Type.Union([...TUnion(union)], { ...union });\n    }\n    UnionResolver.Resolve = Resolve;\n})(UnionResolver || (exports.UnionResolver = UnionResolver = {}));\n// --------------------------------------------------------------------------\n// TemplateLiteralPattern\n// --------------------------------------------------------------------------\nclass TemplateLiteralPatternError extends TypeBoxError {\n}\nexports.TemplateLiteralPatternError = TemplateLiteralPatternError;\nvar TemplateLiteralPattern;\n(function (TemplateLiteralPattern) {\n    function Throw(message) {\n        throw new TemplateLiteralPatternError(message);\n    }\n    function Escape(value) {\n        return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    }\n    function Visit(schema, acc) {\n        // prettier-ignore\n        return (TypeGuard.TTemplateLiteral(schema) ? schema.pattern.slice(1, schema.pattern.length - 1) :\n            TypeGuard.TUnion(schema) ? `(${schema.anyOf.map((schema) => Visit(schema, acc)).join('|')})` :\n                TypeGuard.TNumber(schema) ? `${acc}${exports.PatternNumber}` :\n                    TypeGuard.TInteger(schema) ? `${acc}${exports.PatternNumber}` :\n                        TypeGuard.TBigInt(schema) ? `${acc}${exports.PatternNumber}` :\n                            TypeGuard.TString(schema) ? `${acc}${exports.PatternString}` :\n                                TypeGuard.TLiteral(schema) ? `${acc}${Escape(schema.const.toString())}` :\n                                    TypeGuard.TBoolean(schema) ? `${acc}${exports.PatternBoolean}` :\n                                        Throw(`Unexpected Kind '${schema[exports.Kind]}'`));\n    }\n    function Create(kinds) {\n        return `^${kinds.map((schema) => Visit(schema, '')).join('')}\\$`;\n    }\n    TemplateLiteralPattern.Create = Create;\n})(TemplateLiteralPattern || (exports.TemplateLiteralPattern = TemplateLiteralPattern = {}));\n// --------------------------------------------------------------------------------------\n// TemplateLiteralResolver\n// --------------------------------------------------------------------------------------\nvar TemplateLiteralResolver;\n(function (TemplateLiteralResolver) {\n    /** Resolves a template literal as a TUnion */\n    function Resolve(template) {\n        const expression = TemplateLiteralParser.ParseExact(template.pattern);\n        if (!TemplateLiteralFinite.Check(expression))\n            return exports.Type.String();\n        const literals = [...TemplateLiteralGenerator.Generate(expression)].map((value) => exports.Type.Literal(value));\n        return exports.Type.Union(literals);\n    }\n    TemplateLiteralResolver.Resolve = Resolve;\n})(TemplateLiteralResolver || (exports.TemplateLiteralResolver = TemplateLiteralResolver = {}));\n// --------------------------------------------------------------------------------------\n// TemplateLiteralParser\n// --------------------------------------------------------------------------------------\nclass TemplateLiteralParserError extends TypeBoxError {\n}\nexports.TemplateLiteralParserError = TemplateLiteralParserError;\nvar TemplateLiteralParser;\n(function (TemplateLiteralParser) {\n    function IsNonEscaped(pattern, index, char) {\n        return pattern[index] === char && pattern.charCodeAt(index - 1) !== 92;\n    }\n    function IsOpenParen(pattern, index) {\n        return IsNonEscaped(pattern, index, '(');\n    }\n    function IsCloseParen(pattern, index) {\n        return IsNonEscaped(pattern, index, ')');\n    }\n    function IsSeparator(pattern, index) {\n        return IsNonEscaped(pattern, index, '|');\n    }\n    function IsGroup(pattern) {\n        if (!(IsOpenParen(pattern, 0) && IsCloseParen(pattern, pattern.length - 1)))\n            return false;\n        let count = 0;\n        for (let index = 0; index < pattern.length; index++) {\n            if (IsOpenParen(pattern, index))\n                count += 1;\n            if (IsCloseParen(pattern, index))\n                count -= 1;\n            if (count === 0 && index !== pattern.length - 1)\n                return false;\n        }\n        return true;\n    }\n    function InGroup(pattern) {\n        return pattern.slice(1, pattern.length - 1);\n    }\n    function IsPrecedenceOr(pattern) {\n        let count = 0;\n        for (let index = 0; index < pattern.length; index++) {\n            if (IsOpenParen(pattern, index))\n                count += 1;\n            if (IsCloseParen(pattern, index))\n                count -= 1;\n            if (IsSeparator(pattern, index) && count === 0)\n                return true;\n        }\n        return false;\n    }\n    function IsPrecedenceAnd(pattern) {\n        for (let index = 0; index < pattern.length; index++) {\n            if (IsOpenParen(pattern, index))\n                return true;\n        }\n        return false;\n    }\n    function Or(pattern) {\n        let [count, start] = [0, 0];\n        const expressions = [];\n        for (let index = 0; index < pattern.length; index++) {\n            if (IsOpenParen(pattern, index))\n                count += 1;\n            if (IsCloseParen(pattern, index))\n                count -= 1;\n            if (IsSeparator(pattern, index) && count === 0) {\n                const range = pattern.slice(start, index);\n                if (range.length > 0)\n                    expressions.push(Parse(range));\n                start = index + 1;\n            }\n        }\n        const range = pattern.slice(start);\n        if (range.length > 0)\n            expressions.push(Parse(range));\n        if (expressions.length === 0)\n            return { type: 'const', const: '' };\n        if (expressions.length === 1)\n            return expressions[0];\n        return { type: 'or', expr: expressions };\n    }\n    function And(pattern) {\n        function Group(value, index) {\n            if (!IsOpenParen(value, index))\n                throw new TemplateLiteralParserError(`TemplateLiteralParser: Index must point to open parens`);\n            let count = 0;\n            for (let scan = index; scan < value.length; scan++) {\n                if (IsOpenParen(value, scan))\n                    count += 1;\n                if (IsCloseParen(value, scan))\n                    count -= 1;\n                if (count === 0)\n                    return [index, scan];\n            }\n            throw new TemplateLiteralParserError(`TemplateLiteralParser: Unclosed group parens in expression`);\n        }\n        function Range(pattern, index) {\n            for (let scan = index; scan < pattern.length; scan++) {\n                if (IsOpenParen(pattern, scan))\n                    return [index, scan];\n            }\n            return [index, pattern.length];\n        }\n        const expressions = [];\n        for (let index = 0; index < pattern.length; index++) {\n            if (IsOpenParen(pattern, index)) {\n                const [start, end] = Group(pattern, index);\n                const range = pattern.slice(start, end + 1);\n                expressions.push(Parse(range));\n                index = end;\n            }\n            else {\n                const [start, end] = Range(pattern, index);\n                const range = pattern.slice(start, end);\n                if (range.length > 0)\n                    expressions.push(Parse(range));\n                index = end - 1;\n            }\n        }\n        // prettier-ignore\n        return (expressions.length === 0) ? { type: 'const', const: '' } :\n            (expressions.length === 1) ? expressions[0] :\n                { type: 'and', expr: expressions };\n    }\n    /** Parses a pattern and returns an expression tree */\n    function Parse(pattern) {\n        // prettier-ignore\n        return IsGroup(pattern) ? Parse(InGroup(pattern)) :\n            IsPrecedenceOr(pattern) ? Or(pattern) :\n                IsPrecedenceAnd(pattern) ? And(pattern) :\n                    { type: 'const', const: pattern };\n    }\n    TemplateLiteralParser.Parse = Parse;\n    /** Parses a pattern and strips forward and trailing ^ and $ */\n    function ParseExact(pattern) {\n        return Parse(pattern.slice(1, pattern.length - 1));\n    }\n    TemplateLiteralParser.ParseExact = ParseExact;\n})(TemplateLiteralParser || (exports.TemplateLiteralParser = TemplateLiteralParser = {}));\n// --------------------------------------------------------------------------------------\n// TemplateLiteralFinite\n// --------------------------------------------------------------------------------------\nclass TemplateLiteralFiniteError extends TypeBoxError {\n}\nexports.TemplateLiteralFiniteError = TemplateLiteralFiniteError;\nvar TemplateLiteralFinite;\n(function (TemplateLiteralFinite) {\n    function Throw(message) {\n        throw new TemplateLiteralFiniteError(message);\n    }\n    function IsNumber(expression) {\n        // prettier-ignore\n        return (expression.type === 'or' &&\n            expression.expr.length === 2 &&\n            expression.expr[0].type === 'const' &&\n            expression.expr[0].const === '0' &&\n            expression.expr[1].type === 'const' &&\n            expression.expr[1].const === '[1-9][0-9]*');\n    }\n    function IsBoolean(expression) {\n        // prettier-ignore\n        return (expression.type === 'or' &&\n            expression.expr.length === 2 &&\n            expression.expr[0].type === 'const' &&\n            expression.expr[0].const === 'true' &&\n            expression.expr[1].type === 'const' &&\n            expression.expr[1].const === 'false');\n    }\n    function IsString(expression) {\n        return expression.type === 'const' && expression.const === '.*';\n    }\n    function Check(expression) {\n        // prettier-ignore\n        return IsBoolean(expression) ? true :\n            IsNumber(expression) || IsString(expression) ? false :\n                (expression.type === 'and') ? expression.expr.every((expr) => Check(expr)) :\n                    (expression.type === 'or') ? expression.expr.every((expr) => Check(expr)) :\n                        (expression.type === 'const') ? true :\n                            Throw(`Unknown expression type`);\n    }\n    TemplateLiteralFinite.Check = Check;\n})(TemplateLiteralFinite || (exports.TemplateLiteralFinite = TemplateLiteralFinite = {}));\n// --------------------------------------------------------------------------------------\n// TemplateLiteralGenerator\n// --------------------------------------------------------------------------------------\nclass TemplateLiteralGeneratorError extends TypeBoxError {\n}\nexports.TemplateLiteralGeneratorError = TemplateLiteralGeneratorError;\nvar TemplateLiteralGenerator;\n(function (TemplateLiteralGenerator) {\n    function* Reduce(buffer) {\n        if (buffer.length === 1)\n            return yield* buffer[0];\n        for (const left of buffer[0]) {\n            for (const right of Reduce(buffer.slice(1))) {\n                yield `${left}${right}`;\n            }\n        }\n    }\n    function* And(expression) {\n        return yield* Reduce(expression.expr.map((expr) => [...Generate(expr)]));\n    }\n    function* Or(expression) {\n        for (const expr of expression.expr)\n            yield* Generate(expr);\n    }\n    function* Const(expression) {\n        return yield expression.const;\n    }\n    function* Generate(expression) {\n        // prettier-ignore\n        return (expression.type === 'and' ? yield* And(expression) :\n            expression.type === 'or' ? yield* Or(expression) :\n                expression.type === 'const' ? yield* Const(expression) :\n                    (() => { throw new TemplateLiteralGeneratorError('Unknown expression'); })());\n    }\n    TemplateLiteralGenerator.Generate = Generate;\n})(TemplateLiteralGenerator || (exports.TemplateLiteralGenerator = TemplateLiteralGenerator = {}));\n// ---------------------------------------------------------------------\n// TemplateLiteralDslParser\n// ---------------------------------------------------------------------\nvar TemplateLiteralDslParser;\n(function (TemplateLiteralDslParser) {\n    function* ParseUnion(template) {\n        const trim = template.trim().replace(/\"|'/g, '');\n        // prettier-ignore\n        return (trim === 'boolean' ? yield exports.Type.Boolean() :\n            trim === 'number' ? yield exports.Type.Number() :\n                trim === 'bigint' ? yield exports.Type.BigInt() :\n                    trim === 'string' ? yield exports.Type.String() :\n                        yield (() => {\n                            const literals = trim.split('|').map((literal) => exports.Type.Literal(literal.trim()));\n                            return (literals.length === 0 ? exports.Type.Never() :\n                                literals.length === 1 ? literals[0] :\n                                    exports.Type.Union(literals));\n                        })());\n    }\n    function* ParseTerminal(template) {\n        if (template[1] !== '{') {\n            const L = exports.Type.Literal('$');\n            const R = ParseLiteral(template.slice(1));\n            return yield* [L, ...R];\n        }\n        for (let i = 2; i < template.length; i++) {\n            if (template[i] === '}') {\n                const L = ParseUnion(template.slice(2, i));\n                const R = ParseLiteral(template.slice(i + 1));\n                return yield* [...L, ...R];\n            }\n        }\n        yield exports.Type.Literal(template);\n    }\n    function* ParseLiteral(template) {\n        for (let i = 0; i < template.length; i++) {\n            if (template[i] === '$') {\n                const L = exports.Type.Literal(template.slice(0, i));\n                const R = ParseTerminal(template.slice(i));\n                return yield* [L, ...R];\n            }\n        }\n        yield exports.Type.Literal(template);\n    }\n    function Parse(template_dsl) {\n        return [...ParseLiteral(template_dsl)];\n    }\n    TemplateLiteralDslParser.Parse = Parse;\n})(TemplateLiteralDslParser || (exports.TemplateLiteralDslParser = TemplateLiteralDslParser = {}));\n// ---------------------------------------------------------------------\n// TransformBuilder\n// ---------------------------------------------------------------------\nclass TransformDecodeBuilder {\n    constructor(schema) {\n        this.schema = schema;\n    }\n    Decode(decode) {\n        return new TransformEncodeBuilder(this.schema, decode);\n    }\n}\nexports.TransformDecodeBuilder = TransformDecodeBuilder;\nclass TransformEncodeBuilder {\n    constructor(schema, decode) {\n        this.schema = schema;\n        this.decode = decode;\n    }\n    Encode(encode) {\n        const schema = TypeClone.Type(this.schema);\n        // prettier-ignore\n        return (TypeGuard.TTransform(schema) ? (() => {\n            const Encode = (value) => schema[exports.Transform].Encode(encode(value));\n            const Decode = (value) => this.decode(schema[exports.Transform].Decode(value));\n            const Codec = { Encode: Encode, Decode: Decode };\n            return { ...schema, [exports.Transform]: Codec };\n        })() : (() => {\n            const Codec = { Decode: this.decode, Encode: encode };\n            return { ...schema, [exports.Transform]: Codec };\n        })());\n    }\n}\nexports.TransformEncodeBuilder = TransformEncodeBuilder;\n// --------------------------------------------------------------------------\n// TypeOrdinal: Used for auto $id generation\n// --------------------------------------------------------------------------\nlet TypeOrdinal = 0;\n// --------------------------------------------------------------------------\n// TypeBuilder\n// --------------------------------------------------------------------------\nclass TypeBuilderError extends TypeBoxError {\n}\nexports.TypeBuilderError = TypeBuilderError;\nclass TypeBuilder {\n    /** `[Internal]` Creates a schema without `static` and `params` types */\n    Create(schema) {\n        return schema;\n    }\n    /** `[Internal]` Throws a TypeBuilder error with the given message */\n    Throw(message) {\n        throw new TypeBuilderError(message);\n    }\n    /** `[Internal]` Discards property keys from the given record type */\n    Discard(record, keys) {\n        return keys.reduce((acc, key) => {\n            const { [key]: _, ...rest } = acc;\n            return rest;\n        }, record);\n    }\n    /** `[Json]` Omits compositing symbols from this schema */\n    Strict(schema) {\n        return JSON.parse(JSON.stringify(schema));\n    }\n}\nexports.TypeBuilder = TypeBuilder;\n// --------------------------------------------------------------------------\n// JsonTypeBuilder\n// --------------------------------------------------------------------------\nclass JsonTypeBuilder extends TypeBuilder {\n    // ------------------------------------------------------------------------\n    // Modifiers\n    // ------------------------------------------------------------------------\n    /** `[Json]` Creates a Readonly and Optional property */\n    ReadonlyOptional(schema) {\n        return this.Readonly(this.Optional(schema));\n    }\n    /** `[Json]` Creates a Readonly property */\n    Readonly(schema) {\n        return { ...TypeClone.Type(schema), [exports.Readonly]: 'Readonly' };\n    }\n    /** `[Json]` Creates an Optional property */\n    Optional(schema) {\n        return { ...TypeClone.Type(schema), [exports.Optional]: 'Optional' };\n    }\n    // ------------------------------------------------------------------------\n    // Types\n    // ------------------------------------------------------------------------\n    /** `[Json]` Creates an Any type */\n    Any(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Any' });\n    }\n    /** `[Json]` Creates an Array type */\n    Array(schema, options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Array', type: 'array', items: TypeClone.Type(schema) });\n    }\n    /** `[Json]` Creates a Boolean type */\n    Boolean(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Boolean', type: 'boolean' });\n    }\n    /** `[Json]` Intrinsic function to Capitalize LiteralString types */\n    Capitalize(schema, options = {}) {\n        return { ...Intrinsic.Map(TypeClone.Type(schema), 'Capitalize'), ...options };\n    }\n    /** `[Json]` Creates a Composite object type */\n    Composite(objects, options) {\n        const intersect = exports.Type.Intersect(objects, {});\n        const keys = KeyResolver.ResolveKeys(intersect, { includePatterns: false });\n        const properties = keys.reduce((acc, key) => ({ ...acc, [key]: exports.Type.Index(intersect, [key]) }), {});\n        return exports.Type.Object(properties, options);\n    }\n    /** `[Json]` Creates a Enum type */\n    Enum(item, options = {}) {\n        if (ValueGuard.IsUndefined(item))\n            return this.Throw('Enum undefined or empty');\n        // prettier-ignore\n        const values1 = Object.getOwnPropertyNames(item).filter((key) => isNaN(key)).map((key) => item[key]);\n        const values2 = [...new Set(values1)];\n        const anyOf = values2.map((value) => exports.Type.Literal(value));\n        return this.Union(anyOf, { ...options, [exports.Hint]: 'Enum' });\n    }\n    /** `[Json]` Creates a Conditional type */\n    Extends(left, right, trueType, falseType, options = {}) {\n        switch (TypeExtends.Extends(left, right)) {\n            case TypeExtendsResult.Union:\n                return this.Union([TypeClone.Type(trueType, options), TypeClone.Type(falseType, options)]);\n            case TypeExtendsResult.True:\n                return TypeClone.Type(trueType, options);\n            case TypeExtendsResult.False:\n                return TypeClone.Type(falseType, options);\n        }\n    }\n    /** `[Json]` Constructs a type by excluding from unionType all union members that are assignable to excludedMembers */\n    Exclude(unionType, excludedMembers, options = {}) {\n        // prettier-ignore\n        return (TypeGuard.TTemplateLiteral(unionType) ? this.Exclude(TemplateLiteralResolver.Resolve(unionType), excludedMembers, options) :\n            TypeGuard.TTemplateLiteral(excludedMembers) ? this.Exclude(unionType, TemplateLiteralResolver.Resolve(excludedMembers), options) :\n                TypeGuard.TUnion(unionType) ? (() => {\n                    const narrowed = unionType.anyOf.filter((inner) => TypeExtends.Extends(inner, excludedMembers) === TypeExtendsResult.False);\n                    return (narrowed.length === 1 ? TypeClone.Type(narrowed[0], options) : this.Union(narrowed, options));\n                })() :\n                    TypeExtends.Extends(unionType, excludedMembers) !== TypeExtendsResult.False ? this.Never(options) :\n                        TypeClone.Type(unionType, options));\n    }\n    /** `[Json]` Constructs a type by extracting from type all union members that are assignable to union */\n    Extract(type, union, options = {}) {\n        // prettier-ignore\n        return (TypeGuard.TTemplateLiteral(type) ? this.Extract(TemplateLiteralResolver.Resolve(type), union, options) :\n            TypeGuard.TTemplateLiteral(union) ? this.Extract(type, TemplateLiteralResolver.Resolve(union), options) :\n                TypeGuard.TUnion(type) ? (() => {\n                    const narrowed = type.anyOf.filter((inner) => TypeExtends.Extends(inner, union) !== TypeExtendsResult.False);\n                    return (narrowed.length === 1 ? TypeClone.Type(narrowed[0], options) : this.Union(narrowed, options));\n                })() :\n                    TypeExtends.Extends(type, union) !== TypeExtendsResult.False ? TypeClone.Type(type, options) :\n                        this.Never(options));\n    }\n    /** `[Json]` Returns an Indexed property type for the given keys */\n    Index(schema, unresolved, options = {}) {\n        // prettier-ignore\n        return (TypeGuard.TArray(schema) && TypeGuard.TNumber(unresolved) ? (() => {\n            return TypeClone.Type(schema.items, options);\n        })() :\n            TypeGuard.TTuple(schema) && TypeGuard.TNumber(unresolved) ? (() => {\n                const items = ValueGuard.IsUndefined(schema.items) ? [] : schema.items;\n                const cloned = items.map((schema) => TypeClone.Type(schema));\n                return this.Union(cloned, options);\n            })() : (() => {\n                const keys = KeyArrayResolver.Resolve(unresolved);\n                const clone = TypeClone.Type(schema);\n                return IndexedAccessor.Resolve(clone, keys, options);\n            })());\n    }\n    /** `[Json]` Creates an Integer type */\n    Integer(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Integer', type: 'integer' });\n    }\n    /** `[Json]` Creates an Intersect type */\n    Intersect(allOf, options = {}) {\n        if (allOf.length === 0)\n            return exports.Type.Never();\n        if (allOf.length === 1)\n            return TypeClone.Type(allOf[0], options);\n        if (allOf.some((schema) => TypeGuard.TTransform(schema)))\n            this.Throw('Cannot intersect transform types');\n        const objects = allOf.every((schema) => TypeGuard.TObject(schema));\n        const cloned = TypeClone.Rest(allOf);\n        // prettier-ignore\n        const clonedUnevaluatedProperties = TypeGuard.TSchema(options.unevaluatedProperties)\n            ? { unevaluatedProperties: TypeClone.Type(options.unevaluatedProperties) }\n            : {};\n        return options.unevaluatedProperties === false || TypeGuard.TSchema(options.unevaluatedProperties) || objects\n            ? this.Create({ ...options, ...clonedUnevaluatedProperties, [exports.Kind]: 'Intersect', type: 'object', allOf: cloned })\n            : this.Create({ ...options, ...clonedUnevaluatedProperties, [exports.Kind]: 'Intersect', allOf: cloned });\n    }\n    /** `[Json]` Creates a KeyOf type */\n    KeyOf(schema, options = {}) {\n        // prettier-ignore\n        return (TypeGuard.TRecord(schema) ? (() => {\n            const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n            return (pattern === exports.PatternNumberExact ? this.Number(options) :\n                pattern === exports.PatternStringExact ? this.String(options) :\n                    this.Throw('Unable to resolve key type from Record key pattern'));\n        })() :\n            TypeGuard.TTuple(schema) ? (() => {\n                const items = ValueGuard.IsUndefined(schema.items) ? [] : schema.items;\n                const literals = items.map((_, index) => exports.Type.Literal(index.toString()));\n                return this.Union(literals, options);\n            })() :\n                TypeGuard.TArray(schema) ? (() => {\n                    return this.Number(options);\n                })() : (() => {\n                    const keys = KeyResolver.ResolveKeys(schema, { includePatterns: false });\n                    if (keys.length === 0)\n                        return this.Never(options);\n                    const literals = keys.map((key) => this.Literal(key));\n                    return this.Union(literals, options);\n                })());\n    }\n    /** `[Json]` Creates a Literal type */\n    Literal(value, options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Literal', const: value, type: typeof value });\n    }\n    /** `[Json]` Intrinsic function to Lowercase LiteralString types */\n    Lowercase(schema, options = {}) {\n        return { ...Intrinsic.Map(TypeClone.Type(schema), 'Lowercase'), ...options };\n    }\n    /** `[Json]` Creates a Never type */\n    Never(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Never', not: {} });\n    }\n    /** `[Json]` Creates a Not type */\n    Not(schema, options) {\n        return this.Create({ ...options, [exports.Kind]: 'Not', not: TypeClone.Type(schema) });\n    }\n    /** `[Json]` Creates a Null type */\n    Null(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Null', type: 'null' });\n    }\n    /** `[Json]` Creates a Number type */\n    Number(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Number', type: 'number' });\n    }\n    /** `[Json]` Creates an Object type */\n    Object(properties, options = {}) {\n        const propertyKeys = Object.getOwnPropertyNames(properties);\n        const optionalKeys = propertyKeys.filter((key) => TypeGuard.TOptional(properties[key]));\n        const requiredKeys = propertyKeys.filter((name) => !optionalKeys.includes(name));\n        const clonedAdditionalProperties = TypeGuard.TSchema(options.additionalProperties) ? { additionalProperties: TypeClone.Type(options.additionalProperties) } : {};\n        const clonedProperties = propertyKeys.reduce((acc, key) => ({ ...acc, [key]: TypeClone.Type(properties[key]) }), {});\n        return requiredKeys.length > 0\n            ? this.Create({ ...options, ...clonedAdditionalProperties, [exports.Kind]: 'Object', type: 'object', properties: clonedProperties, required: requiredKeys })\n            : this.Create({ ...options, ...clonedAdditionalProperties, [exports.Kind]: 'Object', type: 'object', properties: clonedProperties });\n    }\n    /** `[Json]` Constructs a type whose keys are omitted from the given type */\n    Omit(schema, unresolved, options = {}) {\n        const keys = KeyArrayResolver.Resolve(unresolved);\n        // prettier-ignore\n        return ObjectMap.Map(this.Discard(TypeClone.Type(schema), ['$id', exports.Transform]), (object) => {\n            if (ValueGuard.IsArray(object.required)) {\n                object.required = object.required.filter((key) => !keys.includes(key));\n                if (object.required.length === 0)\n                    delete object.required;\n            }\n            for (const key of Object.getOwnPropertyNames(object.properties)) {\n                if (keys.includes(key))\n                    delete object.properties[key];\n            }\n            return this.Create(object);\n        }, options);\n    }\n    /** `[Json]` Constructs a type where all properties are optional */\n    Partial(schema, options = {}) {\n        // prettier-ignore\n        return ObjectMap.Map(this.Discard(TypeClone.Type(schema), ['$id', exports.Transform]), (object) => {\n            const properties = Object.getOwnPropertyNames(object.properties).reduce((acc, key) => {\n                return { ...acc, [key]: this.Optional(object.properties[key]) };\n            }, {});\n            return this.Object(properties, this.Discard(object, ['required']) /* object used as options to retain other constraints */);\n        }, options);\n    }\n    /** `[Json]` Constructs a type whose keys are picked from the given type */\n    Pick(schema, unresolved, options = {}) {\n        const keys = KeyArrayResolver.Resolve(unresolved);\n        // prettier-ignore\n        return ObjectMap.Map(this.Discard(TypeClone.Type(schema), ['$id', exports.Transform]), (object) => {\n            if (ValueGuard.IsArray(object.required)) {\n                object.required = object.required.filter((key) => keys.includes(key));\n                if (object.required.length === 0)\n                    delete object.required;\n            }\n            for (const key of Object.getOwnPropertyNames(object.properties)) {\n                if (!keys.includes(key))\n                    delete object.properties[key];\n            }\n            return this.Create(object);\n        }, options);\n    }\n    /** `[Json]` Creates a Record type */\n    Record(key, schema, options = {}) {\n        // prettier-ignore\n        return (TypeGuard.TTemplateLiteral(key) ? (() => {\n            const expression = TemplateLiteralParser.ParseExact(key.pattern);\n            // prettier-ignore\n            return TemplateLiteralFinite.Check(expression)\n                ? (this.Object([...TemplateLiteralGenerator.Generate(expression)].reduce((acc, key) => ({ ...acc, [key]: TypeClone.Type(schema) }), {}), options))\n                : this.Create({ ...options, [exports.Kind]: 'Record', type: 'object', patternProperties: { [key.pattern]: TypeClone.Type(schema) } });\n        })() :\n            TypeGuard.TUnion(key) ? (() => {\n                const union = UnionResolver.Resolve(key);\n                if (TypeGuard.TUnionLiteral(union)) {\n                    const properties = union.anyOf.reduce((acc, literal) => ({ ...acc, [literal.const]: TypeClone.Type(schema) }), {});\n                    return this.Object(properties, { ...options, [exports.Hint]: 'Record' });\n                }\n                else\n                    this.Throw('Record key of type union contains non-literal types');\n            })() :\n                TypeGuard.TLiteral(key) ? (() => {\n                    // prettier-ignore\n                    return (ValueGuard.IsString(key.const) || ValueGuard.IsNumber(key.const))\n                        ? this.Object({ [key.const]: TypeClone.Type(schema) }, options)\n                        : this.Throw('Record key of type literal is not of type string or number');\n                })() :\n                    TypeGuard.TInteger(key) || TypeGuard.TNumber(key) ? (() => {\n                        return this.Create({ ...options, [exports.Kind]: 'Record', type: 'object', patternProperties: { [exports.PatternNumberExact]: TypeClone.Type(schema) } });\n                    })() :\n                        TypeGuard.TString(key) ? (() => {\n                            const pattern = ValueGuard.IsUndefined(key.pattern) ? exports.PatternStringExact : key.pattern;\n                            return this.Create({ ...options, [exports.Kind]: 'Record', type: 'object', patternProperties: { [pattern]: TypeClone.Type(schema) } });\n                        })() :\n                            this.Never());\n    }\n    /** `[Json]` Creates a Recursive type */\n    Recursive(callback, options = {}) {\n        if (ValueGuard.IsUndefined(options.$id))\n            options.$id = `T${TypeOrdinal++}`;\n        const thisType = callback({ [exports.Kind]: 'This', $ref: `${options.$id}` });\n        thisType.$id = options.$id;\n        return this.Create({ ...options, [exports.Hint]: 'Recursive', ...thisType });\n    }\n    /** `[Json]` Creates a Ref type. */\n    Ref(unresolved, options = {}) {\n        if (ValueGuard.IsString(unresolved))\n            return this.Create({ ...options, [exports.Kind]: 'Ref', $ref: unresolved });\n        if (ValueGuard.IsUndefined(unresolved.$id))\n            this.Throw('Reference target type must specify an $id');\n        return this.Create({ ...options, [exports.Kind]: 'Ref', $ref: unresolved.$id });\n    }\n    /** `[Json]` Constructs a type where all properties are required */\n    Required(schema, options = {}) {\n        // prettier-ignore\n        return ObjectMap.Map(this.Discard(TypeClone.Type(schema), ['$id', exports.Transform]), (object) => {\n            const properties = Object.getOwnPropertyNames(object.properties).reduce((acc, key) => {\n                return { ...acc, [key]: this.Discard(object.properties[key], [exports.Optional]) };\n            }, {});\n            return this.Object(properties, object /* object used as options to retain other constraints  */);\n        }, options);\n    }\n    /** `[Json]` Extracts interior Rest elements from Tuple, Intersect and Union types */\n    Rest(schema) {\n        return (TypeGuard.TTuple(schema) && !ValueGuard.IsUndefined(schema.items) ? TypeClone.Rest(schema.items) : TypeGuard.TIntersect(schema) ? TypeClone.Rest(schema.allOf) : TypeGuard.TUnion(schema) ? TypeClone.Rest(schema.anyOf) : []);\n    }\n    /** `[Json]` Creates a String type */\n    String(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'String', type: 'string' });\n    }\n    /** `[Json]` Creates a TemplateLiteral type */\n    TemplateLiteral(unresolved, options = {}) {\n        // prettier-ignore\n        const pattern = ValueGuard.IsString(unresolved)\n            ? TemplateLiteralPattern.Create(TemplateLiteralDslParser.Parse(unresolved))\n            : TemplateLiteralPattern.Create(unresolved);\n        return this.Create({ ...options, [exports.Kind]: 'TemplateLiteral', type: 'string', pattern });\n    }\n    /** `[Json]` Creates a Transform type */\n    Transform(schema) {\n        return new TransformDecodeBuilder(schema);\n    }\n    /** `[Json]` Creates a Tuple type */\n    Tuple(items, options = {}) {\n        const [additionalItems, minItems, maxItems] = [false, items.length, items.length];\n        const clonedItems = TypeClone.Rest(items);\n        // prettier-ignore\n        const schema = (items.length > 0 ?\n            { ...options, [exports.Kind]: 'Tuple', type: 'array', items: clonedItems, additionalItems, minItems, maxItems } :\n            { ...options, [exports.Kind]: 'Tuple', type: 'array', minItems, maxItems });\n        return this.Create(schema);\n    }\n    /** `[Json]` Intrinsic function to Uncapitalize LiteralString types */\n    Uncapitalize(schema, options = {}) {\n        return { ...Intrinsic.Map(TypeClone.Type(schema), 'Uncapitalize'), ...options };\n    }\n    /** `[Json]` Creates a Union type */\n    Union(union, options = {}) {\n        // prettier-ignore\n        return TypeGuard.TTemplateLiteral(union)\n            ? TemplateLiteralResolver.Resolve(union)\n            : (() => {\n                const anyOf = union;\n                if (anyOf.length === 0)\n                    return this.Never(options);\n                if (anyOf.length === 1)\n                    return this.Create(TypeClone.Type(anyOf[0], options));\n                const clonedAnyOf = TypeClone.Rest(anyOf);\n                return this.Create({ ...options, [exports.Kind]: 'Union', anyOf: clonedAnyOf });\n            })();\n    }\n    /** `[Json]` Creates an Unknown type */\n    Unknown(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Unknown' });\n    }\n    /** `[Json]` Creates a Unsafe type that will infers as the generic argument T */\n    Unsafe(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: options[exports.Kind] || 'Unsafe' });\n    }\n    /** `[Json]` Intrinsic function to Uppercase LiteralString types */\n    Uppercase(schema, options = {}) {\n        return { ...Intrinsic.Map(TypeClone.Type(schema), 'Uppercase'), ...options };\n    }\n}\nexports.JsonTypeBuilder = JsonTypeBuilder;\n// --------------------------------------------------------------------------\n// JavaScriptTypeBuilder\n// --------------------------------------------------------------------------\nclass JavaScriptTypeBuilder extends JsonTypeBuilder {\n    /** `[JavaScript]` Creates a AsyncIterator type */\n    AsyncIterator(items, options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'AsyncIterator', type: 'AsyncIterator', items: TypeClone.Type(items) });\n    }\n    /** `[JavaScript]` Constructs a type by recursively unwrapping Promise types */\n    Awaited(schema, options = {}) {\n        // prettier-ignore\n        const Unwrap = (rest) => rest.length > 0 ? (() => {\n            const [L, ...R] = rest;\n            return [this.Awaited(L), ...Unwrap(R)];\n        })() : rest;\n        // prettier-ignore\n        return (TypeGuard.TIntersect(schema) ? exports.Type.Intersect(Unwrap(schema.allOf)) :\n            TypeGuard.TUnion(schema) ? exports.Type.Union(Unwrap(schema.anyOf)) :\n                TypeGuard.TPromise(schema) ? this.Awaited(schema.item) :\n                    TypeClone.Type(schema, options));\n    }\n    /** `[JavaScript]` Creates a BigInt type */\n    BigInt(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'BigInt', type: 'bigint' });\n    }\n    /** `[JavaScript]` Extracts the ConstructorParameters from the given Constructor type */\n    ConstructorParameters(schema, options = {}) {\n        return this.Tuple([...schema.parameters], { ...options });\n    }\n    /** `[JavaScript]` Creates a Constructor type */\n    Constructor(parameters, returns, options) {\n        const [clonedParameters, clonedReturns] = [TypeClone.Rest(parameters), TypeClone.Type(returns)];\n        return this.Create({ ...options, [exports.Kind]: 'Constructor', type: 'Constructor', parameters: clonedParameters, returns: clonedReturns });\n    }\n    /** `[JavaScript]` Creates a Date type */\n    Date(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Date', type: 'Date' });\n    }\n    /** `[JavaScript]` Creates a Function type */\n    Function(parameters, returns, options) {\n        const [clonedParameters, clonedReturns] = [TypeClone.Rest(parameters), TypeClone.Type(returns)];\n        return this.Create({ ...options, [exports.Kind]: 'Function', type: 'Function', parameters: clonedParameters, returns: clonedReturns });\n    }\n    /** `[JavaScript]` Extracts the InstanceType from the given Constructor type */\n    InstanceType(schema, options = {}) {\n        return TypeClone.Type(schema.returns, options);\n    }\n    /** `[JavaScript]` Creates an Iterator type */\n    Iterator(items, options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Iterator', type: 'Iterator', items: TypeClone.Type(items) });\n    }\n    /** `[JavaScript]` Extracts the Parameters from the given Function type */\n    Parameters(schema, options = {}) {\n        return this.Tuple(schema.parameters, { ...options });\n    }\n    /** `[JavaScript]` Creates a Promise type */\n    Promise(item, options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Promise', type: 'Promise', item: TypeClone.Type(item) });\n    }\n    /** `[Extended]` Creates a String type */\n    RegExp(unresolved, options = {}) {\n        const pattern = ValueGuard.IsString(unresolved) ? unresolved : unresolved.source;\n        return this.Create({ ...options, [exports.Kind]: 'String', type: 'string', pattern });\n    }\n    /**\n     * @deprecated Use `Type.RegExp`\n     */\n    RegEx(regex, options = {}) {\n        return this.RegExp(regex, options);\n    }\n    /** `[JavaScript]` Extracts the ReturnType from the given Function type */\n    ReturnType(schema, options = {}) {\n        return TypeClone.Type(schema.returns, options);\n    }\n    /** `[JavaScript]` Creates a Symbol type */\n    Symbol(options) {\n        return this.Create({ ...options, [exports.Kind]: 'Symbol', type: 'symbol' });\n    }\n    /** `[JavaScript]` Creates a Undefined type */\n    Undefined(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Undefined', type: 'undefined' });\n    }\n    /** `[JavaScript]` Creates a Uint8Array type */\n    Uint8Array(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Uint8Array', type: 'Uint8Array' });\n    }\n    /** `[JavaScript]` Creates a Void type */\n    Void(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Void', type: 'void' });\n    }\n}\nexports.JavaScriptTypeBuilder = JavaScriptTypeBuilder;\n/** Json Type Builder with Static Resolution for TypeScript */\nexports.JsonType = new JsonTypeBuilder();\n/** JavaScript Type Builder with Static Resolution for TypeScript */\nexports.Type = new JavaScriptTypeBuilder();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sinclair/typebox/typebox.js\n"));

/***/ }),

/***/ "./node_modules/@sinclair/typebox/value/deref.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sinclair/typebox/value/deref.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/value\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Deref = exports.TypeDereferenceError = void 0;\nconst typebox_1 = __webpack_require__(/*! ../typebox */ \"./node_modules/@sinclair/typebox/typebox.js\");\nclass TypeDereferenceError extends typebox_1.TypeBoxError {\n    constructor(schema) {\n        super(`Unable to dereference schema with $id '${schema.$id}'`);\n        this.schema = schema;\n    }\n}\nexports.TypeDereferenceError = TypeDereferenceError;\n/** Dereferences a schema from the references array or throws if not found */\nfunction Deref(schema, references) {\n    const index = references.findIndex((target) => target.$id === schema.$ref);\n    if (index === -1)\n        throw new TypeDereferenceError(schema);\n    return references[index];\n}\nexports.Deref = Deref;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNpbmNsYWlyL3R5cGVib3gvdmFsdWUvZGVyZWYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLEdBQUcsNEJBQTRCO0FBQzVDLGtCQUFrQixtQkFBTyxDQUFDLCtEQUFZO0FBQ3RDO0FBQ0E7QUFDQSx3REFBd0QsV0FBVztBQUNuRTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2luY2xhaXIvdHlwZWJveC92YWx1ZS9kZXJlZi5qcz83YTM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5Ac2luY2xhaXIvdHlwZWJveC92YWx1ZVxuXG5UaGUgTUlUIExpY2Vuc2UgKE1JVClcblxuQ29weXJpZ2h0IChjKSAyMDE3LTIwMjMgSGF5ZG4gUGF0ZXJzb24gKHNpbmNsYWlyKSA8aGF5ZG4uZGV2ZWxvcGVyQGdtYWlsLmNvbT5cblxuUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxub2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xudG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG5mdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuXG5UaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG5cblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcbklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG5BVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG5MSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuVEhFIFNPRlRXQVJFLlxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZXJlZiA9IGV4cG9ydHMuVHlwZURlcmVmZXJlbmNlRXJyb3IgPSB2b2lkIDA7XG5jb25zdCB0eXBlYm94XzEgPSByZXF1aXJlKFwiLi4vdHlwZWJveFwiKTtcbmNsYXNzIFR5cGVEZXJlZmVyZW5jZUVycm9yIGV4dGVuZHMgdHlwZWJveF8xLlR5cGVCb3hFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc2NoZW1hKSB7XG4gICAgICAgIHN1cGVyKGBVbmFibGUgdG8gZGVyZWZlcmVuY2Ugc2NoZW1hIHdpdGggJGlkICcke3NjaGVtYS4kaWR9J2ApO1xuICAgICAgICB0aGlzLnNjaGVtYSA9IHNjaGVtYTtcbiAgICB9XG59XG5leHBvcnRzLlR5cGVEZXJlZmVyZW5jZUVycm9yID0gVHlwZURlcmVmZXJlbmNlRXJyb3I7XG4vKiogRGVyZWZlcmVuY2VzIGEgc2NoZW1hIGZyb20gdGhlIHJlZmVyZW5jZXMgYXJyYXkgb3IgdGhyb3dzIGlmIG5vdCBmb3VuZCAqL1xuZnVuY3Rpb24gRGVyZWYoc2NoZW1hLCByZWZlcmVuY2VzKSB7XG4gICAgY29uc3QgaW5kZXggPSByZWZlcmVuY2VzLmZpbmRJbmRleCgodGFyZ2V0KSA9PiB0YXJnZXQuJGlkID09PSBzY2hlbWEuJHJlZik7XG4gICAgaWYgKGluZGV4ID09PSAtMSlcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVEZXJlZmVyZW5jZUVycm9yKHNjaGVtYSk7XG4gICAgcmV0dXJuIHJlZmVyZW5jZXNbaW5kZXhdO1xufVxuZXhwb3J0cy5EZXJlZiA9IERlcmVmO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sinclair/typebox/value/deref.js\n"));

/***/ }),

/***/ "./node_modules/@sinclair/typebox/value/guard.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sinclair/typebox/value/guard.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/value\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IsValueType = exports.IsSymbol = exports.IsFunction = exports.IsString = exports.IsBigInt = exports.IsInteger = exports.IsNumber = exports.IsBoolean = exports.IsNull = exports.IsUndefined = exports.IsArray = exports.IsObject = exports.IsPlainObject = exports.HasPropertyKey = exports.IsDate = exports.IsUint8Array = exports.IsPromise = exports.IsTypedArray = exports.IsIterator = exports.IsAsyncIterator = void 0;\n// --------------------------------------------------------------------------\n// Iterators\n// --------------------------------------------------------------------------\n/** Returns true if this value is an async iterator */\nfunction IsAsyncIterator(value) {\n    return IsObject(value) && Symbol.asyncIterator in value;\n}\nexports.IsAsyncIterator = IsAsyncIterator;\n/** Returns true if this value is an iterator */\nfunction IsIterator(value) {\n    return IsObject(value) && Symbol.iterator in value;\n}\nexports.IsIterator = IsIterator;\n// --------------------------------------------------------------------------\n// Nominal\n// --------------------------------------------------------------------------\n/** Returns true if this value is a typed array */\nfunction IsTypedArray(value) {\n    return ArrayBuffer.isView(value);\n}\nexports.IsTypedArray = IsTypedArray;\n/** Returns true if this value is a Promise */\nfunction IsPromise(value) {\n    return value instanceof Promise;\n}\nexports.IsPromise = IsPromise;\n/** Returns true if the value is a Uint8Array */\nfunction IsUint8Array(value) {\n    return value instanceof Uint8Array;\n}\nexports.IsUint8Array = IsUint8Array;\n/** Returns true if this value is a Date */\nfunction IsDate(value) {\n    return value instanceof Date && Number.isFinite(value.getTime());\n}\nexports.IsDate = IsDate;\n// --------------------------------------------------------------------------\n// Standard\n// --------------------------------------------------------------------------\n/** Returns true if this value has this property key */\nfunction HasPropertyKey(value, key) {\n    return key in value;\n}\nexports.HasPropertyKey = HasPropertyKey;\n/** Returns true if this object is not an instance of any other type */\nfunction IsPlainObject(value) {\n    return IsObject(value) && IsFunction(value.constructor) && value.constructor.name === 'Object';\n}\nexports.IsPlainObject = IsPlainObject;\n/** Returns true of this value is an object type */\nfunction IsObject(value) {\n    return value !== null && typeof value === 'object';\n}\nexports.IsObject = IsObject;\n/** Returns true if this value is an array, but not a typed array */\nfunction IsArray(value) {\n    return Array.isArray(value) && !ArrayBuffer.isView(value);\n}\nexports.IsArray = IsArray;\n/** Returns true if this value is an undefined */\nfunction IsUndefined(value) {\n    return value === undefined;\n}\nexports.IsUndefined = IsUndefined;\n/** Returns true if this value is an null */\nfunction IsNull(value) {\n    return value === null;\n}\nexports.IsNull = IsNull;\n/** Returns true if this value is an boolean */\nfunction IsBoolean(value) {\n    return typeof value === 'boolean';\n}\nexports.IsBoolean = IsBoolean;\n/** Returns true if this value is an number */\nfunction IsNumber(value) {\n    return typeof value === 'number';\n}\nexports.IsNumber = IsNumber;\n/** Returns true if this value is an integer */\nfunction IsInteger(value) {\n    return IsNumber(value) && Number.isInteger(value);\n}\nexports.IsInteger = IsInteger;\n/** Returns true if this value is bigint */\nfunction IsBigInt(value) {\n    return typeof value === 'bigint';\n}\nexports.IsBigInt = IsBigInt;\n/** Returns true if this value is string */\nfunction IsString(value) {\n    return typeof value === 'string';\n}\nexports.IsString = IsString;\n/** Returns true if this value is a function */\nfunction IsFunction(value) {\n    return typeof value === 'function';\n}\nexports.IsFunction = IsFunction;\n/** Returns true if this value is a symbol */\nfunction IsSymbol(value) {\n    return typeof value === 'symbol';\n}\nexports.IsSymbol = IsSymbol;\n/** Returns true if this value is a value type such as number, string, boolean */\nfunction IsValueType(value) {\n    // prettier-ignore\n    return (IsBigInt(value) ||\n        IsBoolean(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsUndefined(value));\n}\nexports.IsValueType = IsValueType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sinclair/typebox/value/guard.js\n"));

/***/ }),

/***/ "./node_modules/@sinclair/typebox/value/hash.js":
/*!******************************************************!*\
  !*** ./node_modules/@sinclair/typebox/value/hash.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/value\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash = exports.ByteMarker = exports.ValueHashError = void 0;\nconst guard_1 = __webpack_require__(/*! ./guard */ \"./node_modules/@sinclair/typebox/value/guard.js\");\n// --------------------------------------------------------------------------\n// Errors\n// --------------------------------------------------------------------------\nclass ValueHashError extends Error {\n    constructor(value) {\n        super(`Unable to hash value`);\n        this.value = value;\n    }\n}\nexports.ValueHashError = ValueHashError;\n// --------------------------------------------------------------------------\n// ByteMarker\n// --------------------------------------------------------------------------\nvar ByteMarker;\n(function (ByteMarker) {\n    ByteMarker[ByteMarker[\"Undefined\"] = 0] = \"Undefined\";\n    ByteMarker[ByteMarker[\"Null\"] = 1] = \"Null\";\n    ByteMarker[ByteMarker[\"Boolean\"] = 2] = \"Boolean\";\n    ByteMarker[ByteMarker[\"Number\"] = 3] = \"Number\";\n    ByteMarker[ByteMarker[\"String\"] = 4] = \"String\";\n    ByteMarker[ByteMarker[\"Object\"] = 5] = \"Object\";\n    ByteMarker[ByteMarker[\"Array\"] = 6] = \"Array\";\n    ByteMarker[ByteMarker[\"Date\"] = 7] = \"Date\";\n    ByteMarker[ByteMarker[\"Uint8Array\"] = 8] = \"Uint8Array\";\n    ByteMarker[ByteMarker[\"Symbol\"] = 9] = \"Symbol\";\n    ByteMarker[ByteMarker[\"BigInt\"] = 10] = \"BigInt\";\n})(ByteMarker || (exports.ByteMarker = ByteMarker = {}));\n// --------------------------------------------------------------------------\n// State\n// --------------------------------------------------------------------------\nlet Accumulator = BigInt('14695981039346656037');\nconst [Prime, Size] = [BigInt('1099511628211'), BigInt('2') ** BigInt('64')];\nconst Bytes = Array.from({ length: 256 }).map((_, i) => BigInt(i));\nconst F64 = new Float64Array(1);\nconst F64In = new DataView(F64.buffer);\nconst F64Out = new Uint8Array(F64.buffer);\n// --------------------------------------------------------------------------\n// NumberToBytes\n// --------------------------------------------------------------------------\nfunction* NumberToBytes(value) {\n    const byteCount = value === 0 ? 1 : Math.ceil(Math.floor(Math.log2(value) + 1) / 8);\n    for (let i = 0; i < byteCount; i++) {\n        yield (value >> (8 * (byteCount - 1 - i))) & 0xff;\n    }\n}\n// --------------------------------------------------------------------------\n// Hashing Functions\n// --------------------------------------------------------------------------\nfunction ArrayType(value) {\n    FNV1A64(ByteMarker.Array);\n    for (const item of value) {\n        Visit(item);\n    }\n}\nfunction BooleanType(value) {\n    FNV1A64(ByteMarker.Boolean);\n    FNV1A64(value ? 1 : 0);\n}\nfunction BigIntType(value) {\n    FNV1A64(ByteMarker.BigInt);\n    F64In.setBigInt64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction DateType(value) {\n    FNV1A64(ByteMarker.Date);\n    Visit(value.getTime());\n}\nfunction NullType(value) {\n    FNV1A64(ByteMarker.Null);\n}\nfunction NumberType(value) {\n    FNV1A64(ByteMarker.Number);\n    F64In.setFloat64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction ObjectType(value) {\n    FNV1A64(ByteMarker.Object);\n    for (const key of globalThis.Object.keys(value).sort()) {\n        Visit(key);\n        Visit(value[key]);\n    }\n}\nfunction StringType(value) {\n    FNV1A64(ByteMarker.String);\n    for (let i = 0; i < value.length; i++) {\n        for (const byte of NumberToBytes(value.charCodeAt(i))) {\n            FNV1A64(byte);\n        }\n    }\n}\nfunction SymbolType(value) {\n    FNV1A64(ByteMarker.Symbol);\n    Visit(value.description);\n}\nfunction Uint8ArrayType(value) {\n    FNV1A64(ByteMarker.Uint8Array);\n    for (let i = 0; i < value.length; i++) {\n        FNV1A64(value[i]);\n    }\n}\nfunction UndefinedType(value) {\n    return FNV1A64(ByteMarker.Undefined);\n}\nfunction Visit(value) {\n    if ((0, guard_1.IsArray)(value))\n        return ArrayType(value);\n    if ((0, guard_1.IsBoolean)(value))\n        return BooleanType(value);\n    if ((0, guard_1.IsBigInt)(value))\n        return BigIntType(value);\n    if ((0, guard_1.IsDate)(value))\n        return DateType(value);\n    if ((0, guard_1.IsNull)(value))\n        return NullType(value);\n    if ((0, guard_1.IsNumber)(value))\n        return NumberType(value);\n    if ((0, guard_1.IsPlainObject)(value))\n        return ObjectType(value);\n    if ((0, guard_1.IsString)(value))\n        return StringType(value);\n    if ((0, guard_1.IsSymbol)(value))\n        return SymbolType(value);\n    if ((0, guard_1.IsUint8Array)(value))\n        return Uint8ArrayType(value);\n    if ((0, guard_1.IsUndefined)(value))\n        return UndefinedType(value);\n    throw new ValueHashError(value);\n}\nfunction FNV1A64(byte) {\n    Accumulator = Accumulator ^ Bytes[byte];\n    Accumulator = (Accumulator * Prime) % Size;\n}\n// --------------------------------------------------------------------------\n// Hash\n// --------------------------------------------------------------------------\n/** Creates a FNV1A-64 non cryptographic hash of the given value */\nfunction Hash(value) {\n    Accumulator = BigInt('14695981039346656037');\n    Visit(value);\n    return Accumulator;\n}\nexports.Hash = Hash;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sinclair/typebox/value/hash.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-common/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/connect-common/lib/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./storage */ \"./node_modules/@trezor/connect-common/lib/storage.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./messageChannel/abstract */ \"./node_modules/@trezor/connect-common/lib/messageChannel/abstract.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./systemInfo */ \"./node_modules/@trezor/connect-common/lib/systemInfo.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LWNvbW1vbi9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLG1CQUFPLENBQUMsaURBQU87QUFDL0IscUJBQXFCLG1CQUFPLENBQUMsdUVBQVc7QUFDeEMscUJBQXFCLG1CQUFPLENBQUMsdUdBQTJCO0FBQ3hELHFCQUFxQixtQkFBTyxDQUFDLDZFQUFjO0FBQzNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QtY29tbW9uL2xpYi9pbmRleC5qcz9hMzRmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3N0b3JhZ2VcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbWVzc2FnZUNoYW5uZWwvYWJzdHJhY3RcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc3lzdGVtSW5mb1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-common/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-common/lib/messageChannel/abstract.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@trezor/connect-common/lib/messageChannel/abstract.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbstractMessageChannel = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst utils_1 = __webpack_require__(/*! @trezor/utils */ \"./node_modules/@trezor/utils/lib/index.js\");\nconst utils_2 = __webpack_require__(/*! @trezor/utils */ \"./node_modules/@trezor/utils/lib/index.js\");\nconst utils_3 = __webpack_require__(/*! @trezor/utils */ \"./node_modules/@trezor/utils/lib/index.js\");\nclass AbstractMessageChannel extends utils_2.TypedEmitter {\n    constructor({ sendFn, channel, logger, lazyHandshake = false, legacyMode = false, }) {\n        super();\n        this.messagePromises = {};\n        this.messagesQueue = [];\n        this.messageID = 0;\n        this.isConnected = false;\n        this.handshakeMaxRetries = 5;\n        this.handshakeRetryInterval = 2000;\n        this.channel = channel;\n        this.sendFn = sendFn;\n        this.lazyHandshake = lazyHandshake;\n        this.legacyMode = legacyMode;\n        this.logger = logger;\n    }\n    init() {\n        if (!this.handshakeFinished) {\n            this.handshakeFinished = (0, utils_1.createDeferred)();\n            if (this.legacyMode) {\n                setTimeout(() => {\n                    var _a;\n                    (_a = this.handshakeFinished) === null || _a === void 0 ? void 0 : _a.resolve();\n                }, 500);\n            }\n            if (!this.lazyHandshake) {\n                this.handshakeWithPeer();\n            }\n        }\n        return this.handshakeFinished.promise;\n    }\n    handshakeWithPeer() {\n        var _a;\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log(this.channel.here, 'handshake');\n        return (0, utils_3.scheduleAction)(() => tslib_1.__awaiter(this, void 0, void 0, function* () {\n            var _b;\n            this.postMessage({\n                type: 'channel-handshake-request',\n                data: { success: true, payload: undefined },\n            }, { usePromise: false, useQueue: false });\n            yield ((_b = this.handshakeFinished) === null || _b === void 0 ? void 0 : _b.promise);\n        }), {\n            attempts: this.handshakeMaxRetries,\n            timeout: this.handshakeRetryInterval,\n        })\n            .then(() => {\n            var _a;\n            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log(this.channel.here, 'handshake confirmed');\n            this.messagesQueue.forEach(message => {\n                message.channel = this.channel;\n                this.sendFn(message);\n            });\n            this.messagesQueue = [];\n        })\n            .catch(() => {\n            var _a;\n            (_a = this.handshakeFinished) === null || _a === void 0 ? void 0 : _a.reject(new Error('handshake failed'));\n            this.handshakeFinished = undefined;\n        });\n    }\n    onMessage(_message) {\n        var _a, _b;\n        let message = _message;\n        if (this.legacyMode &&\n            message.type === undefined &&\n            'data' in message &&\n            typeof message.data === 'object' &&\n            message.data !== null &&\n            'type' in message.data &&\n            typeof message.data.type === 'string') {\n            message = message.data;\n        }\n        const { channel, id, type, payload, success } = message;\n        if (!this.legacyMode) {\n            if (!(channel === null || channel === void 0 ? void 0 : channel.peer) || channel.peer !== this.channel.here) {\n                return;\n            }\n            if (!(channel === null || channel === void 0 ? void 0 : channel.here) || this.channel.peer !== channel.here) {\n                return;\n            }\n        }\n        if (type === 'channel-handshake-request') {\n            this.postMessage({\n                type: 'channel-handshake-confirm',\n                data: { success: true, payload: undefined },\n            }, { usePromise: false, useQueue: false });\n            if (this.lazyHandshake) {\n                this.handshakeWithPeer();\n            }\n            return;\n        }\n        if (type === 'channel-handshake-confirm') {\n            (_a = this.handshakeFinished) === null || _a === void 0 ? void 0 : _a.resolve(undefined);\n            return;\n        }\n        if (this.messagePromises[id]) {\n            this.messagePromises[id].resolve({ id, payload, success });\n            delete this.messagePromises[id];\n        }\n        const messagePromisesLength = Object.keys(this.messagePromises).length;\n        if (messagePromisesLength > 5) {\n            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn(`too many message promises (${messagePromisesLength}). this feels unexpected!`);\n        }\n        this.emit('message', message);\n    }\n    postMessage(message, { usePromise = true, useQueue = true } = {}) {\n        message.channel = this.channel;\n        if (!usePromise) {\n            try {\n                this.sendFn(message);\n            }\n            catch (err) {\n                if (useQueue) {\n                    this.messagesQueue.push(message);\n                }\n            }\n            return;\n        }\n        this.messageID++;\n        message.id = this.messageID;\n        this.messagePromises[message.id] = (0, utils_1.createDeferred)();\n        try {\n            this.sendFn(message);\n        }\n        catch (err) {\n            if (useQueue) {\n                this.messagesQueue.push(message);\n            }\n        }\n        return this.messagePromises[message.id].promise;\n    }\n    resolveMessagePromises(resolvePayload) {\n        Object.keys(this.messagePromises).forEach(id => this.messagePromises[id].resolve({\n            id,\n            payload: resolvePayload,\n        }));\n    }\n    clear() {\n        this.handshakeFinished = undefined;\n    }\n}\nexports.AbstractMessageChannel = AbstractMessageChannel;\n//# sourceMappingURL=abstract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-common/lib/messageChannel/abstract.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-common/lib/storage.js":
/*!************************************************************!*\
  !*** ./node_modules/@trezor/connect-common/lib/storage.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.storage = void 0;\nconst utils_1 = __webpack_require__(/*! @trezor/utils */ \"./node_modules/@trezor/utils/lib/index.js\");\nconst storageVersion = 2;\nconst storageName = `storage_v${storageVersion}`;\nconst getEmptyState = () => ({\n    origin: {},\n});\nlet memoryStorage = getEmptyState();\nconst getPermanentStorage = () => {\n    const ls = localStorage.getItem(storageName);\n    return ls ? JSON.parse(ls) : getEmptyState();\n};\nclass Storage extends utils_1.TypedEmitter {\n    save(getNewState, temporary = false) {\n        if (temporary || !__webpack_require__.g.window) {\n            memoryStorage = getNewState(memoryStorage);\n            return;\n        }\n        try {\n            const newState = getNewState(getPermanentStorage());\n            localStorage.setItem(storageName, JSON.stringify(newState));\n            this.emit('changed', newState);\n        }\n        catch (err) {\n            console.warn('long term storage not available');\n            memoryStorage = getNewState(memoryStorage);\n        }\n    }\n    saveForOrigin(getNewState, origin, temporary = false) {\n        this.save(state => {\n            var _a;\n            return (Object.assign(Object.assign({}, state), { origin: Object.assign(Object.assign({}, state.origin), { [origin]: getNewState(((_a = state.origin) === null || _a === void 0 ? void 0 : _a[origin]) || {}) }) }));\n        }, temporary);\n    }\n    load(temporary = false) {\n        var _a;\n        if (temporary || !((_a = __webpack_require__.g === null || __webpack_require__.g === void 0 ? void 0 : __webpack_require__.g.window) === null || _a === void 0 ? void 0 : _a.localStorage)) {\n            return memoryStorage;\n        }\n        try {\n            return getPermanentStorage();\n        }\n        catch (err) {\n            console.warn('long term storage not available');\n            return memoryStorage;\n        }\n    }\n    loadForOrigin(origin, temporary = false) {\n        var _a;\n        const state = this.load(temporary);\n        return ((_a = state.origin) === null || _a === void 0 ? void 0 : _a[origin]) || {};\n    }\n}\nconst storage = new Storage();\nexports.storage = storage;\n//# sourceMappingURL=storage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LWNvbW1vbi9saWIvc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsZ0JBQWdCLG1CQUFPLENBQUMsZ0VBQWU7QUFDdkM7QUFDQSxnQ0FBZ0MsZUFBZTtBQUMvQztBQUNBLGNBQWM7QUFDZCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscUJBQU07QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsWUFBWSxzQ0FBc0MsbUJBQW1CLGlHQUFpRyxHQUFHLEdBQUc7QUFDOU4sU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxxQkFBTSxhQUFhLHFCQUFNLHVCQUF1QixxQkFBTTtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QtY29tbW9uL2xpYi9zdG9yYWdlLmpzP2I2YzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnN0b3JhZ2UgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkB0cmV6b3IvdXRpbHNcIik7XG5jb25zdCBzdG9yYWdlVmVyc2lvbiA9IDI7XG5jb25zdCBzdG9yYWdlTmFtZSA9IGBzdG9yYWdlX3Yke3N0b3JhZ2VWZXJzaW9ufWA7XG5jb25zdCBnZXRFbXB0eVN0YXRlID0gKCkgPT4gKHtcbiAgICBvcmlnaW46IHt9LFxufSk7XG5sZXQgbWVtb3J5U3RvcmFnZSA9IGdldEVtcHR5U3RhdGUoKTtcbmNvbnN0IGdldFBlcm1hbmVudFN0b3JhZ2UgPSAoKSA9PiB7XG4gICAgY29uc3QgbHMgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShzdG9yYWdlTmFtZSk7XG4gICAgcmV0dXJuIGxzID8gSlNPTi5wYXJzZShscykgOiBnZXRFbXB0eVN0YXRlKCk7XG59O1xuY2xhc3MgU3RvcmFnZSBleHRlbmRzIHV0aWxzXzEuVHlwZWRFbWl0dGVyIHtcbiAgICBzYXZlKGdldE5ld1N0YXRlLCB0ZW1wb3JhcnkgPSBmYWxzZSkge1xuICAgICAgICBpZiAodGVtcG9yYXJ5IHx8ICFnbG9iYWwud2luZG93KSB7XG4gICAgICAgICAgICBtZW1vcnlTdG9yYWdlID0gZ2V0TmV3U3RhdGUobWVtb3J5U3RvcmFnZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IG5ld1N0YXRlID0gZ2V0TmV3U3RhdGUoZ2V0UGVybWFuZW50U3RvcmFnZSgpKTtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHN0b3JhZ2VOYW1lLCBKU09OLnN0cmluZ2lmeShuZXdTdGF0ZSkpO1xuICAgICAgICAgICAgdGhpcy5lbWl0KCdjaGFuZ2VkJywgbmV3U3RhdGUpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignbG9uZyB0ZXJtIHN0b3JhZ2Ugbm90IGF2YWlsYWJsZScpO1xuICAgICAgICAgICAgbWVtb3J5U3RvcmFnZSA9IGdldE5ld1N0YXRlKG1lbW9yeVN0b3JhZ2UpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNhdmVGb3JPcmlnaW4oZ2V0TmV3U3RhdGUsIG9yaWdpbiwgdGVtcG9yYXJ5ID0gZmFsc2UpIHtcbiAgICAgICAgdGhpcy5zYXZlKHN0YXRlID0+IHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIHJldHVybiAoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSksIHsgb3JpZ2luOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLm9yaWdpbiksIHsgW29yaWdpbl06IGdldE5ld1N0YXRlKCgoX2EgPSBzdGF0ZS5vcmlnaW4pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYVtvcmlnaW5dKSB8fCB7fSkgfSkgfSkpO1xuICAgICAgICB9LCB0ZW1wb3JhcnkpO1xuICAgIH1cbiAgICBsb2FkKHRlbXBvcmFyeSA9IGZhbHNlKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKHRlbXBvcmFyeSB8fCAhKChfYSA9IGdsb2JhbCA9PT0gbnVsbCB8fCBnbG9iYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGdsb2JhbC53aW5kb3cpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sb2NhbFN0b3JhZ2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gbWVtb3J5U3RvcmFnZTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGdldFBlcm1hbmVudFN0b3JhZ2UoKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ2xvbmcgdGVybSBzdG9yYWdlIG5vdCBhdmFpbGFibGUnKTtcbiAgICAgICAgICAgIHJldHVybiBtZW1vcnlTdG9yYWdlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGxvYWRGb3JPcmlnaW4ob3JpZ2luLCB0ZW1wb3JhcnkgPSBmYWxzZSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IHN0YXRlID0gdGhpcy5sb2FkKHRlbXBvcmFyeSk7XG4gICAgICAgIHJldHVybiAoKF9hID0gc3RhdGUub3JpZ2luKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Fbb3JpZ2luXSkgfHwge307XG4gICAgfVxufVxuY29uc3Qgc3RvcmFnZSA9IG5ldyBTdG9yYWdlKCk7XG5leHBvcnRzLnN0b3JhZ2UgPSBzdG9yYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RvcmFnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-common/lib/storage.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-common/lib/systemInfo.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect-common/lib/systemInfo.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getSystemInfo = exports.getInstallerPackage = void 0;\nconst env_utils_1 = __webpack_require__(/*! @trezor/env-utils */ \"./node_modules/@trezor/env-utils/lib/index.js\");\nconst getInstallerPackage = () => {\n    const agent = (0, env_utils_1.getUserAgent)();\n    switch ((0, env_utils_1.getOsFamily)()) {\n        case 'MacOS':\n            return 'mac';\n        case 'Windows': {\n            const arch = agent.match(/(Win64|WOW64)/) ? '64' : '32';\n            return `win${arch}`;\n        }\n        case 'Linux': {\n            const isRpm = agent.match(/CentOS|Fedora|Mandriva|Mageia|Red Hat|Scientific|SUSE/)\n                ? 'rpm'\n                : 'deb';\n            const is64x = agent.match(/Linux i[3456]86/) ? '32' : '64';\n            return `${isRpm}${is64x}`;\n        }\n        default:\n    }\n};\nexports.getInstallerPackage = getInstallerPackage;\nconst getSystemInfo = (supportedBrowsers) => {\n    const browserName = (0, env_utils_1.getBrowserName)();\n    const browserVersion = (0, env_utils_1.getBrowserVersion)();\n    const supportedBrowser = browserName ? supportedBrowsers[browserName.toLowerCase()] : undefined;\n    const outdatedBrowser = supportedBrowser\n        ? supportedBrowser.version > parseInt(browserVersion, 10)\n        : false;\n    const mobile = (0, env_utils_1.getDeviceType)() === 'mobile';\n    const supportedMobile = mobile ? 'usb' in navigator : true;\n    const supported = !!(supportedBrowser && !outdatedBrowser && supportedMobile);\n    return {\n        os: {\n            family: (0, env_utils_1.getOsFamily)(),\n            mobile,\n        },\n        browser: {\n            supported,\n            outdated: outdatedBrowser,\n        },\n    };\n};\nexports.getSystemInfo = getSystemInfo;\n//# sourceMappingURL=systemInfo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LWNvbW1vbi9saWIvc3lzdGVtSW5mby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRywyQkFBMkI7QUFDbkQsb0JBQW9CLG1CQUFPLENBQUMsd0VBQW1CO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLEtBQUs7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLE1BQU0sRUFBRSxNQUFNO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC1jb21tb24vbGliL3N5c3RlbUluZm8uanM/NTdhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0U3lzdGVtSW5mbyA9IGV4cG9ydHMuZ2V0SW5zdGFsbGVyUGFja2FnZSA9IHZvaWQgMDtcbmNvbnN0IGVudl91dGlsc18xID0gcmVxdWlyZShcIkB0cmV6b3IvZW52LXV0aWxzXCIpO1xuY29uc3QgZ2V0SW5zdGFsbGVyUGFja2FnZSA9ICgpID0+IHtcbiAgICBjb25zdCBhZ2VudCA9ICgwLCBlbnZfdXRpbHNfMS5nZXRVc2VyQWdlbnQpKCk7XG4gICAgc3dpdGNoICgoMCwgZW52X3V0aWxzXzEuZ2V0T3NGYW1pbHkpKCkpIHtcbiAgICAgICAgY2FzZSAnTWFjT1MnOlxuICAgICAgICAgICAgcmV0dXJuICdtYWMnO1xuICAgICAgICBjYXNlICdXaW5kb3dzJzoge1xuICAgICAgICAgICAgY29uc3QgYXJjaCA9IGFnZW50Lm1hdGNoKC8oV2luNjR8V09XNjQpLykgPyAnNjQnIDogJzMyJztcbiAgICAgICAgICAgIHJldHVybiBgd2luJHthcmNofWA7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnTGludXgnOiB7XG4gICAgICAgICAgICBjb25zdCBpc1JwbSA9IGFnZW50Lm1hdGNoKC9DZW50T1N8RmVkb3JhfE1hbmRyaXZhfE1hZ2VpYXxSZWQgSGF0fFNjaWVudGlmaWN8U1VTRS8pXG4gICAgICAgICAgICAgICAgPyAncnBtJ1xuICAgICAgICAgICAgICAgIDogJ2RlYic7XG4gICAgICAgICAgICBjb25zdCBpczY0eCA9IGFnZW50Lm1hdGNoKC9MaW51eCBpWzM0NTZdODYvKSA/ICczMicgOiAnNjQnO1xuICAgICAgICAgICAgcmV0dXJuIGAke2lzUnBtfSR7aXM2NHh9YDtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgIH1cbn07XG5leHBvcnRzLmdldEluc3RhbGxlclBhY2thZ2UgPSBnZXRJbnN0YWxsZXJQYWNrYWdlO1xuY29uc3QgZ2V0U3lzdGVtSW5mbyA9IChzdXBwb3J0ZWRCcm93c2VycykgPT4ge1xuICAgIGNvbnN0IGJyb3dzZXJOYW1lID0gKDAsIGVudl91dGlsc18xLmdldEJyb3dzZXJOYW1lKSgpO1xuICAgIGNvbnN0IGJyb3dzZXJWZXJzaW9uID0gKDAsIGVudl91dGlsc18xLmdldEJyb3dzZXJWZXJzaW9uKSgpO1xuICAgIGNvbnN0IHN1cHBvcnRlZEJyb3dzZXIgPSBicm93c2VyTmFtZSA/IHN1cHBvcnRlZEJyb3dzZXJzW2Jyb3dzZXJOYW1lLnRvTG93ZXJDYXNlKCldIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IG91dGRhdGVkQnJvd3NlciA9IHN1cHBvcnRlZEJyb3dzZXJcbiAgICAgICAgPyBzdXBwb3J0ZWRCcm93c2VyLnZlcnNpb24gPiBwYXJzZUludChicm93c2VyVmVyc2lvbiwgMTApXG4gICAgICAgIDogZmFsc2U7XG4gICAgY29uc3QgbW9iaWxlID0gKDAsIGVudl91dGlsc18xLmdldERldmljZVR5cGUpKCkgPT09ICdtb2JpbGUnO1xuICAgIGNvbnN0IHN1cHBvcnRlZE1vYmlsZSA9IG1vYmlsZSA/ICd1c2InIGluIG5hdmlnYXRvciA6IHRydWU7XG4gICAgY29uc3Qgc3VwcG9ydGVkID0gISEoc3VwcG9ydGVkQnJvd3NlciAmJiAhb3V0ZGF0ZWRCcm93c2VyICYmIHN1cHBvcnRlZE1vYmlsZSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb3M6IHtcbiAgICAgICAgICAgIGZhbWlseTogKDAsIGVudl91dGlsc18xLmdldE9zRmFtaWx5KSgpLFxuICAgICAgICAgICAgbW9iaWxlLFxuICAgICAgICB9LFxuICAgICAgICBicm93c2VyOiB7XG4gICAgICAgICAgICBzdXBwb3J0ZWQsXG4gICAgICAgICAgICBvdXRkYXRlZDogb3V0ZGF0ZWRCcm93c2VyLFxuICAgICAgICB9LFxuICAgIH07XG59O1xuZXhwb3J0cy5nZXRTeXN0ZW1JbmZvID0gZ2V0U3lzdGVtSW5mbztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN5c3RlbUluZm8uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-common/lib/systemInfo.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/channels/serviceworker-window.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/channels/serviceworker-window.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ServiceWorkerWindowChannel = void 0;\nconst connect_common_1 = __webpack_require__(/*! @trezor/connect-common */ \"./node_modules/@trezor/connect-common/lib/index.js\");\nclass ServiceWorkerWindowChannel extends connect_common_1.AbstractMessageChannel {\n    constructor({ name, channel, logger, lazyHandshake, legacyMode, allowSelfOrigin = false, currentId, }) {\n        super({\n            channel,\n            sendFn: (message) => {\n                if (!this.port)\n                    throw new Error('port not assigned');\n                this.port.postMessage(message);\n            },\n            logger,\n            lazyHandshake,\n            legacyMode,\n        });\n        this.name = name;\n        this.allowSelfOrigin = allowSelfOrigin;\n        this.currentId = currentId;\n        this.connect();\n    }\n    connect() {\n        chrome.runtime.onConnect.addListener(port => {\n            var _a, _b, _c, _d;\n            if (port.name !== this.name)\n                return;\n            if (((_a = this.currentId) === null || _a === void 0 ? void 0 : _a.call(this)) && ((_b = this.currentId) === null || _b === void 0 ? void 0 : _b.call(this)) !== ((_d = (_c = port.sender) === null || _c === void 0 ? void 0 : _c.tab) === null || _d === void 0 ? void 0 : _d.id))\n                return;\n            this.port = port;\n            this.port.onMessage.addListener((message, { sender }) => {\n                var _a, _b, _c, _d;\n                if (!sender) {\n                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error('service-worker-window', 'no sender');\n                    return;\n                }\n                const { origin } = sender;\n                const whitelist = [\n                    'https://connect.trezor.io',\n                    'https://staging-connect.trezor.io',\n                    'https://suite.corp.sldev.cz',\n                    'http://localhost:8088',\n                ];\n                const webextensionId = (_b = chrome === null || chrome === void 0 ? void 0 : chrome.runtime) === null || _b === void 0 ? void 0 : _b.id;\n                if (webextensionId) {\n                    whitelist.push(`chrome-extension://${webextensionId}`);\n                }\n                if (!origin) {\n                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('connect-webextension/messageChannel/extensionPort/onMessage', 'no origin');\n                    return;\n                }\n                if (!whitelist.includes(origin)) {\n                    (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('connect-webextension/messageChannel/extensionPort/onMessage', 'origin not whitelisted', origin);\n                    return;\n                }\n                if (origin === self.origin && !this.allowSelfOrigin) {\n                    return;\n                }\n                this.onMessage(message);\n            });\n        });\n        this.isConnected = true;\n    }\n    disconnect() {\n        var _a;\n        if (!this.isConnected)\n            return;\n        (_a = this.port) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this.clear();\n        this.isConnected = false;\n    }\n}\nexports.ServiceWorkerWindowChannel = ServiceWorkerWindowChannel;\n//# sourceMappingURL=serviceworker-window.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvY2hhbm5lbHMvc2VydmljZXdvcmtlci13aW5kb3cuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDLHlCQUF5QixtQkFBTyxDQUFDLGtGQUF3QjtBQUN6RDtBQUNBLGtCQUFrQix1RkFBdUY7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxRQUFRO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsU0FBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELGVBQWU7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC13ZWIvbGliL2NoYW5uZWxzL3NlcnZpY2V3b3JrZXItd2luZG93LmpzPzZhNzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNlcnZpY2VXb3JrZXJXaW5kb3dDaGFubmVsID0gdm9pZCAwO1xuY29uc3QgY29ubmVjdF9jb21tb25fMSA9IHJlcXVpcmUoXCJAdHJlem9yL2Nvbm5lY3QtY29tbW9uXCIpO1xuY2xhc3MgU2VydmljZVdvcmtlcldpbmRvd0NoYW5uZWwgZXh0ZW5kcyBjb25uZWN0X2NvbW1vbl8xLkFic3RyYWN0TWVzc2FnZUNoYW5uZWwge1xuICAgIGNvbnN0cnVjdG9yKHsgbmFtZSwgY2hhbm5lbCwgbG9nZ2VyLCBsYXp5SGFuZHNoYWtlLCBsZWdhY3lNb2RlLCBhbGxvd1NlbGZPcmlnaW4gPSBmYWxzZSwgY3VycmVudElkLCB9KSB7XG4gICAgICAgIHN1cGVyKHtcbiAgICAgICAgICAgIGNoYW5uZWwsXG4gICAgICAgICAgICBzZW5kRm46IChtZXNzYWdlKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLnBvcnQpXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigncG9ydCBub3QgYXNzaWduZWQnKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBvcnQucG9zdE1lc3NhZ2UobWVzc2FnZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbG9nZ2VyLFxuICAgICAgICAgICAgbGF6eUhhbmRzaGFrZSxcbiAgICAgICAgICAgIGxlZ2FjeU1vZGUsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmFsbG93U2VsZk9yaWdpbiA9IGFsbG93U2VsZk9yaWdpbjtcbiAgICAgICAgdGhpcy5jdXJyZW50SWQgPSBjdXJyZW50SWQ7XG4gICAgICAgIHRoaXMuY29ubmVjdCgpO1xuICAgIH1cbiAgICBjb25uZWN0KCkge1xuICAgICAgICBjaHJvbWUucnVudGltZS5vbkNvbm5lY3QuYWRkTGlzdGVuZXIocG9ydCA9PiB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgICAgICAgICBpZiAocG9ydC5uYW1lICE9PSB0aGlzLm5hbWUpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKCgoX2EgPSB0aGlzLmN1cnJlbnRJZCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwodGhpcykpICYmICgoX2IgPSB0aGlzLmN1cnJlbnRJZCkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwodGhpcykpICE9PSAoKF9kID0gKF9jID0gcG9ydC5zZW5kZXIpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy50YWIpID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC5pZCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgdGhpcy5wb3J0ID0gcG9ydDtcbiAgICAgICAgICAgIHRoaXMucG9ydC5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIoKG1lc3NhZ2UsIHsgc2VuZGVyIH0pID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgICAgICAgICAgICAgaWYgKCFzZW5kZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgKF9hID0gdGhpcy5sb2dnZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5lcnJvcignc2VydmljZS13b3JrZXItd2luZG93JywgJ25vIHNlbmRlcicpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHsgb3JpZ2luIH0gPSBzZW5kZXI7XG4gICAgICAgICAgICAgICAgY29uc3Qgd2hpdGVsaXN0ID0gW1xuICAgICAgICAgICAgICAgICAgICAnaHR0cHM6Ly9jb25uZWN0LnRyZXpvci5pbycsXG4gICAgICAgICAgICAgICAgICAgICdodHRwczovL3N0YWdpbmctY29ubmVjdC50cmV6b3IuaW8nLFxuICAgICAgICAgICAgICAgICAgICAnaHR0cHM6Ly9zdWl0ZS5jb3JwLnNsZGV2LmN6JyxcbiAgICAgICAgICAgICAgICAgICAgJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4OCcsXG4gICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgICBjb25zdCB3ZWJleHRlbnNpb25JZCA9IChfYiA9IGNocm9tZSA9PT0gbnVsbCB8fCBjaHJvbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNocm9tZS5ydW50aW1lKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuaWQ7XG4gICAgICAgICAgICAgICAgaWYgKHdlYmV4dGVuc2lvbklkKSB7XG4gICAgICAgICAgICAgICAgICAgIHdoaXRlbGlzdC5wdXNoKGBjaHJvbWUtZXh0ZW5zaW9uOi8vJHt3ZWJleHRlbnNpb25JZH1gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFvcmlnaW4pIHtcbiAgICAgICAgICAgICAgICAgICAgKF9jID0gdGhpcy5sb2dnZXIpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5lcnJvcignY29ubmVjdC13ZWJleHRlbnNpb24vbWVzc2FnZUNoYW5uZWwvZXh0ZW5zaW9uUG9ydC9vbk1lc3NhZ2UnLCAnbm8gb3JpZ2luJyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCF3aGl0ZWxpc3QuaW5jbHVkZXMob3JpZ2luKSkge1xuICAgICAgICAgICAgICAgICAgICAoX2QgPSB0aGlzLmxvZ2dlcikgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmVycm9yKCdjb25uZWN0LXdlYmV4dGVuc2lvbi9tZXNzYWdlQ2hhbm5lbC9leHRlbnNpb25Qb3J0L29uTWVzc2FnZScsICdvcmlnaW4gbm90IHdoaXRlbGlzdGVkJywgb3JpZ2luKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAob3JpZ2luID09PSBzZWxmLm9yaWdpbiAmJiAhdGhpcy5hbGxvd1NlbGZPcmlnaW4pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLm9uTWVzc2FnZShtZXNzYWdlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5pc0Nvbm5lY3RlZCA9IHRydWU7XG4gICAgfVxuICAgIGRpc2Nvbm5lY3QoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKCF0aGlzLmlzQ29ubmVjdGVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAoX2EgPSB0aGlzLnBvcnQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5kaXNjb25uZWN0KCk7XG4gICAgICAgIHRoaXMuY2xlYXIoKTtcbiAgICAgICAgdGhpcy5pc0Nvbm5lY3RlZCA9IGZhbHNlO1xuICAgIH1cbn1cbmV4cG9ydHMuU2VydmljZVdvcmtlcldpbmRvd0NoYW5uZWwgPSBTZXJ2aWNlV29ya2VyV2luZG93Q2hhbm5lbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcnZpY2V3b3JrZXItd2luZG93LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/channels/serviceworker-window.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/channels/window-window.js":
/*!************************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/channels/window-window.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WindowWindowChannel = void 0;\nconst connect_common_1 = __webpack_require__(/*! @trezor/connect-common */ \"./node_modules/@trezor/connect-common/lib/index.js\");\nclass WindowWindowChannel extends connect_common_1.AbstractMessageChannel {\n    constructor({ windowHere, windowPeer, channel, logger, origin, }) {\n        super({\n            channel,\n            sendFn: (message) => {\n                var _a;\n                (_a = windowPeer()) === null || _a === void 0 ? void 0 : _a.postMessage(message, origin);\n            },\n            logger,\n        });\n        this._listener = this.listener.bind(this);\n        this._windowHere = windowHere;\n        this.connect();\n    }\n    listener(event) {\n        const message = Object.assign(Object.assign({}, event.data), { success: true, origin: event.origin, payload: event.data.payload || {}, channel: event.data.channel || {\n                peer: this.channel.here,\n                here: this.channel.peer,\n            } });\n        this.onMessage(message);\n    }\n    connect() {\n        this._windowHere.addEventListener('message', this._listener);\n        this.isConnected = true;\n    }\n    disconnect() {\n        if (!this.isConnected)\n            return;\n        this._windowHere.removeEventListener('message', this._listener);\n        this.isConnected = false;\n    }\n}\nexports.WindowWindowChannel = WindowWindowChannel;\n//# sourceMappingURL=window-window.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvY2hhbm5lbHMvd2luZG93LXdpbmRvdy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0IseUJBQXlCLG1CQUFPLENBQUMsa0ZBQXdCO0FBQ3pEO0FBQ0Esa0JBQWtCLGtEQUFrRDtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsaUJBQWlCLHNFQUFzRTtBQUM3STtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi9jaGFubmVscy93aW5kb3ctd2luZG93LmpzPzQwYmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldpbmRvd1dpbmRvd0NoYW5uZWwgPSB2b2lkIDA7XG5jb25zdCBjb25uZWN0X2NvbW1vbl8xID0gcmVxdWlyZShcIkB0cmV6b3IvY29ubmVjdC1jb21tb25cIik7XG5jbGFzcyBXaW5kb3dXaW5kb3dDaGFubmVsIGV4dGVuZHMgY29ubmVjdF9jb21tb25fMS5BYnN0cmFjdE1lc3NhZ2VDaGFubmVsIHtcbiAgICBjb25zdHJ1Y3Rvcih7IHdpbmRvd0hlcmUsIHdpbmRvd1BlZXIsIGNoYW5uZWwsIGxvZ2dlciwgb3JpZ2luLCB9KSB7XG4gICAgICAgIHN1cGVyKHtcbiAgICAgICAgICAgIGNoYW5uZWwsXG4gICAgICAgICAgICBzZW5kRm46IChtZXNzYWdlKSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIChfYSA9IHdpbmRvd1BlZXIoKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnBvc3RNZXNzYWdlKG1lc3NhZ2UsIG9yaWdpbik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbG9nZ2VyLFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fbGlzdGVuZXIgPSB0aGlzLmxpc3RlbmVyLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuX3dpbmRvd0hlcmUgPSB3aW5kb3dIZXJlO1xuICAgICAgICB0aGlzLmNvbm5lY3QoKTtcbiAgICB9XG4gICAgbGlzdGVuZXIoZXZlbnQpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZXZlbnQuZGF0YSksIHsgc3VjY2VzczogdHJ1ZSwgb3JpZ2luOiBldmVudC5vcmlnaW4sIHBheWxvYWQ6IGV2ZW50LmRhdGEucGF5bG9hZCB8fCB7fSwgY2hhbm5lbDogZXZlbnQuZGF0YS5jaGFubmVsIHx8IHtcbiAgICAgICAgICAgICAgICBwZWVyOiB0aGlzLmNoYW5uZWwuaGVyZSxcbiAgICAgICAgICAgICAgICBoZXJlOiB0aGlzLmNoYW5uZWwucGVlcixcbiAgICAgICAgICAgIH0gfSk7XG4gICAgICAgIHRoaXMub25NZXNzYWdlKG1lc3NhZ2UpO1xuICAgIH1cbiAgICBjb25uZWN0KCkge1xuICAgICAgICB0aGlzLl93aW5kb3dIZXJlLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCB0aGlzLl9saXN0ZW5lcik7XG4gICAgICAgIHRoaXMuaXNDb25uZWN0ZWQgPSB0cnVlO1xuICAgIH1cbiAgICBkaXNjb25uZWN0KCkge1xuICAgICAgICBpZiAoIXRoaXMuaXNDb25uZWN0ZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMuX3dpbmRvd0hlcmUucmVtb3ZlRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIHRoaXMuX2xpc3RlbmVyKTtcbiAgICAgICAgdGhpcy5pc0Nvbm5lY3RlZCA9IGZhbHNlO1xuICAgIH1cbn1cbmV4cG9ydHMuV2luZG93V2luZG93Q2hhbm5lbCA9IFdpbmRvd1dpbmRvd0NoYW5uZWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13aW5kb3ctd2luZG93LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/channels/window-window.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/connectSettings.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/connectSettings.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseConnectSettings = exports.getEnv = void 0;\nconst connectSettings_1 = __webpack_require__(/*! @trezor/connect/lib/data/connectSettings */ \"./node_modules/@trezor/connect/lib/data/connectSettings.js\");\nconst getEnv = () => {\n    var _a;\n    if (typeof chrome !== 'undefined' && typeof ((_a = chrome.runtime) === null || _a === void 0 ? void 0 : _a.onConnect) !== 'undefined') {\n        return 'webextension';\n    }\n    if (typeof navigator !== 'undefined') {\n        if (typeof navigator.product === 'string' &&\n            navigator.product.toLowerCase() === 'reactnative') {\n            return 'react-native';\n        }\n        const userAgent = navigator.userAgent.toLowerCase();\n        if (userAgent.indexOf(' electron/') > -1) {\n            return 'electron';\n        }\n    }\n    return 'web';\n};\nexports.getEnv = getEnv;\nconst processQueryString = (url, keys) => {\n    const searchParams = new URLSearchParams(url);\n    const result = {};\n    const paramArray = Array.from(searchParams.entries());\n    paramArray.forEach(([key, value]) => {\n        if (keys.includes(key)) {\n            result[key] = decodeURIComponent(value);\n        }\n    });\n    return result;\n};\nconst parseConnectSettings = (input = {}) => {\n    var _a;\n    const settings = Object.assign({ popup: true }, input);\n    let globalSrc;\n    if (typeof window !== 'undefined') {\n        globalSrc = window.__TREZOR_CONNECT_SRC;\n    }\n    else if (typeof __webpack_require__.g !== 'undefined') {\n        globalSrc = __webpack_require__.g.__TREZOR_CONNECT_SRC;\n    }\n    if (typeof globalSrc === 'string') {\n        settings.connectSrc = globalSrc;\n        settings.debug = true;\n    }\n    if (typeof window !== 'undefined' && typeof ((_a = window.location) === null || _a === void 0 ? void 0 : _a.search) === 'string') {\n        const query = processQueryString(window.location.search, ['trezor-connect-src']);\n        if (query['trezor-connect-src']) {\n            settings.debug = true;\n            settings.connectSrc = query['trezor-connect-src'];\n        }\n    }\n    if (typeof input.env !== 'string') {\n        settings.env = (0, exports.getEnv)();\n    }\n    return (0, connectSettings_1.parseConnectSettings)(settings);\n};\nexports.parseConnectSettings = parseConnectSettings;\n//# sourceMappingURL=connectSettings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvY29ubmVjdFNldHRpbmdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLGNBQWM7QUFDN0MsMEJBQTBCLG1CQUFPLENBQUMsNEdBQTBDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0EscUNBQXFDLGFBQWE7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscUJBQU07QUFDMUIsb0JBQW9CLHFCQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC13ZWIvbGliL2Nvbm5lY3RTZXR0aW5ncy5qcz9kZmNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJzZUNvbm5lY3RTZXR0aW5ncyA9IGV4cG9ydHMuZ2V0RW52ID0gdm9pZCAwO1xuY29uc3QgY29ubmVjdFNldHRpbmdzXzEgPSByZXF1aXJlKFwiQHRyZXpvci9jb25uZWN0L2xpYi9kYXRhL2Nvbm5lY3RTZXR0aW5nc1wiKTtcbmNvbnN0IGdldEVudiA9ICgpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKHR5cGVvZiBjaHJvbWUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiAoKF9hID0gY2hyb21lLnJ1bnRpbWUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5vbkNvbm5lY3QpICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gJ3dlYmV4dGVuc2lvbic7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBpZiAodHlwZW9mIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnc3RyaW5nJyAmJlxuICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QudG9Mb3dlckNhc2UoKSA9PT0gJ3JlYWN0bmF0aXZlJykge1xuICAgICAgICAgICAgcmV0dXJuICdyZWFjdC1uYXRpdmUnO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHVzZXJBZ2VudCA9IG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKHVzZXJBZ2VudC5pbmRleE9mKCcgZWxlY3Ryb24vJykgPiAtMSkge1xuICAgICAgICAgICAgcmV0dXJuICdlbGVjdHJvbic7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuICd3ZWInO1xufTtcbmV4cG9ydHMuZ2V0RW52ID0gZ2V0RW52O1xuY29uc3QgcHJvY2Vzc1F1ZXJ5U3RyaW5nID0gKHVybCwga2V5cykgPT4ge1xuICAgIGNvbnN0IHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXModXJsKTtcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICBjb25zdCBwYXJhbUFycmF5ID0gQXJyYXkuZnJvbShzZWFyY2hQYXJhbXMuZW50cmllcygpKTtcbiAgICBwYXJhbUFycmF5LmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICBpZiAoa2V5cy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgICAgICByZXN1bHRba2V5XSA9IGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbmNvbnN0IHBhcnNlQ29ubmVjdFNldHRpbmdzID0gKGlucHV0ID0ge30pID0+IHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qgc2V0dGluZ3MgPSBPYmplY3QuYXNzaWduKHsgcG9wdXA6IHRydWUgfSwgaW5wdXQpO1xuICAgIGxldCBnbG9iYWxTcmM7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGdsb2JhbFNyYyA9IHdpbmRvdy5fX1RSRVpPUl9DT05ORUNUX1NSQztcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgZ2xvYmFsU3JjID0gZ2xvYmFsLl9fVFJFWk9SX0NPTk5FQ1RfU1JDO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGdsb2JhbFNyYyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgc2V0dGluZ3MuY29ubmVjdFNyYyA9IGdsb2JhbFNyYztcbiAgICAgICAgc2V0dGluZ3MuZGVidWcgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mICgoX2EgPSB3aW5kb3cubG9jYXRpb24pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zZWFyY2gpID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCBxdWVyeSA9IHByb2Nlc3NRdWVyeVN0cmluZyh3aW5kb3cubG9jYXRpb24uc2VhcmNoLCBbJ3RyZXpvci1jb25uZWN0LXNyYyddKTtcbiAgICAgICAgaWYgKHF1ZXJ5Wyd0cmV6b3ItY29ubmVjdC1zcmMnXSkge1xuICAgICAgICAgICAgc2V0dGluZ3MuZGVidWcgPSB0cnVlO1xuICAgICAgICAgICAgc2V0dGluZ3MuY29ubmVjdFNyYyA9IHF1ZXJ5Wyd0cmV6b3ItY29ubmVjdC1zcmMnXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAodHlwZW9mIGlucHV0LmVudiAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgc2V0dGluZ3MuZW52ID0gKDAsIGV4cG9ydHMuZ2V0RW52KSgpO1xuICAgIH1cbiAgICByZXR1cm4gKDAsIGNvbm5lY3RTZXR0aW5nc18xLnBhcnNlQ29ubmVjdFNldHRpbmdzKShzZXR0aW5ncyk7XG59O1xuZXhwb3J0cy5wYXJzZUNvbm5lY3RTZXR0aW5ncyA9IHBhcnNlQ29ubmVjdFNldHRpbmdzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29ubmVjdFNldHRpbmdzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/connectSettings.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/iframe/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/iframe/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initIframeLogger = exports.clearTimeout = exports.postMessage = exports.init = exports.dispose = exports.error = exports.timeout = exports.initPromise = exports.origin = exports.instance = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst utils_1 = __webpack_require__(/*! @trezor/utils */ \"./node_modules/@trezor/utils/lib/index.js\");\nconst ERRORS = tslib_1.__importStar(__webpack_require__(/*! @trezor/connect/lib/constants/errors */ \"./node_modules/@trezor/connect/lib/constants/errors.js\"));\nconst events_1 = __webpack_require__(/*! @trezor/connect/lib/events */ \"./node_modules/@trezor/connect/lib/events/index.js\");\nconst urlUtils_1 = __webpack_require__(/*! @trezor/connect/lib/utils/urlUtils */ \"./node_modules/@trezor/connect/lib/utils/urlUtils.js\");\nconst debug_1 = __webpack_require__(/*! @trezor/connect/lib/utils/debug */ \"./node_modules/@trezor/connect/lib/utils/debug.js\");\nconst inlineStyles_1 = tslib_1.__importDefault(__webpack_require__(/*! ./inlineStyles */ \"./node_modules/@trezor/connect-web/lib/iframe/inlineStyles.js\"));\nexports.initPromise = (0, utils_1.createDeferred)();\nexports.timeout = 0;\nconst dispose = () => {\n    if (exports.instance && exports.instance.parentNode) {\n        try {\n            exports.instance.parentNode.removeChild(exports.instance);\n        }\n        catch (e) {\n        }\n    }\n    exports.instance = null;\n    exports.timeout = 0;\n};\nexports.dispose = dispose;\nconst handleIframeBlocked = () => {\n    window.clearTimeout(exports.timeout);\n    exports.error = ERRORS.TypedError('Init_IframeBlocked');\n    (0, exports.dispose)();\n    exports.initPromise.reject(exports.error);\n};\nconst injectStyleSheet = () => {\n    if (!exports.instance) {\n        throw ERRORS.TypedError('Init_IframeBlocked');\n    }\n    const doc = exports.instance.ownerDocument;\n    const head = doc.head || doc.getElementsByTagName('head')[0];\n    const style = document.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.setAttribute('id', 'TrezorConnectStylesheet');\n    if (style.styleSheet) {\n        style.styleSheet.cssText = inlineStyles_1.default;\n        head.appendChild(style);\n    }\n    else {\n        style.appendChild(document.createTextNode(inlineStyles_1.default));\n        head.append(style);\n    }\n};\nconst init = async (settings) => {\n    exports.initPromise = (0, utils_1.createDeferred)();\n    const existedFrame = document.getElementById('trezorconnect');\n    if (existedFrame) {\n        exports.instance = existedFrame;\n    }\n    else {\n        exports.instance = document.createElement('iframe');\n        exports.instance.frameBorder = '0';\n        exports.instance.width = '0px';\n        exports.instance.height = '0px';\n        exports.instance.style.position = 'absolute';\n        exports.instance.style.display = 'none';\n        exports.instance.style.border = '0px';\n        exports.instance.style.width = '0px';\n        exports.instance.style.height = '0px';\n        exports.instance.id = 'trezorconnect';\n    }\n    let src;\n    if (settings.env === 'web') {\n        const manifestString = settings.manifest ? JSON.stringify(settings.manifest) : 'undefined';\n        const manifest = `version=${settings.version}&manifest=${encodeURIComponent(btoa(JSON.stringify(manifestString)))}`;\n        src = `${settings.iframeSrc}?${manifest}`;\n    }\n    else {\n        src = settings.iframeSrc;\n    }\n    exports.instance.setAttribute('src', src);\n    if (settings.webusb) {\n        console.warn('webusb option is deprecated. use `transports: [\"WebUsbTransport\"] instead`');\n    }\n    if (navigator.usb) {\n        exports.instance.setAttribute('allow', 'usb');\n    }\n    exports.origin = (0, urlUtils_1.getOrigin)(exports.instance.src);\n    exports.timeout = window.setTimeout(() => {\n        exports.initPromise.reject(ERRORS.TypedError('Init_IframeTimeout'));\n    }, 10000);\n    const onLoad = () => {\n        var _a, _b;\n        if (!exports.instance) {\n            exports.initPromise.reject(ERRORS.TypedError('Init_IframeBlocked'));\n            return;\n        }\n        try {\n            const iframeOrigin = (_a = exports.instance.contentWindow) === null || _a === void 0 ? void 0 : _a.location.origin;\n            if (!iframeOrigin || iframeOrigin === 'null') {\n                handleIframeBlocked();\n                return;\n            }\n        }\n        catch (e) {\n        }\n        let extension;\n        if (typeof chrome !== 'undefined' &&\n            chrome.runtime &&\n            typeof chrome.runtime.onConnect !== 'undefined') {\n            chrome.runtime.onConnect.addListener(() => { });\n            extension = chrome.runtime.id;\n        }\n        (_b = exports.instance.contentWindow) === null || _b === void 0 ? void 0 : _b.postMessage({\n            type: events_1.IFRAME.INIT,\n            payload: {\n                settings,\n                extension,\n            },\n        }, exports.origin);\n        exports.instance.onload = null;\n    };\n    if (exports.instance.attachEvent) {\n        exports.instance.attachEvent('onload', onLoad);\n    }\n    else {\n        exports.instance.onload = onLoad;\n    }\n    if (document.body) {\n        document.body.appendChild(exports.instance);\n        injectStyleSheet();\n    }\n    try {\n        await exports.initPromise.promise;\n    }\n    catch (e) {\n        if (exports.instance) {\n            if (exports.instance.parentNode) {\n                exports.instance.parentNode.removeChild(exports.instance);\n            }\n            exports.instance = null;\n        }\n        throw e;\n    }\n    finally {\n        window.clearTimeout(exports.timeout);\n        exports.timeout = 0;\n    }\n};\nexports.init = init;\nconst postMessage = (message) => {\n    var _a;\n    if (!exports.instance) {\n        throw ERRORS.TypedError('Init_IframeBlocked');\n    }\n    (_a = exports.instance.contentWindow) === null || _a === void 0 ? void 0 : _a.postMessage(message, exports.origin);\n};\nexports.postMessage = postMessage;\nconst clearTimeout = () => {\n    window.clearTimeout(exports.timeout);\n};\nexports.clearTimeout = clearTimeout;\nconst initIframeLogger = () => {\n    const logWriterFactory = () => ({\n        add: (message) => {\n            (0, exports.postMessage)({\n                type: events_1.IFRAME.LOG,\n                payload: message,\n            });\n        },\n    });\n    (0, debug_1.setLogWriter)(logWriterFactory);\n};\nexports.initIframeLogger = initIframeLogger;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/iframe/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/iframe/inlineStyles.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/iframe/inlineStyles.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst css = '.trezorconnect-container{position:fixed!important;display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important;-webkit-box-orient:vertical!important;-webkit-box-direction:normal!important;-webkit-flex-direction:column!important;-ms-flex-direction:column!important;flex-direction:column!important;-webkit-box-align:center!important;-webkit-align-items:center!important;-ms-flex-align:center!important;align-items:center!important;z-index:10000!important;width:100%!important;height:100%!important;top:0!important;left:0!important;background:rgba(0,0,0,.35)!important;overflow:auto!important;padding:20px!important;margin:0!important}.trezorconnect-container .trezorconnect-window{position:relative!important;display:block!important;width:370px!important;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif!important;margin:auto!important;border-radius:3px!important;background-color:#fff!important;text-align:center!important;overflow:hidden!important}.trezorconnect-container .trezorconnect-window .trezorconnect-head{text-align:left;padding:12px 24px!important;display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important;-webkit-box-align:center!important;-webkit-align-items:center!important;-ms-flex-align:center!important;align-items:center!important}.trezorconnect-container .trezorconnect-window .trezorconnect-head .trezorconnect-logo{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}.trezorconnect-container .trezorconnect-window .trezorconnect-head .trezorconnect-close{cursor:pointer!important;height:24px!important}.trezorconnect-container .trezorconnect-window .trezorconnect-head .trezorconnect-close svg{fill:#757575;-webkit-transition:fill .3s ease-in-out!important;transition:fill .3s ease-in-out!important}.trezorconnect-container .trezorconnect-window .trezorconnect-head .trezorconnect-close:hover svg{fill:#494949}.trezorconnect-container .trezorconnect-window .trezorconnect-body{padding:24px 24px 32px!important;background:#FBFBFB!important;border-top:1px solid #EBEBEB}.trezorconnect-container .trezorconnect-window .trezorconnect-body h3{color:#505050!important;font-size:16px!important;font-weight:500!important}.trezorconnect-container .trezorconnect-window .trezorconnect-body p{margin:8px 0 24px!important;font-weight:400!important;color:#A9A9A9!important;font-size:12px!important}.trezorconnect-container .trezorconnect-window .trezorconnect-body button{width:100%!important;padding:12px 24px!important;margin:0!important;border-radius:3px!important;font-size:14px!important;font-weight:300!important;cursor:pointer!important;background:#01B757!important;color:#fff!important;border:0!important;-webkit-transition:background-color .3s ease-in-out!important;transition:background-color .3s ease-in-out!important}.trezorconnect-container .trezorconnect-window .trezorconnect-body button:hover{background-color:#00AB51!important}.trezorconnect-container .trezorconnect-window .trezorconnect-body button:active{background-color:#009546!important}/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlucHV0IiwiJHN0ZGluIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNBLHlCQUNJLFNBQUEsZ0JBQ0EsUUFBQSxzQkFDQSxRQUFBLHVCQUNBLFFBQUEsc0JBRUEsUUFBQSxlQUNBLG1CQUFBLG1CQUNBLHNCQUFBLGlCQUNBLHVCQUFBLGlCQUNBLG1CQUFBLGlCQUNBLGVBQUEsaUJBRUEsa0JBQUEsaUJBQ0Esb0JBQUEsaUJBQ0EsZUFBQSxpQkNmTSxZQUFhLGlCREFyQixRQUFTLGdCQWtCSCxNQUFBLGVBQ0EsT0FBQSxlQUNBLElBQUEsWUFDQSxLQUFBLFlBQ0EsV0FBQSwwQkFDQSxTQUFBLGVBQ0EsUUFBQSxlQUNBLE9BQUEsWUNkUiwrQ0RYRSxTQUFVLG1CQTZCQSxRQUFBLGdCQUNBLE1BQUEsZ0JBQ0EsWUFBQSxjQUFBLG1CQUFBLFdBQUEsT0FBQSxpQkFBQSxNQUFBLHFCQUNBLE9BQUEsZUNmVixjQUFlLGNEakJmLGlCQWlCRSxlQWtCWSxXQUFBLGlCQ2ZkLFNBQVUsaUJEbUJJLG1FQUNBLFdBQUEsS0NoQmQsUUFBUyxLQUFLLGVEeEJkLFFBQVMsc0JBMENTLFFBQUEsdUJBQ0EsUUFBQSxzQkNmbEIsUUFBUyxlRGlCSyxrQkE1QlosaUJBOEJvQixvQkFBQSxpQkNoQmxCLGVBQWdCLGlCRC9CWixZQWlCTixpQkFzQ1EsdUZBQ0EsaUJBQUEsRUNwQlYsYUFBYyxFRHBDVixTQUFVLEVBMkRBLEtBQUEsRUFFQSx3RkNwQmQsT0FBUSxrQkR6Q1IsT0FBUSxlQWlFTSw0RkFDQSxLQUFBLFFBQ0EsbUJBQUEsS0FBQSxJQUFBLHNCQ3BCZCxXQUFZLEtBQUssSUFBSyxzQkR3QlIsa0dBQ0EsS0FBQSxRQUVBLG1FQUNBLFFBQUEsS0FBQSxLQUFBLGVBQ0EsV0FBQSxrQkFDQSxXQUFBLElBQUEsTUFBQSxRQUVBLHNFQUNBLE1BQUEsa0JBQ0EsVUFBQSxlQ3JCZCxZQUFhLGNEd0JLLHFFQ3JCbEIsT0FBUSxJQUFJLEVBQUksZUR3QkYsWUFBQSxjQUNJLE1BQUEsa0JDdEJsQixVQUFXLGVBRWIsMEVBQ0UsTUFBTyxlQUNQLFFBQVMsS0FBSyxlQUNkLE9BQVEsWUFDUixjQUFlLGNBQ2YsVUFBVyxlQUNYLFlBQWEsY0FDYixPQUFRLGtCQUNSLFdBQVksa0JBQ1osTUFBTyxlQUNQLE9BQVEsWUFDUixtQkFBb0IsaUJBQWlCLElBQUssc0JBQzFDLFdBQVksaUJBQWlCLElBQUssc0JBRXBDLGdGQUNFLGlCQUFrQixrQkFFcEIsaUZBQ0UsaUJBQWtCIn0= */';\nexports[\"default\"] = css;\n//# sourceMappingURL=inlineStyles.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvaWZyYW1lL2lubGluZVN0eWxlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQ0FBc0MseUJBQXlCLDhCQUE4QiwrQkFBK0IsOEJBQThCLHVCQUF1QixzQ0FBc0MsdUNBQXVDLHdDQUF3QyxvQ0FBb0MsZ0NBQWdDLG1DQUFtQyxxQ0FBcUMsZ0NBQWdDLDZCQUE2Qix3QkFBd0IscUJBQXFCLHNCQUFzQixnQkFBZ0IsaUJBQWlCLHFDQUFxQyx3QkFBd0IsdUJBQXVCLG1CQUFtQiwrQ0FBK0MsNEJBQTRCLHdCQUF3QixzQkFBc0IsMkdBQTJHLHNCQUFzQiw0QkFBNEIsZ0NBQWdDLDRCQUE0QiwwQkFBMEIsbUVBQW1FLGdCQUFnQiw0QkFBNEIsOEJBQThCLCtCQUErQiw4QkFBOEIsdUJBQXVCLG1DQUFtQyxxQ0FBcUMsZ0NBQWdDLDZCQUE2Qix1RkFBdUYsbUJBQW1CLGVBQWUsV0FBVyxPQUFPLHdGQUF3Rix5QkFBeUIsc0JBQXNCLDRGQUE0RixhQUFhLGtEQUFrRCwwQ0FBMEMsa0dBQWtHLGFBQWEsbUVBQW1FLGlDQUFpQyw2QkFBNkIsNkJBQTZCLHNFQUFzRSx3QkFBd0IseUJBQXlCLDBCQUEwQixxRUFBcUUsNEJBQTRCLDBCQUEwQix3QkFBd0IseUJBQXlCLDBFQUEwRSxxQkFBcUIsNEJBQTRCLG1CQUFtQiw0QkFBNEIseUJBQXlCLDBCQUEwQix5QkFBeUIsNkJBQTZCLHFCQUFxQixtQkFBbUIsOERBQThELHNEQUFzRCxnRkFBZ0YsbUNBQW1DLGlGQUFpRixtQ0FBbUMsMkNBQTJDO0FBQzltRyxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi9pZnJhbWUvaW5saW5lU3R5bGVzLmpzPzM0NTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjc3MgPSAnLnRyZXpvcmNvbm5lY3QtY29udGFpbmVye3Bvc2l0aW9uOmZpeGVkIWltcG9ydGFudDtkaXNwbGF5Oi13ZWJraXQtYm94IWltcG9ydGFudDtkaXNwbGF5Oi13ZWJraXQtZmxleCFpbXBvcnRhbnQ7ZGlzcGxheTotbXMtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4IWltcG9ydGFudDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWwhaW1wb3J0YW50Oy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWwhaW1wb3J0YW50Oy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uIWltcG9ydGFudDstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpjb2x1bW4haW1wb3J0YW50Oy13ZWJraXQtYm94LWFsaWduOmNlbnRlciFpbXBvcnRhbnQ7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXIhaW1wb3J0YW50Oy1tcy1mbGV4LWFsaWduOmNlbnRlciFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6Y2VudGVyIWltcG9ydGFudDt6LWluZGV4OjEwMDAwIWltcG9ydGFudDt3aWR0aDoxMDAlIWltcG9ydGFudDtoZWlnaHQ6MTAwJSFpbXBvcnRhbnQ7dG9wOjAhaW1wb3J0YW50O2xlZnQ6MCFpbXBvcnRhbnQ7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLC4zNSkhaW1wb3J0YW50O292ZXJmbG93OmF1dG8haW1wb3J0YW50O3BhZGRpbmc6MjBweCFpbXBvcnRhbnQ7bWFyZ2luOjAhaW1wb3J0YW50fS50cmV6b3Jjb25uZWN0LWNvbnRhaW5lciAudHJlem9yY29ubmVjdC13aW5kb3d7cG9zaXRpb246cmVsYXRpdmUhaW1wb3J0YW50O2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50O3dpZHRoOjM3MHB4IWltcG9ydGFudDtmb250LWZhbWlseTotYXBwbGUtc3lzdGVtLEJsaW5rTWFjU3lzdGVtRm9udCxcIlNlZ29lIFVJXCIsUm9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixBcmlhbCxzYW5zLXNlcmlmIWltcG9ydGFudDttYXJnaW46YXV0byFpbXBvcnRhbnQ7Ym9yZGVyLXJhZGl1czozcHghaW1wb3J0YW50O2JhY2tncm91bmQtY29sb3I6I2ZmZiFpbXBvcnRhbnQ7dGV4dC1hbGlnbjpjZW50ZXIhaW1wb3J0YW50O292ZXJmbG93OmhpZGRlbiFpbXBvcnRhbnR9LnRyZXpvcmNvbm5lY3QtY29udGFpbmVyIC50cmV6b3Jjb25uZWN0LXdpbmRvdyAudHJlem9yY29ubmVjdC1oZWFke3RleHQtYWxpZ246bGVmdDtwYWRkaW5nOjEycHggMjRweCFpbXBvcnRhbnQ7ZGlzcGxheTotd2Via2l0LWJveCFpbXBvcnRhbnQ7ZGlzcGxheTotd2Via2l0LWZsZXghaW1wb3J0YW50O2Rpc3BsYXk6LW1zLWZsZXhib3ghaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCFpbXBvcnRhbnQ7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyIWltcG9ydGFudDstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlciFpbXBvcnRhbnQ7LW1zLWZsZXgtYWxpZ246Y2VudGVyIWltcG9ydGFudDthbGlnbi1pdGVtczpjZW50ZXIhaW1wb3J0YW50fS50cmV6b3Jjb25uZWN0LWNvbnRhaW5lciAudHJlem9yY29ubmVjdC13aW5kb3cgLnRyZXpvcmNvbm5lY3QtaGVhZCAudHJlem9yY29ubmVjdC1sb2dvey13ZWJraXQtYm94LWZsZXg6MTstd2Via2l0LWZsZXg6MTstbXMtZmxleDoxO2ZsZXg6MX0udHJlem9yY29ubmVjdC1jb250YWluZXIgLnRyZXpvcmNvbm5lY3Qtd2luZG93IC50cmV6b3Jjb25uZWN0LWhlYWQgLnRyZXpvcmNvbm5lY3QtY2xvc2V7Y3Vyc29yOnBvaW50ZXIhaW1wb3J0YW50O2hlaWdodDoyNHB4IWltcG9ydGFudH0udHJlem9yY29ubmVjdC1jb250YWluZXIgLnRyZXpvcmNvbm5lY3Qtd2luZG93IC50cmV6b3Jjb25uZWN0LWhlYWQgLnRyZXpvcmNvbm5lY3QtY2xvc2Ugc3Zne2ZpbGw6Izc1NzU3NTstd2Via2l0LXRyYW5zaXRpb246ZmlsbCAuM3MgZWFzZS1pbi1vdXQhaW1wb3J0YW50O3RyYW5zaXRpb246ZmlsbCAuM3MgZWFzZS1pbi1vdXQhaW1wb3J0YW50fS50cmV6b3Jjb25uZWN0LWNvbnRhaW5lciAudHJlem9yY29ubmVjdC13aW5kb3cgLnRyZXpvcmNvbm5lY3QtaGVhZCAudHJlem9yY29ubmVjdC1jbG9zZTpob3ZlciBzdmd7ZmlsbDojNDk0OTQ5fS50cmV6b3Jjb25uZWN0LWNvbnRhaW5lciAudHJlem9yY29ubmVjdC13aW5kb3cgLnRyZXpvcmNvbm5lY3QtYm9keXtwYWRkaW5nOjI0cHggMjRweCAzMnB4IWltcG9ydGFudDtiYWNrZ3JvdW5kOiNGQkZCRkIhaW1wb3J0YW50O2JvcmRlci10b3A6MXB4IHNvbGlkICNFQkVCRUJ9LnRyZXpvcmNvbm5lY3QtY29udGFpbmVyIC50cmV6b3Jjb25uZWN0LXdpbmRvdyAudHJlem9yY29ubmVjdC1ib2R5IGgze2NvbG9yOiM1MDUwNTAhaW1wb3J0YW50O2ZvbnQtc2l6ZToxNnB4IWltcG9ydGFudDtmb250LXdlaWdodDo1MDAhaW1wb3J0YW50fS50cmV6b3Jjb25uZWN0LWNvbnRhaW5lciAudHJlem9yY29ubmVjdC13aW5kb3cgLnRyZXpvcmNvbm5lY3QtYm9keSBwe21hcmdpbjo4cHggMCAyNHB4IWltcG9ydGFudDtmb250LXdlaWdodDo0MDAhaW1wb3J0YW50O2NvbG9yOiNBOUE5QTkhaW1wb3J0YW50O2ZvbnQtc2l6ZToxMnB4IWltcG9ydGFudH0udHJlem9yY29ubmVjdC1jb250YWluZXIgLnRyZXpvcmNvbm5lY3Qtd2luZG93IC50cmV6b3Jjb25uZWN0LWJvZHkgYnV0dG9ue3dpZHRoOjEwMCUhaW1wb3J0YW50O3BhZGRpbmc6MTJweCAyNHB4IWltcG9ydGFudDttYXJnaW46MCFpbXBvcnRhbnQ7Ym9yZGVyLXJhZGl1czozcHghaW1wb3J0YW50O2ZvbnQtc2l6ZToxNHB4IWltcG9ydGFudDtmb250LXdlaWdodDozMDAhaW1wb3J0YW50O2N1cnNvcjpwb2ludGVyIWltcG9ydGFudDtiYWNrZ3JvdW5kOiMwMUI3NTchaW1wb3J0YW50O2NvbG9yOiNmZmYhaW1wb3J0YW50O2JvcmRlcjowIWltcG9ydGFudDstd2Via2l0LXRyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAuM3MgZWFzZS1pbi1vdXQhaW1wb3J0YW50O3RyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAuM3MgZWFzZS1pbi1vdXQhaW1wb3J0YW50fS50cmV6b3Jjb25uZWN0LWNvbnRhaW5lciAudHJlem9yY29ubmVjdC13aW5kb3cgLnRyZXpvcmNvbm5lY3QtYm9keSBidXR0b246aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojMDBBQjUxIWltcG9ydGFudH0udHJlem9yY29ubmVjdC1jb250YWluZXIgLnRyZXpvcmNvbm5lY3Qtd2luZG93IC50cmV6b3Jjb25uZWN0LWJvZHkgYnV0dG9uOmFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOiMwMDk1NDYhaW1wb3J0YW50fS8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx1Y0hWMElpd2lKSE4wWkdsdUlsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFXTkJMSGxDUVVOSkxGTkJRVUVzWjBKQlEwRXNVVUZCUVN4elFrRkRRU3hSUVVGQkxIVkNRVU5CTEZGQlFVRXNjMEpCUlVFc1VVRkJRU3hsUVVOQkxHMUNRVUZCTEcxQ1FVTkJMSE5DUVVGQkxHbENRVU5CTEhWQ1FVRkJMR2xDUVVOQkxHMUNRVUZCTEdsQ1FVTkJMR1ZCUVVFc2FVSkJSVUVzYTBKQlFVRXNhVUpCUTBFc2IwSkJRVUVzYVVKQlEwRXNaVUZCUVN4cFFrTm1UU3haUVVGaExHbENSRUZ5UWl4UlFVRlRMR2RDUVd0Q1NDeE5RVUZCTEdWQlEwRXNUMEZCUVN4bFFVTkJMRWxCUVVFc1dVRkRRU3hMUVVGQkxGbEJRMEVzVjBGQlFTd3dRa0ZEUVN4VFFVRkJMR1ZCUTBFc1VVRkJRU3hsUVVOQkxFOUJRVUVzV1VOa1Vpd3JRMFJZUlN4VFFVRlZMRzFDUVRaQ1FTeFJRVUZCTEdkQ1FVTkJMRTFCUVVFc1owSkJRMEVzV1VGQlFTeGpRVUZCTEcxQ1FVRkJMRmRCUVVFc1QwRkJRU3hwUWtGQlFTeE5RVUZCTEhGQ1FVTkJMRTlCUVVFc1pVTm1WaXhqUVVGbExHTkVha0ptTEdsQ1FXbENSU3hsUVd0Q1dTeFhRVUZCTEdsQ1EyWmtMRk5CUVZVc2FVSkViVUpKTEcxRlFVTkJMRmRCUVVFc1MwTm9RbVFzVVVGQlV5eExRVUZMTEdWRWVFSmtMRkZCUVZNc2MwSkJNRU5UTEZGQlFVRXNkVUpCUTBFc1VVRkJRU3h6UWtObWJFSXNVVUZCVXl4bFJHbENTeXhyUWtFMVFsb3NhVUpCT0VKdlFpeHZRa0ZCUVN4cFFrTm9RbXhDTEdWQlFXZENMR2xDUkM5Q1dpeFpRV2xDVGl4cFFrRnpRMUVzZFVaQlEwRXNhVUpCUVVFc1JVTndRbFlzWVVGQll5eEZSSEJEVml4VFFVRlZMRVZCTWtSQkxFdEJRVUVzUlVGRlFTeDNSa053UW1Rc1QwRkJVU3hyUWtSNlExSXNUMEZCVVN4bFFXbEZUU3cwUmtGRFFTeExRVUZCTEZGQlEwRXNiVUpCUVVFc1MwRkJRU3hKUVVGQkxITkNRM0JDWkN4WFFVRlpMRXRCUVVzc1NVRkJTeXh6UWtSM1FsSXNhMGRCUTBFc1MwRkJRU3hSUVVWQkxHMUZRVU5CTEZGQlFVRXNTMEZCUVN4TFFVRkJMR1ZCUTBFc1YwRkJRU3hyUWtGRFFTeFhRVUZCTEVsQlFVRXNUVUZCUVN4UlFVVkJMSE5GUVVOQkxFMUJRVUVzYTBKQlEwRXNWVUZCUVN4bFEzSkNaQ3haUVVGaExHTkVkMEpMTEhGRlEzSkNiRUlzVDBGQlVTeEpRVUZKTEVWQlFVa3NaVVIzUWtZc1dVRkJRU3hqUVVOSkxFMUJRVUVzYTBKRGRFSnNRaXhWUVVGWExHVkJSV0lzTUVWQlEwVXNUVUZCVHl4bFFVTlFMRkZCUVZNc1MwRkJTeXhsUVVOa0xFOUJRVkVzV1VGRFVpeGpRVUZsTEdOQlEyWXNWVUZCVnl4bFFVTllMRmxCUVdFc1kwRkRZaXhQUVVGUkxHdENRVU5TTEZkQlFWa3NhMEpCUTFvc1RVRkJUeXhsUVVOUUxFOUJRVkVzV1VGRFVpeHRRa0ZCYjBJc2FVSkJRV2xDTEVsQlFVc3NjMEpCUXpGRExGZEJRVmtzYVVKQlFXbENMRWxCUVVzc2MwSkJSWEJETEdkR1FVTkZMR2xDUVVGclFpeHJRa0ZGY0VJc2FVWkJRMFVzYVVKQlFXdENJbjA9ICovJztcbmV4cG9ydHMuZGVmYXVsdCA9IGNzcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlubGluZVN0eWxlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/iframe/inlineStyles.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst events_1 = tslib_1.__importDefault(__webpack_require__(/*! events */ \"./node_modules/events/events.js\"));\nconst ERRORS = tslib_1.__importStar(__webpack_require__(/*! @trezor/connect/lib/constants/errors */ \"./node_modules/@trezor/connect/lib/constants/errors.js\"));\nconst events_2 = __webpack_require__(/*! @trezor/connect/lib/events */ \"./node_modules/@trezor/connect/lib/events/index.js\");\nconst factory_1 = __webpack_require__(/*! @trezor/connect/lib/factory */ \"./node_modules/@trezor/connect/lib/factory.js\");\nconst debug_1 = __webpack_require__(/*! @trezor/connect/lib/utils/debug */ \"./node_modules/@trezor/connect/lib/utils/debug.js\");\nconst config_1 = __webpack_require__(/*! @trezor/connect/lib/data/config */ \"./node_modules/@trezor/connect/lib/data/config.js\");\nconst utils_1 = __webpack_require__(/*! @trezor/utils */ \"./node_modules/@trezor/utils/lib/index.js\");\nconst iframe = tslib_1.__importStar(__webpack_require__(/*! ./iframe */ \"./node_modules/@trezor/connect-web/lib/iframe/index.js\"));\nconst popup = tslib_1.__importStar(__webpack_require__(/*! ./popup */ \"./node_modules/@trezor/connect-web/lib/popup/index.js\"));\nconst button_1 = tslib_1.__importDefault(__webpack_require__(/*! ./webusb/button */ \"./node_modules/@trezor/connect-web/lib/webusb/button.js\"));\nconst connectSettings_1 = __webpack_require__(/*! ./connectSettings */ \"./node_modules/@trezor/connect-web/lib/connectSettings.js\");\nconst eventEmitter = new events_1.default();\nconst _log = (0, debug_1.initLog)('@trezor/connect-web');\nlet _settings = (0, connectSettings_1.parseConnectSettings)();\nlet _popupManager;\nconst messagePromises = (0, utils_1.createDeferredManager)({ initialId: 1 });\nconst initPopupManager = () => {\n    const pm = new popup.PopupManager(_settings, { logger: _log });\n    pm.on(events_2.POPUP.CLOSED, (error) => {\n        iframe.postMessage({\n            type: events_2.POPUP.CLOSED,\n            payload: error ? { error } : null,\n        });\n    });\n    return pm;\n};\nconst manifest = (data) => {\n    _settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, _settings), { manifest: data }));\n};\nconst dispose = () => {\n    eventEmitter.removeAllListeners();\n    iframe.dispose();\n    _settings = (0, connectSettings_1.parseConnectSettings)();\n    if (_popupManager) {\n        _popupManager.close();\n    }\n    return Promise.resolve(undefined);\n};\nconst cancel = (error) => {\n    if (_popupManager) {\n        _popupManager.emit(events_2.POPUP.CLOSED, error);\n    }\n};\nconst handleMessage = (messageEvent) => {\n    if (messageEvent.origin !== iframe.origin)\n        return;\n    const message = (0, events_2.parseMessage)(messageEvent.data);\n    _log.log('handleMessage', message);\n    switch (message.event) {\n        case events_2.RESPONSE_EVENT: {\n            const { id = 0, success, payload } = message;\n            const resolved = messagePromises.resolve(id, { id, success, payload });\n            if (!resolved)\n                _log.warn(`Unknown message id ${id}`);\n            break;\n        }\n        case events_2.DEVICE_EVENT:\n            eventEmitter.emit(message.event, message);\n            eventEmitter.emit(message.type, message.payload);\n            break;\n        case events_2.TRANSPORT_EVENT:\n            eventEmitter.emit(message.event, message);\n            eventEmitter.emit(message.type, message.payload);\n            break;\n        case events_2.BLOCKCHAIN_EVENT:\n            eventEmitter.emit(message.event, message);\n            eventEmitter.emit(message.type, message.payload);\n            break;\n        case events_2.UI_EVENT:\n            if (message.type === events_2.IFRAME.BOOTSTRAP) {\n                iframe.clearTimeout();\n                break;\n            }\n            if (message.type === events_2.IFRAME.LOADED) {\n                iframe.initPromise.resolve();\n            }\n            if (message.type === events_2.IFRAME.ERROR) {\n                iframe.initPromise.reject(message.payload.error);\n            }\n            eventEmitter.emit(message.event, message);\n            eventEmitter.emit(message.type, message.payload);\n            break;\n        default:\n            _log.log('Undefined message', messageEvent.data);\n    }\n};\nconst init = async (settings = {}) => {\n    var _a;\n    if (iframe.instance) {\n        throw ERRORS.TypedError('Init_AlreadyInitialized');\n    }\n    _settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, _settings), settings));\n    if (!_settings.manifest) {\n        throw ERRORS.TypedError('Init_ManifestMissing');\n    }\n    if (!((_a = _settings.transports) === null || _a === void 0 ? void 0 : _a.length)) {\n        _settings.transports = ['BridgeTransport', 'WebUsbTransport'];\n    }\n    if (_settings.lazyLoad) {\n        _settings.lazyLoad = false;\n        return;\n    }\n    if (!_popupManager) {\n        _popupManager = initPopupManager();\n    }\n    _log.enabled = !!_settings.debug;\n    window.addEventListener('message', handleMessage);\n    window.addEventListener('unload', dispose);\n    await iframe.init(_settings);\n    if (_settings.sharedLogger !== false) {\n        iframe.initIframeLogger();\n    }\n};\nconst call = async (params) => {\n    if (!iframe.instance && !iframe.timeout) {\n        _settings = (0, connectSettings_1.parseConnectSettings)(_settings);\n        if (!_settings.manifest) {\n            return (0, events_2.createErrorMessage)(ERRORS.TypedError('Init_ManifestMissing'));\n        }\n        if (!_popupManager) {\n            _popupManager = initPopupManager();\n        }\n        _popupManager.request();\n        try {\n            await init(_settings);\n        }\n        catch (error) {\n            if (_popupManager) {\n                if (['Init_IframeBlocked', 'Init_IframeTimeout'].includes(error.code)) {\n                    _popupManager.postMessage((0, events_2.createUiMessage)(events_2.UI.IFRAME_FAILURE));\n                }\n                else {\n                    _popupManager.clear();\n                }\n            }\n            return (0, events_2.createErrorMessage)(error);\n        }\n    }\n    if (iframe.timeout) {\n        return (0, events_2.createErrorMessage)(ERRORS.TypedError('Init_ManifestMissing'));\n    }\n    if (iframe.error) {\n        return (0, events_2.createErrorMessage)(iframe.error);\n    }\n    if (_settings.popup && _popupManager) {\n        _popupManager.request();\n    }\n    try {\n        const { promiseId, promise } = messagePromises.create();\n        iframe.postMessage({ id: promiseId, type: events_2.IFRAME.CALL, payload: params });\n        const response = await promise;\n        if (response) {\n            if (!response.success &&\n                response.payload.code !== 'Device_CallInProgress' &&\n                _popupManager) {\n                _popupManager.unlock();\n            }\n            return response;\n        }\n        if (_popupManager) {\n            _popupManager.unlock();\n        }\n        return (0, events_2.createErrorMessage)(ERRORS.TypedError('Method_NoResponse'));\n    }\n    catch (error) {\n        _log.error('__call error', error);\n        if (_popupManager) {\n            _popupManager.clear(false);\n        }\n        return (0, events_2.createErrorMessage)(error);\n    }\n};\nconst uiResponse = (response) => {\n    if (!iframe.instance) {\n        throw ERRORS.TypedError('Init_NotInitialized');\n    }\n    iframe.postMessage(response);\n};\nconst renderWebUSBButton = (className) => {\n    (0, button_1.default)(className, _settings.webusbSrc);\n};\nconst requestLogin = async (params) => {\n    if (typeof params.callback === 'function') {\n        const { callback } = params;\n        const loginChallengeListener = async (event) => {\n            const { data } = event;\n            if (data && data.type === events_2.UI.LOGIN_CHALLENGE_REQUEST) {\n                try {\n                    const payload = await callback();\n                    iframe.postMessage({\n                        type: events_2.UI.LOGIN_CHALLENGE_RESPONSE,\n                        payload,\n                    });\n                }\n                catch (error) {\n                    iframe.postMessage({\n                        type: events_2.UI.LOGIN_CHALLENGE_RESPONSE,\n                        payload: error.message,\n                    });\n                }\n            }\n        };\n        window.addEventListener('message', loginChallengeListener, false);\n        const response = await call(Object.assign(Object.assign({ method: 'requestLogin' }, params), { asyncChallenge: true, callback: null }));\n        window.removeEventListener('message', loginChallengeListener);\n        return response;\n    }\n    return call(Object.assign({ method: 'requestLogin' }, params));\n};\nconst disableWebUSB = () => {\n    if (!iframe.instance) {\n        throw ERRORS.TypedError('Init_NotInitialized');\n    }\n    iframe.postMessage({ type: events_2.TRANSPORT.DISABLE_WEBUSB });\n};\nconst requestWebUSBDevice = async () => {\n    try {\n        await window.navigator.usb.requestDevice({ filters: config_1.config.webusb });\n        iframe.postMessage({ type: events_2.TRANSPORT.REQUEST_DEVICE });\n    }\n    catch (_err) {\n    }\n};\nconst TrezorConnect = (0, factory_1.factory)({\n    eventEmitter,\n    manifest,\n    init,\n    call,\n    requestLogin,\n    uiResponse,\n    renderWebUSBButton,\n    disableWebUSB,\n    requestWebUSBDevice,\n    cancel,\n    dispose,\n});\nexports[\"default\"] = TrezorConnect;\ntslib_1.__exportStar(__webpack_require__(/*! @trezor/connect/lib/exports */ \"./node_modules/@trezor/connect/lib/exports.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/popup/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/popup/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PopupManager = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst events_1 = tslib_1.__importDefault(__webpack_require__(/*! events */ \"./node_modules/events/events.js\"));\nconst utils_1 = __webpack_require__(/*! @trezor/utils */ \"./node_modules/@trezor/utils/lib/index.js\");\nconst events_2 = __webpack_require__(/*! @trezor/connect/lib/events */ \"./node_modules/@trezor/connect/lib/events/index.js\");\nconst urlUtils_1 = __webpack_require__(/*! @trezor/connect/lib/utils/urlUtils */ \"./node_modules/@trezor/connect/lib/utils/urlUtils.js\");\nconst showPopupRequest_1 = __webpack_require__(/*! ./showPopupRequest */ \"./node_modules/@trezor/connect-web/lib/popup/showPopupRequest.js\");\nconst serviceworker_window_1 = __webpack_require__(/*! ../channels/serviceworker-window */ \"./node_modules/@trezor/connect-web/lib/channels/serviceworker-window.js\");\nconst window_window_1 = __webpack_require__(/*! ../channels/window-window */ \"./node_modules/@trezor/connect-web/lib/channels/window-window.js\");\nconst checkIfTabExists = (tabId) => new Promise(resolve => {\n    if (!tabId)\n        return resolve(false);\n    function callback() {\n        if (chrome.runtime.lastError) {\n            resolve(false);\n        }\n        else {\n            resolve(true);\n        }\n    }\n    chrome.tabs.get(tabId, callback);\n});\nconst POPUP_REQUEST_TIMEOUT = 850;\nconst POPUP_CLOSE_INTERVAL = 500;\nconst POPUP_OPEN_TIMEOUT = 3000;\nclass PopupManager extends events_1.default {\n    constructor(settings, { logger }) {\n        var _a;\n        super();\n        this.locked = false;\n        this.extensionTabId = 0;\n        this.injectContentScript = (tabId) => {\n            chrome.permissions.getAll(permissions => {\n                var _a;\n                if ((_a = permissions.permissions) === null || _a === void 0 ? void 0 : _a.includes('scripting')) {\n                    chrome.scripting\n                        .executeScript({\n                        target: { tabId },\n                        func: () => {\n                        },\n                    })\n                        .then(() => this.logger.debug('content script injected'))\n                        .catch(error => this.logger.error('content script injection error', error));\n                }\n                else {\n                }\n            });\n        };\n        this.settings = settings;\n        this.origin = (0, urlUtils_1.getOrigin)(settings.popupSrc);\n        this.logger = logger;\n        if (this.settings.env === 'webextension') {\n            this.channel = new serviceworker_window_1.ServiceWorkerWindowChannel({\n                name: 'trezor-connect',\n                channel: {\n                    here: '@trezor/connect-webextension',\n                    peer: '@trezor/connect-content-script',\n                },\n                logger,\n                currentId: () => {\n                    var _a, _b;\n                    if (((_a = this.popupWindow) === null || _a === void 0 ? void 0 : _a.mode) === 'tab')\n                        return (_b = this.popupWindow) === null || _b === void 0 ? void 0 : _b.tab.id;\n                },\n                legacyMode: !this.settings.useCoreInPopup,\n            });\n        }\n        else {\n            this.channel = new window_window_1.WindowWindowChannel({\n                windowHere: window,\n                windowPeer: () => {\n                    var _a, _b;\n                    if (((_a = this.popupWindow) === null || _a === void 0 ? void 0 : _a.mode) === 'window')\n                        return (_b = this.popupWindow) === null || _b === void 0 ? void 0 : _b.window;\n                },\n                channel: {\n                    here: '@trezor/connect-web',\n                    peer: '@trezor/connect-popup',\n                },\n                logger,\n                origin: this.origin,\n            });\n        }\n        if (!this.settings.useCoreInPopup) {\n            this.iframeHandshakePromise = (0, utils_1.createDeferred)(events_2.IFRAME.LOADED);\n            this.channelIframe = new window_window_1.WindowWindowChannel({\n                windowHere: window,\n                windowPeer: () => window,\n                channel: {\n                    here: '@trezor/connect-web',\n                    peer: '@trezor/connect-iframe',\n                },\n                logger,\n                origin: this.origin,\n            });\n            (_a = this.channelIframe) === null || _a === void 0 ? void 0 : _a.on('message', this.handleMessage.bind(this));\n        }\n        if (this.settings.useCoreInPopup) {\n            this.handshakePromise = (0, utils_1.createDeferred)();\n            this.channel.on('message', this.handleCoreMessage.bind(this));\n        }\n        else if (this.settings.env === 'webextension') {\n            this.channel.on('message', this.handleExtensionMessage.bind(this));\n        }\n        else {\n            this.channel.on('message', this.handleMessage.bind(this));\n        }\n        this.channel.init();\n    }\n    async request() {\n        var _a, _b, _c, _d, _f;\n        if (this.settings.useCoreInPopup && ((_a = this.popupWindow) === null || _a === void 0 ? void 0 : _a.mode) === 'tab') {\n            const currentPopupExists = await checkIfTabExists((_c = (_b = this.popupWindow) === null || _b === void 0 ? void 0 : _b.tab) === null || _c === void 0 ? void 0 : _c.id);\n            if (!currentPopupExists) {\n                this.clear();\n            }\n        }\n        if (this.locked) {\n            if (((_d = this.popupWindow) === null || _d === void 0 ? void 0 : _d.mode) === 'tab' && this.popupWindow.tab.id) {\n                chrome.tabs.update(this.popupWindow.tab.id, { active: true });\n            }\n            else if (((_f = this.popupWindow) === null || _f === void 0 ? void 0 : _f.mode) === 'window') {\n                this.popupWindow.window.focus();\n            }\n            return;\n        }\n        if (this.popupWindow && !this.locked) {\n            this.close();\n        }\n        const openFn = this.open.bind(this);\n        this.locked = true;\n        const timeout = this.settings.env === 'webextension' ? 1 : POPUP_REQUEST_TIMEOUT;\n        this.requestTimeout = setTimeout(() => {\n            this.requestTimeout = undefined;\n            openFn();\n        }, timeout);\n    }\n    unlock() {\n        this.locked = false;\n    }\n    open() {\n        const src = this.settings.popupSrc;\n        if (this.settings.useCoreInPopup) {\n            this.openWrapper(src);\n            return;\n        }\n        this.popupPromise = (0, utils_1.createDeferred)(events_2.POPUP.LOADED);\n        this.openWrapper(src);\n        this.closeInterval = setInterval(() => {\n            if (!this.popupWindow)\n                return;\n            if (this.popupWindow.mode === 'tab' && this.popupWindow.tab.id) {\n                chrome.tabs.get(this.popupWindow.tab.id, tab => {\n                    if (!tab) {\n                        this.emit(events_2.POPUP.CLOSED);\n                        this.clear();\n                    }\n                });\n            }\n            else if (this.popupWindow.mode === 'window' && this.popupWindow.window.closed) {\n                this.clear();\n                this.emit(events_2.POPUP.CLOSED);\n            }\n        }, POPUP_CLOSE_INTERVAL);\n        this.openTimeout = setTimeout(() => {\n            this.clear();\n            (0, showPopupRequest_1.showPopupRequest)(this.open.bind(this), () => {\n                this.emit(events_2.POPUP.CLOSED);\n            });\n        }, POPUP_OPEN_TIMEOUT);\n    }\n    openWrapper(url) {\n        if (this.settings.env === 'webextension') {\n            chrome.windows.getCurrent(currentWindow => {\n                this.logger.debug('opening popup. currentWindow: ', currentWindow);\n                if (currentWindow.type !== 'normal') {\n                    chrome.windows.create({ url }, newWindow => {\n                        chrome.tabs.query({\n                            windowId: newWindow === null || newWindow === void 0 ? void 0 : newWindow.id,\n                            active: true,\n                        }, tabs => {\n                            this.popupWindow = { mode: 'tab', tab: tabs[0] };\n                            this.injectContentScript(tabs[0].id);\n                        });\n                    });\n                }\n                else {\n                    chrome.tabs.query({\n                        currentWindow: true,\n                        active: true,\n                    }, tabs => {\n                        this.extensionTabId = tabs[0].id;\n                        chrome.tabs.create({\n                            url,\n                            index: tabs[0].index + 1,\n                        }, tab => {\n                            this.popupWindow = { mode: 'tab', tab };\n                            this.injectContentScript(tab.id);\n                        });\n                    });\n                }\n            });\n        }\n        else {\n            const windowResult = window.open(url, 'modal');\n            if (!windowResult)\n                return;\n            this.popupWindow = { mode: 'window', window: windowResult };\n        }\n        if (!this.channel.isConnected) {\n            this.channel.connect();\n        }\n    }\n    handleCoreMessage(message) {\n        var _a;\n        if (message.type === events_2.POPUP.CORE_LOADED) {\n            this.channel.postMessage({\n                type: events_2.POPUP.HANDSHAKE,\n                payload: { settings: this.settings },\n            });\n            (_a = this.handshakePromise) === null || _a === void 0 ? void 0 : _a.resolve();\n        }\n        else if (message.type === events_2.POPUP.CLOSED) {\n            this.channel.resolveMessagePromises({\n                code: 'Method_Interrupted',\n                error: events_2.POPUP.CLOSED,\n            });\n        }\n    }\n    handleExtensionMessage(data) {\n        if (data.type === events_2.POPUP.ERROR ||\n            data.type === events_2.POPUP.LOADED ||\n            data.type === events_2.POPUP.BOOTSTRAP) {\n            this.handleMessage(data);\n        }\n        else if (data.type === events_2.POPUP.EXTENSION_USB_PERMISSIONS) {\n            chrome.tabs.query({\n                currentWindow: true,\n                active: true,\n            }, tabs => {\n                chrome.tabs.create({\n                    url: 'trezor-usb-permissions.html',\n                    index: tabs[0].index + 1,\n                }, _tab => {\n                });\n            });\n        }\n        else if (data.type === events_2.POPUP.CLOSE_WINDOW) {\n            this.clear();\n        }\n    }\n    handleMessage(data) {\n        var _a, _b;\n        if (data.type === events_2.IFRAME.LOADED) {\n            (_a = this.iframeHandshakePromise) === null || _a === void 0 ? void 0 : _a.resolve(data.payload);\n        }\n        else if (data.type === events_2.POPUP.BOOTSTRAP) {\n            if (this.openTimeout)\n                clearTimeout(this.openTimeout);\n        }\n        else if (data.type === events_2.POPUP.ERROR && this.popupWindow) {\n            const errorMessage = data.payload && typeof data.payload.error === 'string' ? data.payload.error : null;\n            this.emit(events_2.POPUP.CLOSED, errorMessage ? `Popup error: ${errorMessage}` : null);\n            this.clear();\n        }\n        else if (data.type === events_2.POPUP.LOADED) {\n            if (this.openTimeout)\n                clearTimeout(this.openTimeout);\n            if (this.popupPromise) {\n                this.popupPromise.resolve();\n            }\n            (_b = this.iframeHandshakePromise) === null || _b === void 0 ? void 0 : _b.promise.then(payload => {\n                this.channel.postMessage({\n                    type: events_2.POPUP.INIT,\n                    payload: Object.assign(Object.assign({}, payload), { settings: this.settings }),\n                });\n            });\n        }\n        else if (data.type === events_2.POPUP.CANCEL_POPUP_REQUEST || data.type === events_2.UI.CLOSE_UI_WINDOW) {\n            this.clear(false);\n        }\n    }\n    clear(focus = true) {\n        this.locked = false;\n        this.popupPromise = undefined;\n        this.handshakePromise = (0, utils_1.createDeferred)();\n        if (this.channel) {\n            this.channel.disconnect();\n        }\n        if (this.requestTimeout) {\n            clearTimeout(this.requestTimeout);\n            this.requestTimeout = undefined;\n        }\n        if (this.openTimeout) {\n            clearTimeout(this.openTimeout);\n            this.openTimeout = undefined;\n        }\n        if (this.closeInterval) {\n            clearInterval(this.closeInterval);\n            this.closeInterval = undefined;\n        }\n        if (focus && this.extensionTabId) {\n            chrome.tabs.update(this.extensionTabId, { active: true });\n            this.extensionTabId = 0;\n        }\n    }\n    close() {\n        if (!this.popupWindow)\n            return;\n        this.logger.debug('closing popup');\n        if (this.popupWindow.mode === 'tab') {\n            let _e = chrome.runtime.lastError;\n            if (this.popupWindow.tab.id) {\n                chrome.tabs.remove(this.popupWindow.tab.id, () => {\n                    _e = chrome.runtime.lastError;\n                    if (_e) {\n                        this.logger.error('closed with error', _e);\n                    }\n                });\n            }\n        }\n        else if (this.popupWindow.mode === 'window') {\n            this.popupWindow.window.close();\n        }\n        this.popupWindow = undefined;\n    }\n    async postMessage(message) {\n        var _a, _b;\n        if (!this.popupWindow && message.type !== events_2.UI.REQUEST_UI_WINDOW && this.openTimeout) {\n            this.clear();\n            (0, showPopupRequest_1.showPopupRequest)(this.open.bind(this), () => {\n                this.emit(events_2.POPUP.CLOSED);\n            });\n            return;\n        }\n        if (this.popupPromise) {\n            await this.popupPromise.promise;\n        }\n        if (((_a = this.popupWindow) === null || _a === void 0 ? void 0 : _a.mode) === 'window') {\n            this.popupWindow.window.postMessage(message, this.origin);\n        }\n        else if (((_b = this.popupWindow) === null || _b === void 0 ? void 0 : _b.mode) === 'tab') {\n            this.channel.postMessage(message);\n        }\n    }\n}\nexports.PopupManager = PopupManager;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/popup/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/popup/showPopupRequest.js":
/*!************************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/popup/showPopupRequest.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.showPopupRequest = void 0;\nconst LAYER_ID = 'TrezorConnectInteractionLayer';\nconst HTML = `\n    <div class=\"trezorconnect-container\" id=\"${LAYER_ID}\">\n        <div class=\"trezorconnect-window\">\n            <div class=\"trezorconnect-head\">\n                <svg class=\"trezorconnect-logo\" x=\"0px\" y=\"0px\" viewBox=\"0 0 163.7 41.9\" width=\"78px\" height=\"20px\" preserveAspectRatio=\"xMinYMin meet\">\n                    <polygon points=\"101.1,12.8 118.2,12.8 118.2,17.3 108.9,29.9 118.2,29.9 118.2,35.2 101.1,35.2 101.1,30.7 110.4,18.1 101.1,18.1\"/>\n                    <path d=\"M158.8,26.9c2.1-0.8,4.3-2.9,4.3-6.6c0-4.5-3.1-7.4-7.7-7.4h-10.5v22.3h5.8v-7.5h2.2l4.1,7.5h6.7L158.8,26.9z M154.7,22.5 h-4V18h4c1.5,0,2.5,0.9,2.5,2.2C157.2,21.6,156.2,22.5,154.7,22.5z\"/>\n                    <path d=\"M130.8,12.5c-6.8,0-11.6,4.9-11.6,11.5s4.9,11.5,11.6,11.5s11.7-4.9,11.7-11.5S137.6,12.5,130.8,12.5z M130.8,30.3 c-3.4,0-5.7-2.6-5.7-6.3c0-3.8,2.3-6.3,5.7-6.3c3.4,0,5.8,2.6,5.8,6.3C136.6,27.7,134.2,30.3,130.8,30.3z\"/>\n                    <polygon points=\"82.1,12.8 98.3,12.8 98.3,18 87.9,18 87.9,21.3 98,21.3 98,26.4 87.9,26.4 87.9,30 98.3,30 98.3,35.2 82.1,35.2 \"/>\n                    <path d=\"M24.6,9.7C24.6,4.4,20,0,14.4,0S4.2,4.4,4.2,9.7v3.1H0v22.3h0l14.4,6.7l14.4-6.7h0V12.9h-4.2V9.7z M9.4,9.7 c0-2.5,2.2-4.5,5-4.5s5,2,5,4.5v3.1H9.4V9.7z M23,31.5l-8.6,4l-8.6-4V18.1H23V31.5z\"/>\n                    <path d=\"M79.4,20.3c0-4.5-3.1-7.4-7.7-7.4H61.2v22.3H67v-7.5h2.2l4.1,7.5H80l-4.9-8.3C77.2,26.1,79.4,24,79.4,20.3z M71,22.5h-4V18 h4c1.5,0,2.5,0.9,2.5,2.2C73.5,21.6,72.5,22.5,71,22.5z\"/>\n                    <polygon points=\"40.5,12.8 58.6,12.8 58.6,18.1 52.4,18.1 52.4,35.2 46.6,35.2 46.6,18.1 40.5,18.1 \"/>\n                </svg>\n                <div class=\"trezorconnect-close\">\n                    <svg x=\"0px\" y=\"0px\" viewBox=\"24 24 60 60\" width=\"24px\" height=\"24px\" preserveAspectRatio=\"xMinYMin meet\">\n                        <polygon class=\"st0\" points=\"40,67.9 42.1,70 55,57.1 67.9,70 70,67.9 57.1,55 70,42.1 67.9,40 55,52.9 42.1,40 40,42.1 52.9,55 \"/>\n                    </svg>\n                </div>\n            </div>\n            <div class=\"trezorconnect-body\">\n                <h3>Popup was blocked</h3>\n                <p>Please click to \"Continue\" to open popup manually</p>\n                <button class=\"trezorconnect-open\">Continue</button>\n            </div>\n        </div>\n    </div>\n`;\nconst showPopupRequest = (open, cancel) => {\n    if (document.getElementById(LAYER_ID)) {\n        return;\n    }\n    const div = document.createElement('div');\n    div.id = LAYER_ID;\n    div.className = 'trezorconnect-container';\n    div.innerHTML = HTML;\n    if (document.body) {\n        document.body.appendChild(div);\n    }\n    const button = div.getElementsByClassName('trezorconnect-open')[0];\n    button.onclick = () => {\n        open();\n        if (document.body) {\n            document.body.removeChild(div);\n        }\n    };\n    const close = div.getElementsByClassName('trezorconnect-close')[0];\n    close.onclick = () => {\n        cancel();\n        if (document.body) {\n            document.body.removeChild(div);\n        }\n    };\n};\nexports.showPopupRequest = showPopupRequest;\n//# sourceMappingURL=showPopupRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvcG9wdXAvc2hvd1BvcHVwUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLCtDQUErQyxTQUFTO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvcG9wdXAvc2hvd1BvcHVwUmVxdWVzdC5qcz8zNDE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zaG93UG9wdXBSZXF1ZXN0ID0gdm9pZCAwO1xuY29uc3QgTEFZRVJfSUQgPSAnVHJlem9yQ29ubmVjdEludGVyYWN0aW9uTGF5ZXInO1xuY29uc3QgSFRNTCA9IGBcbiAgICA8ZGl2IGNsYXNzPVwidHJlem9yY29ubmVjdC1jb250YWluZXJcIiBpZD1cIiR7TEFZRVJfSUR9XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0cmV6b3Jjb25uZWN0LXdpbmRvd1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRyZXpvcmNvbm5lY3QtaGVhZFwiPlxuICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9XCJ0cmV6b3Jjb25uZWN0LWxvZ29cIiB4PVwiMHB4XCIgeT1cIjBweFwiIHZpZXdCb3g9XCIwIDAgMTYzLjcgNDEuOVwiIHdpZHRoPVwiNzhweFwiIGhlaWdodD1cIjIwcHhcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pbllNaW4gbWVldFwiPlxuICAgICAgICAgICAgICAgICAgICA8cG9seWdvbiBwb2ludHM9XCIxMDEuMSwxMi44IDExOC4yLDEyLjggMTE4LjIsMTcuMyAxMDguOSwyOS45IDExOC4yLDI5LjkgMTE4LjIsMzUuMiAxMDEuMSwzNS4yIDEwMS4xLDMwLjcgMTEwLjQsMTguMSAxMDEuMSwxOC4xXCIvPlxuICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTE1OC44LDI2LjljMi4xLTAuOCw0LjMtMi45LDQuMy02LjZjMC00LjUtMy4xLTcuNC03LjctNy40aC0xMC41djIyLjNoNS44di03LjVoMi4ybDQuMSw3LjVoNi43TDE1OC44LDI2Ljl6IE0xNTQuNywyMi41IGgtNFYxOGg0YzEuNSwwLDIuNSwwLjksMi41LDIuMkMxNTcuMiwyMS42LDE1Ni4yLDIyLjUsMTU0LjcsMjIuNXpcIi8+XG4gICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTMwLjgsMTIuNWMtNi44LDAtMTEuNiw0LjktMTEuNiwxMS41czQuOSwxMS41LDExLjYsMTEuNXMxMS43LTQuOSwxMS43LTExLjVTMTM3LjYsMTIuNSwxMzAuOCwxMi41eiBNMTMwLjgsMzAuMyBjLTMuNCwwLTUuNy0yLjYtNS43LTYuM2MwLTMuOCwyLjMtNi4zLDUuNy02LjNjMy40LDAsNS44LDIuNiw1LjgsNi4zQzEzNi42LDI3LjcsMTM0LjIsMzAuMywxMzAuOCwzMC4zelwiLz5cbiAgICAgICAgICAgICAgICAgICAgPHBvbHlnb24gcG9pbnRzPVwiODIuMSwxMi44IDk4LjMsMTIuOCA5OC4zLDE4IDg3LjksMTggODcuOSwyMS4zIDk4LDIxLjMgOTgsMjYuNCA4Ny45LDI2LjQgODcuOSwzMCA5OC4zLDMwIDk4LjMsMzUuMiA4Mi4xLDM1LjIgXCIvPlxuICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTI0LjYsOS43QzI0LjYsNC40LDIwLDAsMTQuNCwwUzQuMiw0LjQsNC4yLDkuN3YzLjFIMHYyMi4zaDBsMTQuNCw2LjdsMTQuNC02LjdoMFYxMi45aC00LjJWOS43eiBNOS40LDkuNyBjMC0yLjUsMi4yLTQuNSw1LTQuNXM1LDIsNSw0LjV2My4xSDkuNFY5Ljd6IE0yMywzMS41bC04LjYsNGwtOC42LTRWMTguMUgyM1YzMS41elwiLz5cbiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk03OS40LDIwLjNjMC00LjUtMy4xLTcuNC03LjctNy40SDYxLjJ2MjIuM0g2N3YtNy41aDIuMmw0LjEsNy41SDgwbC00LjktOC4zQzc3LjIsMjYuMSw3OS40LDI0LDc5LjQsMjAuM3ogTTcxLDIyLjVoLTRWMTggaDRjMS41LDAsMi41LDAuOSwyLjUsMi4yQzczLjUsMjEuNiw3Mi41LDIyLjUsNzEsMjIuNXpcIi8+XG4gICAgICAgICAgICAgICAgICAgIDxwb2x5Z29uIHBvaW50cz1cIjQwLjUsMTIuOCA1OC42LDEyLjggNTguNiwxOC4xIDUyLjQsMTguMSA1Mi40LDM1LjIgNDYuNiwzNS4yIDQ2LjYsMTguMSA0MC41LDE4LjEgXCIvPlxuICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0cmV6b3Jjb25uZWN0LWNsb3NlXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzdmcgeD1cIjBweFwiIHk9XCIwcHhcIiB2aWV3Qm94PVwiMjQgMjQgNjAgNjBcIiB3aWR0aD1cIjI0cHhcIiBoZWlnaHQ9XCIyNHB4XCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaW5ZTWluIG1lZXRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwb2x5Z29uIGNsYXNzPVwic3QwXCIgcG9pbnRzPVwiNDAsNjcuOSA0Mi4xLDcwIDU1LDU3LjEgNjcuOSw3MCA3MCw2Ny45IDU3LjEsNTUgNzAsNDIuMSA2Ny45LDQwIDU1LDUyLjkgNDIuMSw0MCA0MCw0Mi4xIDUyLjksNTUgXCIvPlxuICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRyZXpvcmNvbm5lY3QtYm9keVwiPlxuICAgICAgICAgICAgICAgIDxoMz5Qb3B1cCB3YXMgYmxvY2tlZDwvaDM+XG4gICAgICAgICAgICAgICAgPHA+UGxlYXNlIGNsaWNrIHRvIFwiQ29udGludWVcIiB0byBvcGVuIHBvcHVwIG1hbnVhbGx5PC9wPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJ0cmV6b3Jjb25uZWN0LW9wZW5cIj5Db250aW51ZTwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuYDtcbmNvbnN0IHNob3dQb3B1cFJlcXVlc3QgPSAob3BlbiwgY2FuY2VsKSA9PiB7XG4gICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKExBWUVSX0lEKSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRpdi5pZCA9IExBWUVSX0lEO1xuICAgIGRpdi5jbGFzc05hbWUgPSAndHJlem9yY29ubmVjdC1jb250YWluZXInO1xuICAgIGRpdi5pbm5lckhUTUwgPSBIVE1MO1xuICAgIGlmIChkb2N1bWVudC5ib2R5KSB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZGl2KTtcbiAgICB9XG4gICAgY29uc3QgYnV0dG9uID0gZGl2LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RyZXpvcmNvbm5lY3Qtb3BlbicpWzBdO1xuICAgIGJ1dHRvbi5vbmNsaWNrID0gKCkgPT4ge1xuICAgICAgICBvcGVuKCk7XG4gICAgICAgIGlmIChkb2N1bWVudC5ib2R5KSB7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGRpdik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGNsb3NlID0gZGl2LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RyZXpvcmNvbm5lY3QtY2xvc2UnKVswXTtcbiAgICBjbG9zZS5vbmNsaWNrID0gKCkgPT4ge1xuICAgICAgICBjYW5jZWwoKTtcbiAgICAgICAgaWYgKGRvY3VtZW50LmJvZHkpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZGl2KTtcbiAgICAgICAgfVxuICAgIH07XG59O1xuZXhwb3J0cy5zaG93UG9wdXBSZXF1ZXN0ID0gc2hvd1BvcHVwUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNob3dQb3B1cFJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/popup/showPopupRequest.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/webusb/button.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/webusb/button.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst render = (className = '', url) => {\n    const query = className || '.trezor-webusb-button';\n    const buttons = document.querySelectorAll(query);\n    const src = `${url}?${Date.now()}`;\n    buttons.forEach(b => {\n        if (b.getElementsByTagName('iframe').length < 1) {\n            const bounds = b.getBoundingClientRect();\n            const btnIframe = document.createElement('iframe');\n            btnIframe.frameBorder = '0';\n            btnIframe.width = `${Math.round(bounds.width)}px`;\n            btnIframe.height = `${Math.round(bounds.height)}px`;\n            btnIframe.style.position = 'absolute';\n            btnIframe.style.top = '0px';\n            btnIframe.style.left = '0px';\n            btnIframe.style.zIndex = '1';\n            btnIframe.setAttribute('allow', 'usb');\n            btnIframe.setAttribute('scrolling', 'no');\n            btnIframe.src = src;\n            b.append(btnIframe);\n        }\n    });\n};\nexports[\"default\"] = render;\n//# sourceMappingURL=button.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvd2VidXNiL2J1dHRvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsSUFBSSxHQUFHLFdBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx5QkFBeUI7QUFDMUQsa0NBQWtDLDBCQUEwQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi93ZWJ1c2IvYnV0dG9uLmpzPzUwMDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCByZW5kZXIgPSAoY2xhc3NOYW1lID0gJycsIHVybCkgPT4ge1xuICAgIGNvbnN0IHF1ZXJ5ID0gY2xhc3NOYW1lIHx8ICcudHJlem9yLXdlYnVzYi1idXR0b24nO1xuICAgIGNvbnN0IGJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHF1ZXJ5KTtcbiAgICBjb25zdCBzcmMgPSBgJHt1cmx9PyR7RGF0ZS5ub3coKX1gO1xuICAgIGJ1dHRvbnMuZm9yRWFjaChiID0+IHtcbiAgICAgICAgaWYgKGIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2lmcmFtZScpLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgIGNvbnN0IGJvdW5kcyA9IGIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICBjb25zdCBidG5JZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTtcbiAgICAgICAgICAgIGJ0bklmcmFtZS5mcmFtZUJvcmRlciA9ICcwJztcbiAgICAgICAgICAgIGJ0bklmcmFtZS53aWR0aCA9IGAke01hdGgucm91bmQoYm91bmRzLndpZHRoKX1weGA7XG4gICAgICAgICAgICBidG5JZnJhbWUuaGVpZ2h0ID0gYCR7TWF0aC5yb3VuZChib3VuZHMuaGVpZ2h0KX1weGA7XG4gICAgICAgICAgICBidG5JZnJhbWUuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuICAgICAgICAgICAgYnRuSWZyYW1lLnN0eWxlLnRvcCA9ICcwcHgnO1xuICAgICAgICAgICAgYnRuSWZyYW1lLnN0eWxlLmxlZnQgPSAnMHB4JztcbiAgICAgICAgICAgIGJ0bklmcmFtZS5zdHlsZS56SW5kZXggPSAnMSc7XG4gICAgICAgICAgICBidG5JZnJhbWUuc2V0QXR0cmlidXRlKCdhbGxvdycsICd1c2InKTtcbiAgICAgICAgICAgIGJ0bklmcmFtZS5zZXRBdHRyaWJ1dGUoJ3Njcm9sbGluZycsICdubycpO1xuICAgICAgICAgICAgYnRuSWZyYW1lLnNyYyA9IHNyYztcbiAgICAgICAgICAgIGIuYXBwZW5kKGJ0bklmcmFtZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSByZW5kZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1idXR0b24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/webusb/button.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/constants/cardano.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/constants/cardano.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NETWORK_IDS = exports.PROTOCOL_MAGICS = void 0;\nvar PROTOCOL_MAGICS;\n(function (PROTOCOL_MAGICS) {\n    PROTOCOL_MAGICS[PROTOCOL_MAGICS[\"mainnet\"] = 764824073] = \"mainnet\";\n    PROTOCOL_MAGICS[PROTOCOL_MAGICS[\"testnet_preprod\"] = 1] = \"testnet_preprod\";\n    PROTOCOL_MAGICS[PROTOCOL_MAGICS[\"testnet_preview\"] = 2] = \"testnet_preview\";\n    PROTOCOL_MAGICS[PROTOCOL_MAGICS[\"testnet_legacy\"] = 1097911063] = \"testnet_legacy\";\n})(PROTOCOL_MAGICS || (exports.PROTOCOL_MAGICS = PROTOCOL_MAGICS = {}));\nvar NETWORK_IDS;\n(function (NETWORK_IDS) {\n    NETWORK_IDS[NETWORK_IDS[\"mainnet\"] = 1] = \"mainnet\";\n    NETWORK_IDS[NETWORK_IDS[\"testnet\"] = 0] = \"testnet\";\n})(NETWORK_IDS || (exports.NETWORK_IDS = NETWORK_IDS = {}));\n//# sourceMappingURL=cardano.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvY2FyZGFuby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyx1QkFBdUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQkFBc0IsdUJBQXVCLHVCQUF1QjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0JBQWtCLG1CQUFtQixtQkFBbUI7QUFDekQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvY29uc3RhbnRzL2NhcmRhbm8uanM/ZmM1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTkVUV09SS19JRFMgPSBleHBvcnRzLlBST1RPQ09MX01BR0lDUyA9IHZvaWQgMDtcbnZhciBQUk9UT0NPTF9NQUdJQ1M7XG4oZnVuY3Rpb24gKFBST1RPQ09MX01BR0lDUykge1xuICAgIFBST1RPQ09MX01BR0lDU1tQUk9UT0NPTF9NQUdJQ1NbXCJtYWlubmV0XCJdID0gNzY0ODI0MDczXSA9IFwibWFpbm5ldFwiO1xuICAgIFBST1RPQ09MX01BR0lDU1tQUk9UT0NPTF9NQUdJQ1NbXCJ0ZXN0bmV0X3ByZXByb2RcIl0gPSAxXSA9IFwidGVzdG5ldF9wcmVwcm9kXCI7XG4gICAgUFJPVE9DT0xfTUFHSUNTW1BST1RPQ09MX01BR0lDU1tcInRlc3RuZXRfcHJldmlld1wiXSA9IDJdID0gXCJ0ZXN0bmV0X3ByZXZpZXdcIjtcbiAgICBQUk9UT0NPTF9NQUdJQ1NbUFJPVE9DT0xfTUFHSUNTW1widGVzdG5ldF9sZWdhY3lcIl0gPSAxMDk3OTExMDYzXSA9IFwidGVzdG5ldF9sZWdhY3lcIjtcbn0pKFBST1RPQ09MX01BR0lDUyB8fCAoZXhwb3J0cy5QUk9UT0NPTF9NQUdJQ1MgPSBQUk9UT0NPTF9NQUdJQ1MgPSB7fSkpO1xudmFyIE5FVFdPUktfSURTO1xuKGZ1bmN0aW9uIChORVRXT1JLX0lEUykge1xuICAgIE5FVFdPUktfSURTW05FVFdPUktfSURTW1wibWFpbm5ldFwiXSA9IDFdID0gXCJtYWlubmV0XCI7XG4gICAgTkVUV09SS19JRFNbTkVUV09SS19JRFNbXCJ0ZXN0bmV0XCJdID0gMF0gPSBcInRlc3RuZXRcIjtcbn0pKE5FVFdPUktfSURTIHx8IChleHBvcnRzLk5FVFdPUktfSURTID0gTkVUV09SS19JRFMgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FyZGFuby5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/constants/cardano.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/constants/errors.js":
/*!**************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/constants/errors.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LIBUSB_ERROR_MESSAGE = exports.serializeError = exports.TypedError = exports.TrezorError = exports.ERROR_CODES = void 0;\nexports.ERROR_CODES = {\n    Init_NotInitialized: 'TrezorConnect not initialized',\n    Init_AlreadyInitialized: 'TrezorConnect has been already initialized',\n    Init_IframeBlocked: 'Iframe blocked',\n    Init_IframeTimeout: 'Iframe timeout',\n    Init_ManifestMissing: 'Manifest not set. Read more at https://github.com/trezor/trezor-suite/blob/develop/docs/packages/connect/index.md',\n    Popup_ConnectionMissing: 'Unable to establish connection with iframe',\n    Transport_Missing: 'Transport is missing',\n    Transport_InvalidProtobuf: '',\n    Method_InvalidPackage: 'This package is not suitable to work with browser. Use @trezor/connect-web package instead',\n    Method_InvalidParameter: '',\n    Method_NotAllowed: 'Method not allowed for this configuration',\n    Method_PermissionsNotGranted: 'Permissions not granted',\n    Method_Cancel: 'Cancelled',\n    Method_Interrupted: 'Popup closed',\n    Method_UnknownCoin: 'Coin not found',\n    Method_AddressNotMatch: 'Addresses do not match',\n    Method_FirmwareUpdate_DownloadFailed: 'Failed to download firmware binary',\n    Method_Discovery_BundleException: '',\n    Method_Override: 'override',\n    Method_NoResponse: 'Call resolved without response',\n    Backend_NotSupported: 'BlockchainLink settings not found in coins.json',\n    Backend_WorkerMissing: '',\n    Backend_Disconnected: 'Backend disconnected',\n    Backend_Invalid: 'Invalid backend',\n    Backend_Error: '',\n    Runtime: '',\n    Device_NotFound: 'Device not found',\n    Device_InitializeFailed: '',\n    Device_FwException: '',\n    Device_ModeException: '',\n    Device_Disconnected: 'Device disconnected',\n    Device_UsedElsewhere: 'Device is used in another window',\n    Device_InvalidState: 'Passphrase is incorrect',\n    Device_CallInProgress: 'Device call in progress',\n};\nclass TrezorError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        this.message = message;\n    }\n}\nexports.TrezorError = TrezorError;\nconst TypedError = (id, message) => new TrezorError(id, message || exports.ERROR_CODES[id]);\nexports.TypedError = TypedError;\nconst serializeError = (payload) => {\n    if (payload && payload.error instanceof Error) {\n        return { error: payload.error.message, code: payload.error.code };\n    }\n    return payload;\n};\nexports.serializeError = serializeError;\nexports.LIBUSB_ERROR_MESSAGE = 'LIBUSB_ERROR';\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLHNCQUFzQixHQUFHLGtCQUFrQixHQUFHLG1CQUFtQixHQUFHLG1CQUFtQjtBQUN0SCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvZXJyb3JzLmpzPzQ2MzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxJQlVTQl9FUlJPUl9NRVNTQUdFID0gZXhwb3J0cy5zZXJpYWxpemVFcnJvciA9IGV4cG9ydHMuVHlwZWRFcnJvciA9IGV4cG9ydHMuVHJlem9yRXJyb3IgPSBleHBvcnRzLkVSUk9SX0NPREVTID0gdm9pZCAwO1xuZXhwb3J0cy5FUlJPUl9DT0RFUyA9IHtcbiAgICBJbml0X05vdEluaXRpYWxpemVkOiAnVHJlem9yQ29ubmVjdCBub3QgaW5pdGlhbGl6ZWQnLFxuICAgIEluaXRfQWxyZWFkeUluaXRpYWxpemVkOiAnVHJlem9yQ29ubmVjdCBoYXMgYmVlbiBhbHJlYWR5IGluaXRpYWxpemVkJyxcbiAgICBJbml0X0lmcmFtZUJsb2NrZWQ6ICdJZnJhbWUgYmxvY2tlZCcsXG4gICAgSW5pdF9JZnJhbWVUaW1lb3V0OiAnSWZyYW1lIHRpbWVvdXQnLFxuICAgIEluaXRfTWFuaWZlc3RNaXNzaW5nOiAnTWFuaWZlc3Qgbm90IHNldC4gUmVhZCBtb3JlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS90cmV6b3IvdHJlem9yLXN1aXRlL2Jsb2IvZGV2ZWxvcC9kb2NzL3BhY2thZ2VzL2Nvbm5lY3QvaW5kZXgubWQnLFxuICAgIFBvcHVwX0Nvbm5lY3Rpb25NaXNzaW5nOiAnVW5hYmxlIHRvIGVzdGFibGlzaCBjb25uZWN0aW9uIHdpdGggaWZyYW1lJyxcbiAgICBUcmFuc3BvcnRfTWlzc2luZzogJ1RyYW5zcG9ydCBpcyBtaXNzaW5nJyxcbiAgICBUcmFuc3BvcnRfSW52YWxpZFByb3RvYnVmOiAnJyxcbiAgICBNZXRob2RfSW52YWxpZFBhY2thZ2U6ICdUaGlzIHBhY2thZ2UgaXMgbm90IHN1aXRhYmxlIHRvIHdvcmsgd2l0aCBicm93c2VyLiBVc2UgQHRyZXpvci9jb25uZWN0LXdlYiBwYWNrYWdlIGluc3RlYWQnLFxuICAgIE1ldGhvZF9JbnZhbGlkUGFyYW1ldGVyOiAnJyxcbiAgICBNZXRob2RfTm90QWxsb3dlZDogJ01ldGhvZCBub3QgYWxsb3dlZCBmb3IgdGhpcyBjb25maWd1cmF0aW9uJyxcbiAgICBNZXRob2RfUGVybWlzc2lvbnNOb3RHcmFudGVkOiAnUGVybWlzc2lvbnMgbm90IGdyYW50ZWQnLFxuICAgIE1ldGhvZF9DYW5jZWw6ICdDYW5jZWxsZWQnLFxuICAgIE1ldGhvZF9JbnRlcnJ1cHRlZDogJ1BvcHVwIGNsb3NlZCcsXG4gICAgTWV0aG9kX1Vua25vd25Db2luOiAnQ29pbiBub3QgZm91bmQnLFxuICAgIE1ldGhvZF9BZGRyZXNzTm90TWF0Y2g6ICdBZGRyZXNzZXMgZG8gbm90IG1hdGNoJyxcbiAgICBNZXRob2RfRmlybXdhcmVVcGRhdGVfRG93bmxvYWRGYWlsZWQ6ICdGYWlsZWQgdG8gZG93bmxvYWQgZmlybXdhcmUgYmluYXJ5JyxcbiAgICBNZXRob2RfRGlzY292ZXJ5X0J1bmRsZUV4Y2VwdGlvbjogJycsXG4gICAgTWV0aG9kX092ZXJyaWRlOiAnb3ZlcnJpZGUnLFxuICAgIE1ldGhvZF9Ob1Jlc3BvbnNlOiAnQ2FsbCByZXNvbHZlZCB3aXRob3V0IHJlc3BvbnNlJyxcbiAgICBCYWNrZW5kX05vdFN1cHBvcnRlZDogJ0Jsb2NrY2hhaW5MaW5rIHNldHRpbmdzIG5vdCBmb3VuZCBpbiBjb2lucy5qc29uJyxcbiAgICBCYWNrZW5kX1dvcmtlck1pc3Npbmc6ICcnLFxuICAgIEJhY2tlbmRfRGlzY29ubmVjdGVkOiAnQmFja2VuZCBkaXNjb25uZWN0ZWQnLFxuICAgIEJhY2tlbmRfSW52YWxpZDogJ0ludmFsaWQgYmFja2VuZCcsXG4gICAgQmFja2VuZF9FcnJvcjogJycsXG4gICAgUnVudGltZTogJycsXG4gICAgRGV2aWNlX05vdEZvdW5kOiAnRGV2aWNlIG5vdCBmb3VuZCcsXG4gICAgRGV2aWNlX0luaXRpYWxpemVGYWlsZWQ6ICcnLFxuICAgIERldmljZV9Gd0V4Y2VwdGlvbjogJycsXG4gICAgRGV2aWNlX01vZGVFeGNlcHRpb246ICcnLFxuICAgIERldmljZV9EaXNjb25uZWN0ZWQ6ICdEZXZpY2UgZGlzY29ubmVjdGVkJyxcbiAgICBEZXZpY2VfVXNlZEVsc2V3aGVyZTogJ0RldmljZSBpcyB1c2VkIGluIGFub3RoZXIgd2luZG93JyxcbiAgICBEZXZpY2VfSW52YWxpZFN0YXRlOiAnUGFzc3BocmFzZSBpcyBpbmNvcnJlY3QnLFxuICAgIERldmljZV9DYWxsSW5Qcm9ncmVzczogJ0RldmljZSBjYWxsIGluIHByb2dyZXNzJyxcbn07XG5jbGFzcyBUcmV6b3JFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcihjb2RlLCBtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIH1cbn1cbmV4cG9ydHMuVHJlem9yRXJyb3IgPSBUcmV6b3JFcnJvcjtcbmNvbnN0IFR5cGVkRXJyb3IgPSAoaWQsIG1lc3NhZ2UpID0+IG5ldyBUcmV6b3JFcnJvcihpZCwgbWVzc2FnZSB8fCBleHBvcnRzLkVSUk9SX0NPREVTW2lkXSk7XG5leHBvcnRzLlR5cGVkRXJyb3IgPSBUeXBlZEVycm9yO1xuY29uc3Qgc2VyaWFsaXplRXJyb3IgPSAocGF5bG9hZCkgPT4ge1xuICAgIGlmIChwYXlsb2FkICYmIHBheWxvYWQuZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICByZXR1cm4geyBlcnJvcjogcGF5bG9hZC5lcnJvci5tZXNzYWdlLCBjb2RlOiBwYXlsb2FkLmVycm9yLmNvZGUgfTtcbiAgICB9XG4gICAgcmV0dXJuIHBheWxvYWQ7XG59O1xuZXhwb3J0cy5zZXJpYWxpemVFcnJvciA9IHNlcmlhbGl6ZUVycm9yO1xuZXhwb3J0cy5MSUJVU0JfRVJST1JfTUVTU0FHRSA9ICdMSUJVU0JfRVJST1InO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/constants/errors.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/constants/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/constants/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PROTO = exports.NEM = exports.CARDANO = exports.NETWORK = exports.ERRORS = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nexports.ERRORS = tslib_1.__importStar(__webpack_require__(/*! ./errors */ \"./node_modules/@trezor/connect/lib/constants/errors.js\"));\nexports.NETWORK = tslib_1.__importStar(__webpack_require__(/*! ./network */ \"./node_modules/@trezor/connect/lib/constants/network.js\"));\nexports.CARDANO = tslib_1.__importStar(__webpack_require__(/*! ./cardano */ \"./node_modules/@trezor/connect/lib/constants/cardano.js\"));\nexports.NEM = tslib_1.__importStar(__webpack_require__(/*! ./nem */ \"./node_modules/@trezor/connect/lib/constants/nem.js\"));\nvar protobuf_1 = __webpack_require__(/*! @trezor/protobuf */ \"./node_modules/@trezor/protobuf/lib/index.js\");\nObject.defineProperty(exports, \"PROTO\", ({ enumerable: true, get: function () { return protobuf_1.MessagesSchema; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxHQUFHLFdBQVcsR0FBRyxlQUFlLEdBQUcsZUFBZSxHQUFHLGNBQWM7QUFDaEYsZ0JBQWdCLG1CQUFPLENBQUMsaURBQU87QUFDL0IsY0FBYyx3QkFBd0IsbUJBQU8sQ0FBQyx3RUFBVTtBQUN4RCxlQUFlLHdCQUF3QixtQkFBTyxDQUFDLDBFQUFXO0FBQzFELGVBQWUsd0JBQXdCLG1CQUFPLENBQUMsMEVBQVc7QUFDMUQsV0FBVyx3QkFBd0IsbUJBQU8sQ0FBQyxrRUFBTztBQUNsRCxpQkFBaUIsbUJBQU8sQ0FBQyxzRUFBa0I7QUFDM0MseUNBQXdDLEVBQUUscUNBQXFDLHFDQUFxQyxFQUFDO0FBQ3JIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2NvbnN0YW50cy9pbmRleC5qcz82YTkzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QUk9UTyA9IGV4cG9ydHMuTkVNID0gZXhwb3J0cy5DQVJEQU5PID0gZXhwb3J0cy5ORVRXT1JLID0gZXhwb3J0cy5FUlJPUlMgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuZXhwb3J0cy5FUlJPUlMgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9lcnJvcnNcIikpO1xuZXhwb3J0cy5ORVRXT1JLID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vbmV0d29ya1wiKSk7XG5leHBvcnRzLkNBUkRBTk8gPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9jYXJkYW5vXCIpKTtcbmV4cG9ydHMuTkVNID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vbmVtXCIpKTtcbnZhciBwcm90b2J1Zl8xID0gcmVxdWlyZShcIkB0cmV6b3IvcHJvdG9idWZcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQUk9UT1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcHJvdG9idWZfMS5NZXNzYWdlc1NjaGVtYTsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/constants/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/constants/nem.js":
/*!***********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/constants/nem.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EnumTxVersion = exports.TxVersion = exports.EnumTxType = exports.TxType = exports.EnumNetworks = exports.Networks = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nvar Networks;\n(function (Networks) {\n    Networks[Networks[\"mainnet\"] = 104] = \"mainnet\";\n    Networks[Networks[\"testnet\"] = 152] = \"testnet\";\n    Networks[Networks[\"mijin\"] = 96] = \"mijin\";\n})(Networks || (exports.Networks = Networks = {}));\nexports.EnumNetworks = schema_utils_1.Type.Enum(Networks);\nvar TxType;\n(function (TxType) {\n    TxType[TxType[\"TRANSFER\"] = 257] = \"TRANSFER\";\n    TxType[TxType[\"COSIGNING\"] = 258] = \"COSIGNING\";\n    TxType[TxType[\"IMPORTANCE_TRANSFER\"] = 2049] = \"IMPORTANCE_TRANSFER\";\n    TxType[TxType[\"AGGREGATE_MODIFICATION\"] = 4097] = \"AGGREGATE_MODIFICATION\";\n    TxType[TxType[\"MULTISIG_SIGNATURE\"] = 4098] = \"MULTISIG_SIGNATURE\";\n    TxType[TxType[\"MULTISIG\"] = 4100] = \"MULTISIG\";\n    TxType[TxType[\"PROVISION_NAMESPACE\"] = 8193] = \"PROVISION_NAMESPACE\";\n    TxType[TxType[\"MOSAIC_CREATION\"] = 16385] = \"MOSAIC_CREATION\";\n    TxType[TxType[\"SUPPLY_CHANGE\"] = 16386] = \"SUPPLY_CHANGE\";\n})(TxType || (exports.TxType = TxType = {}));\nexports.EnumTxType = schema_utils_1.Type.Enum(TxType);\nvar TxVersion;\n(function (TxVersion) {\n    TxVersion[TxVersion[\"mainnet\"] = 1744830464] = \"mainnet\";\n    TxVersion[TxVersion[\"testnet\"] = -1744830464] = \"testnet\";\n    TxVersion[TxVersion[\"mijin\"] = 1610612736] = \"mijin\";\n})(TxVersion || (exports.TxVersion = TxVersion = {}));\nexports.EnumTxVersion = schema_utils_1.Type.Enum(TxVersion);\n//# sourceMappingURL=nem.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvbmVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLGlCQUFpQixHQUFHLGtCQUFrQixHQUFHLGNBQWMsR0FBRyxvQkFBb0IsR0FBRyxnQkFBZ0I7QUFDekgsdUJBQXVCLG1CQUFPLENBQUMsOEVBQXNCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGVBQWUsZ0JBQWdCLGdCQUFnQjtBQUNoRCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsYUFBYSxjQUFjLGNBQWM7QUFDMUMsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdCQUFnQixpQkFBaUIsaUJBQWlCO0FBQ25ELHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvbmVtLmpzP2E3OTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkVudW1UeFZlcnNpb24gPSBleHBvcnRzLlR4VmVyc2lvbiA9IGV4cG9ydHMuRW51bVR4VHlwZSA9IGV4cG9ydHMuVHhUeXBlID0gZXhwb3J0cy5FbnVtTmV0d29ya3MgPSBleHBvcnRzLk5ldHdvcmtzID0gdm9pZCAwO1xuY29uc3Qgc2NoZW1hX3V0aWxzXzEgPSByZXF1aXJlKFwiQHRyZXpvci9zY2hlbWEtdXRpbHNcIik7XG52YXIgTmV0d29ya3M7XG4oZnVuY3Rpb24gKE5ldHdvcmtzKSB7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJtYWlubmV0XCJdID0gMTA0XSA9IFwibWFpbm5ldFwiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1widGVzdG5ldFwiXSA9IDE1Ml0gPSBcInRlc3RuZXRcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcIm1pamluXCJdID0gOTZdID0gXCJtaWppblwiO1xufSkoTmV0d29ya3MgfHwgKGV4cG9ydHMuTmV0d29ya3MgPSBOZXR3b3JrcyA9IHt9KSk7XG5leHBvcnRzLkVudW1OZXR3b3JrcyA9IHNjaGVtYV91dGlsc18xLlR5cGUuRW51bShOZXR3b3Jrcyk7XG52YXIgVHhUeXBlO1xuKGZ1bmN0aW9uIChUeFR5cGUpIHtcbiAgICBUeFR5cGVbVHhUeXBlW1wiVFJBTlNGRVJcIl0gPSAyNTddID0gXCJUUkFOU0ZFUlwiO1xuICAgIFR4VHlwZVtUeFR5cGVbXCJDT1NJR05JTkdcIl0gPSAyNThdID0gXCJDT1NJR05JTkdcIjtcbiAgICBUeFR5cGVbVHhUeXBlW1wiSU1QT1JUQU5DRV9UUkFOU0ZFUlwiXSA9IDIwNDldID0gXCJJTVBPUlRBTkNFX1RSQU5TRkVSXCI7XG4gICAgVHhUeXBlW1R4VHlwZVtcIkFHR1JFR0FURV9NT0RJRklDQVRJT05cIl0gPSA0MDk3XSA9IFwiQUdHUkVHQVRFX01PRElGSUNBVElPTlwiO1xuICAgIFR4VHlwZVtUeFR5cGVbXCJNVUxUSVNJR19TSUdOQVRVUkVcIl0gPSA0MDk4XSA9IFwiTVVMVElTSUdfU0lHTkFUVVJFXCI7XG4gICAgVHhUeXBlW1R4VHlwZVtcIk1VTFRJU0lHXCJdID0gNDEwMF0gPSBcIk1VTFRJU0lHXCI7XG4gICAgVHhUeXBlW1R4VHlwZVtcIlBST1ZJU0lPTl9OQU1FU1BBQ0VcIl0gPSA4MTkzXSA9IFwiUFJPVklTSU9OX05BTUVTUEFDRVwiO1xuICAgIFR4VHlwZVtUeFR5cGVbXCJNT1NBSUNfQ1JFQVRJT05cIl0gPSAxNjM4NV0gPSBcIk1PU0FJQ19DUkVBVElPTlwiO1xuICAgIFR4VHlwZVtUeFR5cGVbXCJTVVBQTFlfQ0hBTkdFXCJdID0gMTYzODZdID0gXCJTVVBQTFlfQ0hBTkdFXCI7XG59KShUeFR5cGUgfHwgKGV4cG9ydHMuVHhUeXBlID0gVHhUeXBlID0ge30pKTtcbmV4cG9ydHMuRW51bVR4VHlwZSA9IHNjaGVtYV91dGlsc18xLlR5cGUuRW51bShUeFR5cGUpO1xudmFyIFR4VmVyc2lvbjtcbihmdW5jdGlvbiAoVHhWZXJzaW9uKSB7XG4gICAgVHhWZXJzaW9uW1R4VmVyc2lvbltcIm1haW5uZXRcIl0gPSAxNzQ0ODMwNDY0XSA9IFwibWFpbm5ldFwiO1xuICAgIFR4VmVyc2lvbltUeFZlcnNpb25bXCJ0ZXN0bmV0XCJdID0gLTE3NDQ4MzA0NjRdID0gXCJ0ZXN0bmV0XCI7XG4gICAgVHhWZXJzaW9uW1R4VmVyc2lvbltcIm1pamluXCJdID0gMTYxMDYxMjczNl0gPSBcIm1pamluXCI7XG59KShUeFZlcnNpb24gfHwgKGV4cG9ydHMuVHhWZXJzaW9uID0gVHhWZXJzaW9uID0ge30pKTtcbmV4cG9ydHMuRW51bVR4VmVyc2lvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuRW51bShUeFZlcnNpb24pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmVtLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/constants/nem.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/constants/network.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/constants/network.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MODULES = exports.TYPES = void 0;\nexports.TYPES = {\n    bitcoin: 'Bitcoin',\n    ethereum: 'Ethereum',\n    eos: 'Eos',\n    nem: 'NEM',\n    stellar: 'Stellar',\n    cardano: 'Cardano',\n    ripple: 'Ripple',\n    tezos: 'Tezos',\n    binance: 'Binance',\n    solana: 'Solana',\n};\nexports.MODULES = [\n    'binance',\n    'cardano',\n    'eos',\n    'ethereum',\n    'nem',\n    'ripple',\n    'solana',\n    'stellar',\n    'tezos',\n];\n//# sourceMappingURL=network.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvbmV0d29yay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLEdBQUcsYUFBYTtBQUMvQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2NvbnN0YW50cy9uZXR3b3JrLmpzP2RhMmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1PRFVMRVMgPSBleHBvcnRzLlRZUEVTID0gdm9pZCAwO1xuZXhwb3J0cy5UWVBFUyA9IHtcbiAgICBiaXRjb2luOiAnQml0Y29pbicsXG4gICAgZXRoZXJldW06ICdFdGhlcmV1bScsXG4gICAgZW9zOiAnRW9zJyxcbiAgICBuZW06ICdORU0nLFxuICAgIHN0ZWxsYXI6ICdTdGVsbGFyJyxcbiAgICBjYXJkYW5vOiAnQ2FyZGFubycsXG4gICAgcmlwcGxlOiAnUmlwcGxlJyxcbiAgICB0ZXpvczogJ1Rlem9zJyxcbiAgICBiaW5hbmNlOiAnQmluYW5jZScsXG4gICAgc29sYW5hOiAnU29sYW5hJyxcbn07XG5leHBvcnRzLk1PRFVMRVMgPSBbXG4gICAgJ2JpbmFuY2UnLFxuICAgICdjYXJkYW5vJyxcbiAgICAnZW9zJyxcbiAgICAnZXRoZXJldW0nLFxuICAgICduZW0nLFxuICAgICdyaXBwbGUnLFxuICAgICdzb2xhbmEnLFxuICAgICdzdGVsbGFyJyxcbiAgICAndGV6b3MnLFxuXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5ldHdvcmsuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/constants/network.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/data/config.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/data/config.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.config = void 0;\nconst constants_1 = __webpack_require__(/*! @trezor/transport/lib/constants */ \"./node_modules/@trezor/transport/lib/constants.js\");\nexports.config = {\n    webusb: constants_1.TREZOR_USB_DESCRIPTORS,\n    whitelist: [\n        { origin: 'chrome-extension://imloifkgjagghnncjkhggdhalmcnfklk', priority: 1 },\n        { origin: 'chrome-extension://niebkpllfhmpfbffbfifagfgoamhpflf', priority: 1 },\n        { origin: 'file://', priority: 2 },\n        { origin: 'trezor.io', priority: 0 },\n        { origin: 'sldev.cz', priority: 0 },\n        { origin: 'localhost', priority: 0 },\n        { origin: 'trezoriovpjcahpzkrewelclulmszwbqpzmzgub37gbcjlvluxtruqad.onion', priority: 0 },\n    ],\n    management: [{ origin: 'trezor.io' }, { origin: 'sldev.cz' }, { origin: 'localhost' }],\n    knownHosts: [\n        {\n            origin: 'imloifkgjagghnncjkhggdhalmcnfklk',\n            label: 'Trezor Password Manager (Develop)',\n            icon: '',\n        },\n        { origin: 'niebkpllfhmpfbffbfifagfgoamhpflf', label: 'Trezor Password Manager', icon: '' },\n        {\n            origin: 'mnpfhpndmjholfdlhpkjfmjkgppmodaf',\n            label: 'MetaMask',\n            icon: '',\n        },\n        {\n            origin: 'webextension@metamask.io',\n            label: 'MetaMask',\n            icon: '',\n        },\n        {\n            origin: 'nkbihfbeogaeaoehlefnkodbefgpgknn',\n            label: 'MetaMask',\n            icon: '',\n        },\n        { origin: 'file://', label: ' ', icon: '' },\n    ],\n    onionDomains: {\n        'trezor.io': 'trezoriovpjcahpzkrewelclulmszwbqpzmzgub37gbcjlvluxtruqad.onion',\n    },\n    assets: [\n        {\n            name: 'coins',\n            url: './data/coins.json',\n        },\n        {\n            name: 'coinsEth',\n            url: './data/coins-eth.json',\n        },\n        {\n            name: 'bridge',\n            url: './data/bridge/releases.json',\n        },\n        {\n            name: 'firmware-t1b1',\n            url: './data/firmware/t1b1/releases.json',\n        },\n        {\n            name: 'firmware-t2t1',\n            url: './data/firmware/t2t1/releases.json',\n        },\n        {\n            name: 'firmware-t2b1',\n            url: './data/firmware/t2b1/releases.json',\n        },\n    ],\n    messages: './data/messages/messages.json',\n    supportedBrowsers: {\n        chrome: {\n            version: 59,\n            download: 'https://www.google.com/chrome/',\n            update: 'https://support.google.com/chrome/answer/95414',\n        },\n        chromium: {\n            version: 59,\n            download: 'https://www.chromium.org/',\n            update: 'https://www.chromium.org/',\n        },\n        electron: {\n            version: 0,\n            download: 'https://www.electronjs.org/',\n            update: 'https://www.electronjs.org/',\n        },\n        firefox: {\n            version: 54,\n            download: 'https://www.mozilla.org/en-US/firefox/new/',\n            update: 'https://support.mozilla.org/en-US/kb/update-firefox-latest-version',\n        },\n    },\n    supportedFirmware: [\n        {\n            coin: ['xrp', 'txrp'],\n            methods: ['getAccountInfo'],\n            min: { T1B1: '0', T2T1: '2.1.0' },\n            max: undefined,\n            comment: [\n                \"Since firmware 2.1.0 there is a new protobuf field 'destination_tag' in RippleSignTx\",\n            ],\n        },\n        {\n            coin: ['bnb'],\n            min: { T1B1: '1.9.0', T2T1: '2.3.0' },\n            comment: [\n                'There were protobuf backwards incompatible changes with introduction of 1.9.0/2.3.0 firmwares',\n            ],\n        },\n        {\n            coin: ['eth', 'tsep', 'tgor', 'thol'],\n            min: { T1B1: '1.8.0', T2T1: '2.1.0' },\n            comment: ['There were protobuf backwards incompatible changes.'],\n        },\n        {\n            coin: ['ada', 'tada'],\n            min: { T1B1: '0', T2T1: '2.4.3' },\n            comment: ['Since 2.4.3 there is initialize.derive_cardano message'],\n        },\n        {\n            methods: ['rippleGetAddress', 'rippleSignTransaction'],\n            min: { T1B1: '0', T2T1: '2.1.0' },\n            comment: [\n                \"Since firmware 2.1.0 there is a new protobuf field 'destination_tag' in RippleSignTx\",\n            ],\n        },\n        {\n            methods: ['cardanoGetAddress', 'cardanoGetPublicKey'],\n            min: { T1B1: '0', T2T1: '2.3.2' },\n            comment: ['Shelley fork support since firmware 2.3.2'],\n        },\n        {\n            methods: ['cardanoSignTransaction'],\n            min: { T1B1: '0', T2T1: '2.4.2' },\n            comment: ['Non-streamed signing no longer supported'],\n        },\n        {\n            methods: ['cardanoGetNativeScriptHash'],\n            min: { T1B1: '0', T2T1: '2.4.3' },\n            comment: ['Cardano GetNativeScriptHash call added in 2.4.3'],\n        },\n        {\n            methods: ['tezosSignTransaction'],\n            min: { T1B1: '0', T2T1: '2.1.8' },\n            comment: [\n                'Since 2.1.8 there are new protobuf fields in tezos transaction (Babylon fork)',\n            ],\n        },\n        {\n            methods: ['stellarSignTransaction'],\n            min: { T1B1: '1.9.0', T2T1: '2.3.0' },\n            comment: [\n                'There were protobuf backwards incompatible changes with introduction of 1.9.0/2.3.0 firmwares',\n            ],\n        },\n        {\n            capabilities: ['replaceTransaction', 'amountUnit'],\n            min: { T1B1: '1.9.4', T2T1: '2.3.5' },\n            comment: ['new sign tx process since 1.9.4/2.3.5'],\n        },\n        {\n            capabilities: ['decreaseOutput'],\n            min: { T1B1: '1.10.0', T2T1: '2.4.0' },\n            comment: ['allow reduce output in RBF transaction since 1.10.0/2.4.0'],\n        },\n        {\n            capabilities: ['eip1559'],\n            min: { T1B1: '1.10.4', T2T1: '2.4.2' },\n            comment: ['new eth transaction pricing mechanism (EIP1559) since 1.10.4/2.4.2'],\n        },\n        {\n            capabilities: ['taproot', 'signMessageNoScriptType'],\n            min: { T1B1: '1.10.4', T2T1: '2.4.3' },\n            comment: [\n                'new btc accounts taproot since 1.10.4/2.4.3 (BTC + TEST only)',\n                'SignMessage with no_script_type support',\n            ],\n        },\n        {\n            coin: ['dcr', 'tdcr'],\n            methods: ['signTransaction'],\n            min: { T1B1: '1.10.1', T2T1: '2.4.0' },\n            comment: [''],\n        },\n        {\n            methods: ['ethereumSignTypedData'],\n            min: { T1B1: '1.10.5', T2T1: '2.4.3' },\n            comment: ['EIP-712 typed signing support added in 1.10.5/2.4.3'],\n        },\n        {\n            capabilities: ['eip712-domain-only'],\n            min: { T1B1: '1.10.6', T2T1: '2.4.4' },\n            comment: ['EIP-712 domain-only signing, when primaryType=EIP712Domain'],\n        },\n        {\n            capabilities: ['coinjoin'],\n            methods: [\n                'authorizeCoinjoin',\n                'cancelCoinjoinAuthorization',\n                'getOwnershipId',\n                'getOwnershipProof',\n                'setBusy',\n                'unlockPath',\n            ],\n            min: { T1B1: '1.12.1', T2T1: '2.5.3' },\n        },\n        {\n            methods: ['showDeviceTutorial', 'authenticateDevice'],\n            min: { T1B1: '0', T2T1: '0', T2B1: '2.6.1' },\n            comment: ['Only on T2B1'],\n        },\n        {\n            methods: ['rebootToBootloader'],\n            min: { T1B1: '1.10.0', T2T1: '2.6.0' },\n        },\n        {\n            methods: ['getFirmwareHash'],\n            min: { T1B1: '1.11.1', T2T1: '2.5.1' },\n        },\n        {\n            methods: ['solanaGetPublicKey', 'solanaGetAddress', 'solanaSignTransaction'],\n            min: { T1B1: '0', T2T1: '2.6.4', T2B1: '2.6.4' },\n        },\n        {\n            capabilities: ['chunkify'],\n            min: { T1B1: '0', T2T1: '2.6.3', T2B1: '2.6.3' },\n            comment: [\n                \"Since firmware 2.6.3 there is a new protobuf field 'chunkify' in almost all getAddress and signTx methods\",\n            ],\n        },\n    ],\n};\n//# sourceMappingURL=config.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9kYXRhL2NvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Qsb0JBQW9CLG1CQUFPLENBQUMsMEZBQWlDO0FBQzdELGNBQWM7QUFDZDtBQUNBO0FBQ0EsVUFBVSw0RUFBNEU7QUFDdEYsVUFBVSw0RUFBNEU7QUFDdEYsVUFBVSxnQ0FBZ0M7QUFDMUMsVUFBVSxrQ0FBa0M7QUFDNUMsVUFBVSxpQ0FBaUM7QUFDM0MsVUFBVSxrQ0FBa0M7QUFDNUMsVUFBVSx1RkFBdUY7QUFDakc7QUFDQSxtQkFBbUIscUJBQXFCLElBQUksb0JBQW9CLElBQUkscUJBQXFCO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsVUFBVSx3RkFBd0Y7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsVUFBVSx5Q0FBeUM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDBCQUEwQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsbUJBQW1CLDhCQUE4QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLG1CQUFtQiw4QkFBOEI7QUFDakQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLG1CQUFtQiwwQkFBMEI7QUFDN0M7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLG1CQUFtQiwwQkFBMEI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxtQkFBbUIsMEJBQTBCO0FBQzdDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxtQkFBbUIsMEJBQTBCO0FBQzdDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxtQkFBbUIsMEJBQTBCO0FBQzdDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxtQkFBbUIsMEJBQTBCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsbUJBQW1CLDhCQUE4QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLG1CQUFtQiw4QkFBOEI7QUFDakQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLG1CQUFtQiwrQkFBK0I7QUFDbEQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLG1CQUFtQiwrQkFBK0I7QUFDbEQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLG1CQUFtQiwrQkFBK0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLCtCQUErQjtBQUNsRDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsbUJBQW1CLCtCQUErQjtBQUNsRDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsbUJBQW1CLCtCQUErQjtBQUNsRDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwrQkFBK0I7QUFDbEQsU0FBUztBQUNUO0FBQ0E7QUFDQSxtQkFBbUIscUNBQXFDO0FBQ3hEO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxtQkFBbUIsK0JBQStCO0FBQ2xELFNBQVM7QUFDVDtBQUNBO0FBQ0EsbUJBQW1CLCtCQUErQjtBQUNsRCxTQUFTO0FBQ1Q7QUFDQTtBQUNBLG1CQUFtQix5Q0FBeUM7QUFDNUQsU0FBUztBQUNUO0FBQ0E7QUFDQSxtQkFBbUIseUNBQXlDO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvZGF0YS9jb25maWcuanM/OWY2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29uZmlnID0gdm9pZCAwO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiQHRyZXpvci90cmFuc3BvcnQvbGliL2NvbnN0YW50c1wiKTtcbmV4cG9ydHMuY29uZmlnID0ge1xuICAgIHdlYnVzYjogY29uc3RhbnRzXzEuVFJFWk9SX1VTQl9ERVNDUklQVE9SUyxcbiAgICB3aGl0ZWxpc3Q6IFtcbiAgICAgICAgeyBvcmlnaW46ICdjaHJvbWUtZXh0ZW5zaW9uOi8vaW1sb2lma2dqYWdnaG5uY2praGdnZGhhbG1jbmZrbGsnLCBwcmlvcml0eTogMSB9LFxuICAgICAgICB7IG9yaWdpbjogJ2Nocm9tZS1leHRlbnNpb246Ly9uaWVia3BsbGZobXBmYmZmYmZpZmFnZmdvYW1ocGZsZicsIHByaW9yaXR5OiAxIH0sXG4gICAgICAgIHsgb3JpZ2luOiAnZmlsZTovLycsIHByaW9yaXR5OiAyIH0sXG4gICAgICAgIHsgb3JpZ2luOiAndHJlem9yLmlvJywgcHJpb3JpdHk6IDAgfSxcbiAgICAgICAgeyBvcmlnaW46ICdzbGRldi5jeicsIHByaW9yaXR5OiAwIH0sXG4gICAgICAgIHsgb3JpZ2luOiAnbG9jYWxob3N0JywgcHJpb3JpdHk6IDAgfSxcbiAgICAgICAgeyBvcmlnaW46ICd0cmV6b3Jpb3ZwamNhaHB6a3Jld2VsY2x1bG1zendicXB6bXpndWIzN2diY2psdmx1eHRydXFhZC5vbmlvbicsIHByaW9yaXR5OiAwIH0sXG4gICAgXSxcbiAgICBtYW5hZ2VtZW50OiBbeyBvcmlnaW46ICd0cmV6b3IuaW8nIH0sIHsgb3JpZ2luOiAnc2xkZXYuY3onIH0sIHsgb3JpZ2luOiAnbG9jYWxob3N0JyB9XSxcbiAgICBrbm93bkhvc3RzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIG9yaWdpbjogJ2ltbG9pZmtnamFnZ2hubmNqa2hnZ2RoYWxtY25ma2xrJyxcbiAgICAgICAgICAgIGxhYmVsOiAnVHJlem9yIFBhc3N3b3JkIE1hbmFnZXIgKERldmVsb3ApJyxcbiAgICAgICAgICAgIGljb246ICcnLFxuICAgICAgICB9LFxuICAgICAgICB7IG9yaWdpbjogJ25pZWJrcGxsZmhtcGZiZmZiZmlmYWdmZ29hbWhwZmxmJywgbGFiZWw6ICdUcmV6b3IgUGFzc3dvcmQgTWFuYWdlcicsIGljb246ICcnIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG9yaWdpbjogJ21ucGZocG5kbWpob2xmZGxocGtqZm1qa2dwcG1vZGFmJyxcbiAgICAgICAgICAgIGxhYmVsOiAnTWV0YU1hc2snLFxuICAgICAgICAgICAgaWNvbjogJycsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG9yaWdpbjogJ3dlYmV4dGVuc2lvbkBtZXRhbWFzay5pbycsXG4gICAgICAgICAgICBsYWJlbDogJ01ldGFNYXNrJyxcbiAgICAgICAgICAgIGljb246ICcnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBvcmlnaW46ICdua2JpaGZiZW9nYWVhb2VobGVmbmtvZGJlZmdwZ2tubicsXG4gICAgICAgICAgICBsYWJlbDogJ01ldGFNYXNrJyxcbiAgICAgICAgICAgIGljb246ICcnLFxuICAgICAgICB9LFxuICAgICAgICB7IG9yaWdpbjogJ2ZpbGU6Ly8nLCBsYWJlbDogJyAnLCBpY29uOiAnJyB9LFxuICAgIF0sXG4gICAgb25pb25Eb21haW5zOiB7XG4gICAgICAgICd0cmV6b3IuaW8nOiAndHJlem9yaW92cGpjYWhwemtyZXdlbGNsdWxtc3p3YnFwem16Z3ViMzdnYmNqbHZsdXh0cnVxYWQub25pb24nLFxuICAgIH0sXG4gICAgYXNzZXRzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdjb2lucycsXG4gICAgICAgICAgICB1cmw6ICcuL2RhdGEvY29pbnMuanNvbicsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdjb2luc0V0aCcsXG4gICAgICAgICAgICB1cmw6ICcuL2RhdGEvY29pbnMtZXRoLmpzb24nLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnYnJpZGdlJyxcbiAgICAgICAgICAgIHVybDogJy4vZGF0YS9icmlkZ2UvcmVsZWFzZXMuanNvbicsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdmaXJtd2FyZS10MWIxJyxcbiAgICAgICAgICAgIHVybDogJy4vZGF0YS9maXJtd2FyZS90MWIxL3JlbGVhc2VzLmpzb24nLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnZmlybXdhcmUtdDJ0MScsXG4gICAgICAgICAgICB1cmw6ICcuL2RhdGEvZmlybXdhcmUvdDJ0MS9yZWxlYXNlcy5qc29uJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ2Zpcm13YXJlLXQyYjEnLFxuICAgICAgICAgICAgdXJsOiAnLi9kYXRhL2Zpcm13YXJlL3QyYjEvcmVsZWFzZXMuanNvbicsXG4gICAgICAgIH0sXG4gICAgXSxcbiAgICBtZXNzYWdlczogJy4vZGF0YS9tZXNzYWdlcy9tZXNzYWdlcy5qc29uJyxcbiAgICBzdXBwb3J0ZWRCcm93c2Vyczoge1xuICAgICAgICBjaHJvbWU6IHtcbiAgICAgICAgICAgIHZlcnNpb246IDU5LFxuICAgICAgICAgICAgZG93bmxvYWQ6ICdodHRwczovL3d3dy5nb29nbGUuY29tL2Nocm9tZS8nLFxuICAgICAgICAgICAgdXBkYXRlOiAnaHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vY2hyb21lL2Fuc3dlci85NTQxNCcsXG4gICAgICAgIH0sXG4gICAgICAgIGNocm9taXVtOiB7XG4gICAgICAgICAgICB2ZXJzaW9uOiA1OSxcbiAgICAgICAgICAgIGRvd25sb2FkOiAnaHR0cHM6Ly93d3cuY2hyb21pdW0ub3JnLycsXG4gICAgICAgICAgICB1cGRhdGU6ICdodHRwczovL3d3dy5jaHJvbWl1bS5vcmcvJyxcbiAgICAgICAgfSxcbiAgICAgICAgZWxlY3Ryb246IHtcbiAgICAgICAgICAgIHZlcnNpb246IDAsXG4gICAgICAgICAgICBkb3dubG9hZDogJ2h0dHBzOi8vd3d3LmVsZWN0cm9uanMub3JnLycsXG4gICAgICAgICAgICB1cGRhdGU6ICdodHRwczovL3d3dy5lbGVjdHJvbmpzLm9yZy8nLFxuICAgICAgICB9LFxuICAgICAgICBmaXJlZm94OiB7XG4gICAgICAgICAgICB2ZXJzaW9uOiA1NCxcbiAgICAgICAgICAgIGRvd25sb2FkOiAnaHR0cHM6Ly93d3cubW96aWxsYS5vcmcvZW4tVVMvZmlyZWZveC9uZXcvJyxcbiAgICAgICAgICAgIHVwZGF0ZTogJ2h0dHBzOi8vc3VwcG9ydC5tb3ppbGxhLm9yZy9lbi1VUy9rYi91cGRhdGUtZmlyZWZveC1sYXRlc3QtdmVyc2lvbicsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBzdXBwb3J0ZWRGaXJtd2FyZTogW1xuICAgICAgICB7XG4gICAgICAgICAgICBjb2luOiBbJ3hycCcsICd0eHJwJ10sXG4gICAgICAgICAgICBtZXRob2RzOiBbJ2dldEFjY291bnRJbmZvJ10sXG4gICAgICAgICAgICBtaW46IHsgVDFCMTogJzAnLCBUMlQxOiAnMi4xLjAnIH0sXG4gICAgICAgICAgICBtYXg6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGNvbW1lbnQ6IFtcbiAgICAgICAgICAgICAgICBcIlNpbmNlIGZpcm13YXJlIDIuMS4wIHRoZXJlIGlzIGEgbmV3IHByb3RvYnVmIGZpZWxkICdkZXN0aW5hdGlvbl90YWcnIGluIFJpcHBsZVNpZ25UeFwiLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgY29pbjogWydibmInXSxcbiAgICAgICAgICAgIG1pbjogeyBUMUIxOiAnMS45LjAnLCBUMlQxOiAnMi4zLjAnIH0sXG4gICAgICAgICAgICBjb21tZW50OiBbXG4gICAgICAgICAgICAgICAgJ1RoZXJlIHdlcmUgcHJvdG9idWYgYmFja3dhcmRzIGluY29tcGF0aWJsZSBjaGFuZ2VzIHdpdGggaW50cm9kdWN0aW9uIG9mIDEuOS4wLzIuMy4wIGZpcm13YXJlcycsXG4gICAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBjb2luOiBbJ2V0aCcsICd0c2VwJywgJ3Rnb3InLCAndGhvbCddLFxuICAgICAgICAgICAgbWluOiB7IFQxQjE6ICcxLjguMCcsIFQyVDE6ICcyLjEuMCcgfSxcbiAgICAgICAgICAgIGNvbW1lbnQ6IFsnVGhlcmUgd2VyZSBwcm90b2J1ZiBiYWNrd2FyZHMgaW5jb21wYXRpYmxlIGNoYW5nZXMuJ10sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvaW46IFsnYWRhJywgJ3RhZGEnXSxcbiAgICAgICAgICAgIG1pbjogeyBUMUIxOiAnMCcsIFQyVDE6ICcyLjQuMycgfSxcbiAgICAgICAgICAgIGNvbW1lbnQ6IFsnU2luY2UgMi40LjMgdGhlcmUgaXMgaW5pdGlhbGl6ZS5kZXJpdmVfY2FyZGFubyBtZXNzYWdlJ10sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG1ldGhvZHM6IFsncmlwcGxlR2V0QWRkcmVzcycsICdyaXBwbGVTaWduVHJhbnNhY3Rpb24nXSxcbiAgICAgICAgICAgIG1pbjogeyBUMUIxOiAnMCcsIFQyVDE6ICcyLjEuMCcgfSxcbiAgICAgICAgICAgIGNvbW1lbnQ6IFtcbiAgICAgICAgICAgICAgICBcIlNpbmNlIGZpcm13YXJlIDIuMS4wIHRoZXJlIGlzIGEgbmV3IHByb3RvYnVmIGZpZWxkICdkZXN0aW5hdGlvbl90YWcnIGluIFJpcHBsZVNpZ25UeFwiLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbWV0aG9kczogWydjYXJkYW5vR2V0QWRkcmVzcycsICdjYXJkYW5vR2V0UHVibGljS2V5J10sXG4gICAgICAgICAgICBtaW46IHsgVDFCMTogJzAnLCBUMlQxOiAnMi4zLjInIH0sXG4gICAgICAgICAgICBjb21tZW50OiBbJ1NoZWxsZXkgZm9yayBzdXBwb3J0IHNpbmNlIGZpcm13YXJlIDIuMy4yJ10sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG1ldGhvZHM6IFsnY2FyZGFub1NpZ25UcmFuc2FjdGlvbiddLFxuICAgICAgICAgICAgbWluOiB7IFQxQjE6ICcwJywgVDJUMTogJzIuNC4yJyB9LFxuICAgICAgICAgICAgY29tbWVudDogWydOb24tc3RyZWFtZWQgc2lnbmluZyBubyBsb25nZXIgc3VwcG9ydGVkJ10sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG1ldGhvZHM6IFsnY2FyZGFub0dldE5hdGl2ZVNjcmlwdEhhc2gnXSxcbiAgICAgICAgICAgIG1pbjogeyBUMUIxOiAnMCcsIFQyVDE6ICcyLjQuMycgfSxcbiAgICAgICAgICAgIGNvbW1lbnQ6IFsnQ2FyZGFubyBHZXROYXRpdmVTY3JpcHRIYXNoIGNhbGwgYWRkZWQgaW4gMi40LjMnXSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbWV0aG9kczogWyd0ZXpvc1NpZ25UcmFuc2FjdGlvbiddLFxuICAgICAgICAgICAgbWluOiB7IFQxQjE6ICcwJywgVDJUMTogJzIuMS44JyB9LFxuICAgICAgICAgICAgY29tbWVudDogW1xuICAgICAgICAgICAgICAgICdTaW5jZSAyLjEuOCB0aGVyZSBhcmUgbmV3IHByb3RvYnVmIGZpZWxkcyBpbiB0ZXpvcyB0cmFuc2FjdGlvbiAoQmFieWxvbiBmb3JrKScsXG4gICAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBtZXRob2RzOiBbJ3N0ZWxsYXJTaWduVHJhbnNhY3Rpb24nXSxcbiAgICAgICAgICAgIG1pbjogeyBUMUIxOiAnMS45LjAnLCBUMlQxOiAnMi4zLjAnIH0sXG4gICAgICAgICAgICBjb21tZW50OiBbXG4gICAgICAgICAgICAgICAgJ1RoZXJlIHdlcmUgcHJvdG9idWYgYmFja3dhcmRzIGluY29tcGF0aWJsZSBjaGFuZ2VzIHdpdGggaW50cm9kdWN0aW9uIG9mIDEuOS4wLzIuMy4wIGZpcm13YXJlcycsXG4gICAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBjYXBhYmlsaXRpZXM6IFsncmVwbGFjZVRyYW5zYWN0aW9uJywgJ2Ftb3VudFVuaXQnXSxcbiAgICAgICAgICAgIG1pbjogeyBUMUIxOiAnMS45LjQnLCBUMlQxOiAnMi4zLjUnIH0sXG4gICAgICAgICAgICBjb21tZW50OiBbJ25ldyBzaWduIHR4IHByb2Nlc3Mgc2luY2UgMS45LjQvMi4zLjUnXSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgY2FwYWJpbGl0aWVzOiBbJ2RlY3JlYXNlT3V0cHV0J10sXG4gICAgICAgICAgICBtaW46IHsgVDFCMTogJzEuMTAuMCcsIFQyVDE6ICcyLjQuMCcgfSxcbiAgICAgICAgICAgIGNvbW1lbnQ6IFsnYWxsb3cgcmVkdWNlIG91dHB1dCBpbiBSQkYgdHJhbnNhY3Rpb24gc2luY2UgMS4xMC4wLzIuNC4wJ10sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNhcGFiaWxpdGllczogWydlaXAxNTU5J10sXG4gICAgICAgICAgICBtaW46IHsgVDFCMTogJzEuMTAuNCcsIFQyVDE6ICcyLjQuMicgfSxcbiAgICAgICAgICAgIGNvbW1lbnQ6IFsnbmV3IGV0aCB0cmFuc2FjdGlvbiBwcmljaW5nIG1lY2hhbmlzbSAoRUlQMTU1OSkgc2luY2UgMS4xMC40LzIuNC4yJ10sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNhcGFiaWxpdGllczogWyd0YXByb290JywgJ3NpZ25NZXNzYWdlTm9TY3JpcHRUeXBlJ10sXG4gICAgICAgICAgICBtaW46IHsgVDFCMTogJzEuMTAuNCcsIFQyVDE6ICcyLjQuMycgfSxcbiAgICAgICAgICAgIGNvbW1lbnQ6IFtcbiAgICAgICAgICAgICAgICAnbmV3IGJ0YyBhY2NvdW50cyB0YXByb290IHNpbmNlIDEuMTAuNC8yLjQuMyAoQlRDICsgVEVTVCBvbmx5KScsXG4gICAgICAgICAgICAgICAgJ1NpZ25NZXNzYWdlIHdpdGggbm9fc2NyaXB0X3R5cGUgc3VwcG9ydCcsXG4gICAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBjb2luOiBbJ2RjcicsICd0ZGNyJ10sXG4gICAgICAgICAgICBtZXRob2RzOiBbJ3NpZ25UcmFuc2FjdGlvbiddLFxuICAgICAgICAgICAgbWluOiB7IFQxQjE6ICcxLjEwLjEnLCBUMlQxOiAnMi40LjAnIH0sXG4gICAgICAgICAgICBjb21tZW50OiBbJyddLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBtZXRob2RzOiBbJ2V0aGVyZXVtU2lnblR5cGVkRGF0YSddLFxuICAgICAgICAgICAgbWluOiB7IFQxQjE6ICcxLjEwLjUnLCBUMlQxOiAnMi40LjMnIH0sXG4gICAgICAgICAgICBjb21tZW50OiBbJ0VJUC03MTIgdHlwZWQgc2lnbmluZyBzdXBwb3J0IGFkZGVkIGluIDEuMTAuNS8yLjQuMyddLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBjYXBhYmlsaXRpZXM6IFsnZWlwNzEyLWRvbWFpbi1vbmx5J10sXG4gICAgICAgICAgICBtaW46IHsgVDFCMTogJzEuMTAuNicsIFQyVDE6ICcyLjQuNCcgfSxcbiAgICAgICAgICAgIGNvbW1lbnQ6IFsnRUlQLTcxMiBkb21haW4tb25seSBzaWduaW5nLCB3aGVuIHByaW1hcnlUeXBlPUVJUDcxMkRvbWFpbiddLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBjYXBhYmlsaXRpZXM6IFsnY29pbmpvaW4nXSxcbiAgICAgICAgICAgIG1ldGhvZHM6IFtcbiAgICAgICAgICAgICAgICAnYXV0aG9yaXplQ29pbmpvaW4nLFxuICAgICAgICAgICAgICAgICdjYW5jZWxDb2luam9pbkF1dGhvcml6YXRpb24nLFxuICAgICAgICAgICAgICAgICdnZXRPd25lcnNoaXBJZCcsXG4gICAgICAgICAgICAgICAgJ2dldE93bmVyc2hpcFByb29mJyxcbiAgICAgICAgICAgICAgICAnc2V0QnVzeScsXG4gICAgICAgICAgICAgICAgJ3VubG9ja1BhdGgnLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIG1pbjogeyBUMUIxOiAnMS4xMi4xJywgVDJUMTogJzIuNS4zJyB9LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBtZXRob2RzOiBbJ3Nob3dEZXZpY2VUdXRvcmlhbCcsICdhdXRoZW50aWNhdGVEZXZpY2UnXSxcbiAgICAgICAgICAgIG1pbjogeyBUMUIxOiAnMCcsIFQyVDE6ICcwJywgVDJCMTogJzIuNi4xJyB9LFxuICAgICAgICAgICAgY29tbWVudDogWydPbmx5IG9uIFQyQjEnXSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbWV0aG9kczogWydyZWJvb3RUb0Jvb3Rsb2FkZXInXSxcbiAgICAgICAgICAgIG1pbjogeyBUMUIxOiAnMS4xMC4wJywgVDJUMTogJzIuNi4wJyB9LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBtZXRob2RzOiBbJ2dldEZpcm13YXJlSGFzaCddLFxuICAgICAgICAgICAgbWluOiB7IFQxQjE6ICcxLjExLjEnLCBUMlQxOiAnMi41LjEnIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG1ldGhvZHM6IFsnc29sYW5hR2V0UHVibGljS2V5JywgJ3NvbGFuYUdldEFkZHJlc3MnLCAnc29sYW5hU2lnblRyYW5zYWN0aW9uJ10sXG4gICAgICAgICAgICBtaW46IHsgVDFCMTogJzAnLCBUMlQxOiAnMi42LjQnLCBUMkIxOiAnMi42LjQnIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNhcGFiaWxpdGllczogWydjaHVua2lmeSddLFxuICAgICAgICAgICAgbWluOiB7IFQxQjE6ICcwJywgVDJUMTogJzIuNi4zJywgVDJCMTogJzIuNi4zJyB9LFxuICAgICAgICAgICAgY29tbWVudDogW1xuICAgICAgICAgICAgICAgIFwiU2luY2UgZmlybXdhcmUgMi42LjMgdGhlcmUgaXMgYSBuZXcgcHJvdG9idWYgZmllbGQgJ2NodW5raWZ5JyBpbiBhbG1vc3QgYWxsIGdldEFkZHJlc3MgYW5kIHNpZ25UeCBtZXRob2RzXCIsXG4gICAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgIF0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uZmlnLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/data/config.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/data/connectSettings.js":
/*!******************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/data/connectSettings.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseConnectSettings = exports.corsValidator = exports.DEFAULT_PRIORITY = void 0;\nconst version_1 = __webpack_require__(/*! ./version */ \"./node_modules/@trezor/connect/lib/data/version.js\");\nexports.DEFAULT_PRIORITY = 2;\nconst initialSettings = {\n    configSrc: './data/config.json',\n    version: version_1.VERSION,\n    debug: false,\n    priority: exports.DEFAULT_PRIORITY,\n    trustedHost: true,\n    connectSrc: version_1.DEFAULT_DOMAIN,\n    iframeSrc: `${version_1.DEFAULT_DOMAIN}iframe.html`,\n    popup: false,\n    popupSrc: `${version_1.DEFAULT_DOMAIN}popup.html`,\n    webusbSrc: `${version_1.DEFAULT_DOMAIN}webusb.html`,\n    transports: undefined,\n    pendingTransportEvent: true,\n    env: 'node',\n    lazyLoad: false,\n    timestamp: new Date().getTime(),\n    interactionTimeout: 600,\n    sharedLogger: true,\n};\nconst parseManifest = (manifest) => {\n    if (!manifest)\n        return;\n    if (typeof manifest.email !== 'string')\n        return;\n    if (typeof manifest.appUrl !== 'string')\n        return;\n    return {\n        email: manifest.email,\n        appUrl: manifest.appUrl,\n    };\n};\nconst corsValidator = (url) => {\n    if (typeof url !== 'string')\n        return;\n    if (url.match(/^https:\\/\\/([A-Za-z0-9\\-_]+\\.)*trezor\\.io\\//))\n        return url;\n    if (url.match(/^https?:\\/\\/localhost:[58][0-9]{3}\\//))\n        return url;\n    if (url.match(/^https:\\/\\/([A-Za-z0-9\\-_]+\\.)*sldev\\.cz\\//))\n        return url;\n    if (url.match(/^https?:\\/\\/([A-Za-z0-9\\-_]+\\.)*trezoriovpjcahpzkrewelclulmszwbqpzmzgub37gbcjlvluxtruqad\\.onion\\//))\n        return url;\n};\nexports.corsValidator = corsValidator;\nconst parseConnectSettings = (input = {}) => {\n    var _a;\n    const settings = { ...initialSettings };\n    if ('debug' in input) {\n        if (typeof input.debug === 'boolean') {\n            settings.debug = input.debug;\n        }\n        else if (typeof input.debug === 'string') {\n            settings.debug = input.debug === 'true';\n        }\n    }\n    if (input.trustedHost === false) {\n        settings.trustedHost = input.trustedHost;\n    }\n    if (typeof input.connectSrc === 'string' && ((_a = input.connectSrc) === null || _a === void 0 ? void 0 : _a.startsWith('http'))) {\n        settings.connectSrc = (0, exports.corsValidator)(input.connectSrc);\n    }\n    else if (settings.trustedHost) {\n        settings.connectSrc = input.connectSrc;\n    }\n    const src = settings.connectSrc || version_1.DEFAULT_DOMAIN;\n    settings.iframeSrc = `${src}iframe.html`;\n    settings.popupSrc = `${src}popup.html`;\n    settings.webusbSrc = `${src}webusb.html`;\n    if (typeof input.transportReconnect === 'boolean') {\n        settings.transportReconnect = input.transportReconnect;\n    }\n    if (typeof input.webusb === 'boolean') {\n        settings.webusb = input.webusb;\n    }\n    if (Array.isArray(input.transports)) {\n        settings.transports = input.transports;\n    }\n    if (typeof input.popup === 'boolean') {\n        settings.popup = input.popup;\n    }\n    if (typeof input.lazyLoad === 'boolean') {\n        settings.lazyLoad = input.lazyLoad;\n    }\n    if (typeof input.pendingTransportEvent === 'boolean') {\n        settings.pendingTransportEvent = input.pendingTransportEvent;\n    }\n    if (typeof input.extension === 'string') {\n        settings.extension = input.extension;\n    }\n    if (typeof input.env === 'string') {\n        settings.env = input.env;\n    }\n    if (typeof input.timestamp === 'number') {\n        settings.timestamp = input.timestamp;\n    }\n    if (typeof input.interactionTimeout === 'number') {\n        settings.interactionTimeout = input.interactionTimeout;\n    }\n    if (typeof input.manifest === 'object') {\n        settings.manifest = parseManifest(input.manifest);\n    }\n    if (typeof input.sharedLogger === 'boolean') {\n        settings.sharedLogger = input.sharedLogger;\n    }\n    if (typeof input.useCoreInPopup === 'boolean') {\n        settings.useCoreInPopup = input.useCoreInPopup;\n    }\n    return settings;\n};\nexports.parseConnectSettings = parseConnectSettings;\n//# sourceMappingURL=connectSettings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9kYXRhL2Nvbm5lY3RTZXR0aW5ncy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEIsR0FBRyxxQkFBcUIsR0FBRyx3QkFBd0I7QUFDL0Usa0JBQWtCLG1CQUFPLENBQUMscUVBQVc7QUFDckMsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlCQUF5QjtBQUMzQztBQUNBLGlCQUFpQix5QkFBeUI7QUFDMUMsa0JBQWtCLHlCQUF5QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxFQUFFO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQix3Q0FBd0M7QUFDeEM7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLElBQUk7QUFDaEMsMkJBQTJCLElBQUk7QUFDL0IsNEJBQTRCLElBQUk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9kYXRhL2Nvbm5lY3RTZXR0aW5ncy5qcz8wNThjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJzZUNvbm5lY3RTZXR0aW5ncyA9IGV4cG9ydHMuY29yc1ZhbGlkYXRvciA9IGV4cG9ydHMuREVGQVVMVF9QUklPUklUWSA9IHZvaWQgMDtcbmNvbnN0IHZlcnNpb25fMSA9IHJlcXVpcmUoXCIuL3ZlcnNpb25cIik7XG5leHBvcnRzLkRFRkFVTFRfUFJJT1JJVFkgPSAyO1xuY29uc3QgaW5pdGlhbFNldHRpbmdzID0ge1xuICAgIGNvbmZpZ1NyYzogJy4vZGF0YS9jb25maWcuanNvbicsXG4gICAgdmVyc2lvbjogdmVyc2lvbl8xLlZFUlNJT04sXG4gICAgZGVidWc6IGZhbHNlLFxuICAgIHByaW9yaXR5OiBleHBvcnRzLkRFRkFVTFRfUFJJT1JJVFksXG4gICAgdHJ1c3RlZEhvc3Q6IHRydWUsXG4gICAgY29ubmVjdFNyYzogdmVyc2lvbl8xLkRFRkFVTFRfRE9NQUlOLFxuICAgIGlmcmFtZVNyYzogYCR7dmVyc2lvbl8xLkRFRkFVTFRfRE9NQUlOfWlmcmFtZS5odG1sYCxcbiAgICBwb3B1cDogZmFsc2UsXG4gICAgcG9wdXBTcmM6IGAke3ZlcnNpb25fMS5ERUZBVUxUX0RPTUFJTn1wb3B1cC5odG1sYCxcbiAgICB3ZWJ1c2JTcmM6IGAke3ZlcnNpb25fMS5ERUZBVUxUX0RPTUFJTn13ZWJ1c2IuaHRtbGAsXG4gICAgdHJhbnNwb3J0czogdW5kZWZpbmVkLFxuICAgIHBlbmRpbmdUcmFuc3BvcnRFdmVudDogdHJ1ZSxcbiAgICBlbnY6ICdub2RlJyxcbiAgICBsYXp5TG9hZDogZmFsc2UsXG4gICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSxcbiAgICBpbnRlcmFjdGlvblRpbWVvdXQ6IDYwMCxcbiAgICBzaGFyZWRMb2dnZXI6IHRydWUsXG59O1xuY29uc3QgcGFyc2VNYW5pZmVzdCA9IChtYW5pZmVzdCkgPT4ge1xuICAgIGlmICghbWFuaWZlc3QpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAodHlwZW9mIG1hbmlmZXN0LmVtYWlsICE9PSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICh0eXBlb2YgbWFuaWZlc3QuYXBwVXJsICE9PSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuO1xuICAgIHJldHVybiB7XG4gICAgICAgIGVtYWlsOiBtYW5pZmVzdC5lbWFpbCxcbiAgICAgICAgYXBwVXJsOiBtYW5pZmVzdC5hcHBVcmwsXG4gICAgfTtcbn07XG5jb25zdCBjb3JzVmFsaWRhdG9yID0gKHVybCkgPT4ge1xuICAgIGlmICh0eXBlb2YgdXJsICE9PSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICh1cmwubWF0Y2goL15odHRwczpcXC9cXC8oW0EtWmEtejAtOVxcLV9dK1xcLikqdHJlem9yXFwuaW9cXC8vKSlcbiAgICAgICAgcmV0dXJuIHVybDtcbiAgICBpZiAodXJsLm1hdGNoKC9eaHR0cHM/OlxcL1xcL2xvY2FsaG9zdDpbNThdWzAtOV17M31cXC8vKSlcbiAgICAgICAgcmV0dXJuIHVybDtcbiAgICBpZiAodXJsLm1hdGNoKC9eaHR0cHM6XFwvXFwvKFtBLVphLXowLTlcXC1fXStcXC4pKnNsZGV2XFwuY3pcXC8vKSlcbiAgICAgICAgcmV0dXJuIHVybDtcbiAgICBpZiAodXJsLm1hdGNoKC9eaHR0cHM/OlxcL1xcLyhbQS1aYS16MC05XFwtX10rXFwuKSp0cmV6b3Jpb3ZwamNhaHB6a3Jld2VsY2x1bG1zendicXB6bXpndWIzN2diY2psdmx1eHRydXFhZFxcLm9uaW9uXFwvLykpXG4gICAgICAgIHJldHVybiB1cmw7XG59O1xuZXhwb3J0cy5jb3JzVmFsaWRhdG9yID0gY29yc1ZhbGlkYXRvcjtcbmNvbnN0IHBhcnNlQ29ubmVjdFNldHRpbmdzID0gKGlucHV0ID0ge30pID0+IHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qgc2V0dGluZ3MgPSB7IC4uLmluaXRpYWxTZXR0aW5ncyB9O1xuICAgIGlmICgnZGVidWcnIGluIGlucHV0KSB7XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQuZGVidWcgPT09ICdib29sZWFuJykge1xuICAgICAgICAgICAgc2V0dGluZ3MuZGVidWcgPSBpbnB1dC5kZWJ1ZztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgaW5wdXQuZGVidWcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBzZXR0aW5ncy5kZWJ1ZyA9IGlucHV0LmRlYnVnID09PSAndHJ1ZSc7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGlucHV0LnRydXN0ZWRIb3N0ID09PSBmYWxzZSkge1xuICAgICAgICBzZXR0aW5ncy50cnVzdGVkSG9zdCA9IGlucHV0LnRydXN0ZWRIb3N0O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGlucHV0LmNvbm5lY3RTcmMgPT09ICdzdHJpbmcnICYmICgoX2EgPSBpbnB1dC5jb25uZWN0U3JjKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Euc3RhcnRzV2l0aCgnaHR0cCcpKSkge1xuICAgICAgICBzZXR0aW5ncy5jb25uZWN0U3JjID0gKDAsIGV4cG9ydHMuY29yc1ZhbGlkYXRvcikoaW5wdXQuY29ubmVjdFNyYyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHNldHRpbmdzLnRydXN0ZWRIb3N0KSB7XG4gICAgICAgIHNldHRpbmdzLmNvbm5lY3RTcmMgPSBpbnB1dC5jb25uZWN0U3JjO1xuICAgIH1cbiAgICBjb25zdCBzcmMgPSBzZXR0aW5ncy5jb25uZWN0U3JjIHx8IHZlcnNpb25fMS5ERUZBVUxUX0RPTUFJTjtcbiAgICBzZXR0aW5ncy5pZnJhbWVTcmMgPSBgJHtzcmN9aWZyYW1lLmh0bWxgO1xuICAgIHNldHRpbmdzLnBvcHVwU3JjID0gYCR7c3JjfXBvcHVwLmh0bWxgO1xuICAgIHNldHRpbmdzLndlYnVzYlNyYyA9IGAke3NyY313ZWJ1c2IuaHRtbGA7XG4gICAgaWYgKHR5cGVvZiBpbnB1dC50cmFuc3BvcnRSZWNvbm5lY3QgPT09ICdib29sZWFuJykge1xuICAgICAgICBzZXR0aW5ncy50cmFuc3BvcnRSZWNvbm5lY3QgPSBpbnB1dC50cmFuc3BvcnRSZWNvbm5lY3Q7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgaW5wdXQud2VidXNiID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgc2V0dGluZ3Mud2VidXNiID0gaW5wdXQud2VidXNiO1xuICAgIH1cbiAgICBpZiAoQXJyYXkuaXNBcnJheShpbnB1dC50cmFuc3BvcnRzKSkge1xuICAgICAgICBzZXR0aW5ncy50cmFuc3BvcnRzID0gaW5wdXQudHJhbnNwb3J0cztcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC5wb3B1cCA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIHNldHRpbmdzLnBvcHVwID0gaW5wdXQucG9wdXA7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgaW5wdXQubGF6eUxvYWQgPT09ICdib29sZWFuJykge1xuICAgICAgICBzZXR0aW5ncy5sYXp5TG9hZCA9IGlucHV0LmxhenlMb2FkO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGlucHV0LnBlbmRpbmdUcmFuc3BvcnRFdmVudCA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIHNldHRpbmdzLnBlbmRpbmdUcmFuc3BvcnRFdmVudCA9IGlucHV0LnBlbmRpbmdUcmFuc3BvcnRFdmVudDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC5leHRlbnNpb24gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHNldHRpbmdzLmV4dGVuc2lvbiA9IGlucHV0LmV4dGVuc2lvbjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC5lbnYgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHNldHRpbmdzLmVudiA9IGlucHV0LmVudjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC50aW1lc3RhbXAgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHNldHRpbmdzLnRpbWVzdGFtcCA9IGlucHV0LnRpbWVzdGFtcDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC5pbnRlcmFjdGlvblRpbWVvdXQgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHNldHRpbmdzLmludGVyYWN0aW9uVGltZW91dCA9IGlucHV0LmludGVyYWN0aW9uVGltZW91dDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC5tYW5pZmVzdCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgc2V0dGluZ3MubWFuaWZlc3QgPSBwYXJzZU1hbmlmZXN0KGlucHV0Lm1hbmlmZXN0KTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC5zaGFyZWRMb2dnZXIgPT09ICdib29sZWFuJykge1xuICAgICAgICBzZXR0aW5ncy5zaGFyZWRMb2dnZXIgPSBpbnB1dC5zaGFyZWRMb2dnZXI7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgaW5wdXQudXNlQ29yZUluUG9wdXAgPT09ICdib29sZWFuJykge1xuICAgICAgICBzZXR0aW5ncy51c2VDb3JlSW5Qb3B1cCA9IGlucHV0LnVzZUNvcmVJblBvcHVwO1xuICAgIH1cbiAgICByZXR1cm4gc2V0dGluZ3M7XG59O1xuZXhwb3J0cy5wYXJzZUNvbm5lY3RTZXR0aW5ncyA9IHBhcnNlQ29ubmVjdFNldHRpbmdzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29ubmVjdFNldHRpbmdzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/data/connectSettings.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/data/version.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/data/version.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_DOMAIN = exports.VERSION = void 0;\nexports.VERSION = '9.2.1';\nconst versionN = exports.VERSION.split('.').map(s => parseInt(s, 10));\nexports.DEFAULT_DOMAIN = `https://connect.trezor.io/${versionN[0]}/`;\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9kYXRhL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCLEdBQUcsZUFBZTtBQUN4QyxlQUFlO0FBQ2Y7QUFDQSxzQkFBc0IsZ0NBQWdDLFlBQVk7QUFDbEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvZGF0YS92ZXJzaW9uLmpzP2JjNjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRFRkFVTFRfRE9NQUlOID0gZXhwb3J0cy5WRVJTSU9OID0gdm9pZCAwO1xuZXhwb3J0cy5WRVJTSU9OID0gJzkuMi4xJztcbmNvbnN0IHZlcnNpb25OID0gZXhwb3J0cy5WRVJTSU9OLnNwbGl0KCcuJykubWFwKHMgPT4gcGFyc2VJbnQocywgMTApKTtcbmV4cG9ydHMuREVGQVVMVF9ET01BSU4gPSBgaHR0cHM6Ly9jb25uZWN0LnRyZXpvci5pby8ke3ZlcnNpb25OWzBdfS9gO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/data/version.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/blockchain.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/blockchain.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createBlockchainMessage = exports.BLOCKCHAIN = exports.BLOCKCHAIN_EVENT = void 0;\nexports.BLOCKCHAIN_EVENT = 'BLOCKCHAIN_EVENT';\nexports.BLOCKCHAIN = {\n    CONNECT: 'blockchain-connect',\n    RECONNECTING: 'blockchain-reconnecting',\n    ERROR: 'blockchain-error',\n    BLOCK: 'blockchain-block',\n    NOTIFICATION: 'blockchain-notification',\n    FIAT_RATES_UPDATE: 'fiat-rates-update',\n};\nconst createBlockchainMessage = (type, payload) => ({\n    event: exports.BLOCKCHAIN_EVENT,\n    type,\n    payload,\n});\nexports.createBlockchainMessage = createBlockchainMessage;\n//# sourceMappingURL=blockchain.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvYmxvY2tjaGFpbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0IsR0FBRyxrQkFBa0IsR0FBRyx3QkFBd0I7QUFDL0Usd0JBQXdCO0FBQ3hCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELCtCQUErQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvYmxvY2tjaGFpbi5qcz8zZGRjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVCbG9ja2NoYWluTWVzc2FnZSA9IGV4cG9ydHMuQkxPQ0tDSEFJTiA9IGV4cG9ydHMuQkxPQ0tDSEFJTl9FVkVOVCA9IHZvaWQgMDtcbmV4cG9ydHMuQkxPQ0tDSEFJTl9FVkVOVCA9ICdCTE9DS0NIQUlOX0VWRU5UJztcbmV4cG9ydHMuQkxPQ0tDSEFJTiA9IHtcbiAgICBDT05ORUNUOiAnYmxvY2tjaGFpbi1jb25uZWN0JyxcbiAgICBSRUNPTk5FQ1RJTkc6ICdibG9ja2NoYWluLXJlY29ubmVjdGluZycsXG4gICAgRVJST1I6ICdibG9ja2NoYWluLWVycm9yJyxcbiAgICBCTE9DSzogJ2Jsb2NrY2hhaW4tYmxvY2snLFxuICAgIE5PVElGSUNBVElPTjogJ2Jsb2NrY2hhaW4tbm90aWZpY2F0aW9uJyxcbiAgICBGSUFUX1JBVEVTX1VQREFURTogJ2ZpYXQtcmF0ZXMtdXBkYXRlJyxcbn07XG5jb25zdCBjcmVhdGVCbG9ja2NoYWluTWVzc2FnZSA9ICh0eXBlLCBwYXlsb2FkKSA9PiAoe1xuICAgIGV2ZW50OiBleHBvcnRzLkJMT0NLQ0hBSU5fRVZFTlQsXG4gICAgdHlwZSxcbiAgICBwYXlsb2FkLFxufSk7XG5leHBvcnRzLmNyZWF0ZUJsb2NrY2hhaW5NZXNzYWdlID0gY3JlYXRlQmxvY2tjaGFpbk1lc3NhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ibG9ja2NoYWluLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/blockchain.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/call.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/call.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createResponseMessage = exports.RESPONSE_EVENT = void 0;\nconst errors_1 = __webpack_require__(/*! ../constants/errors */ \"./node_modules/@trezor/connect/lib/constants/errors.js\");\nexports.RESPONSE_EVENT = 'RESPONSE_EVENT';\nconst createResponseMessage = (id, success, payload) => ({\n    event: exports.RESPONSE_EVENT,\n    type: exports.RESPONSE_EVENT,\n    id,\n    success,\n    payload: success ? payload : (0, errors_1.serializeError)(payload),\n});\nexports.createResponseMessage = createResponseMessage;\n//# sourceMappingURL=call.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvY2FsbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkIsR0FBRyxzQkFBc0I7QUFDdEQsaUJBQWlCLG1CQUFPLENBQUMsbUZBQXFCO0FBQzlDLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2V2ZW50cy9jYWxsLmpzP2I5ZjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVJlc3BvbnNlTWVzc2FnZSA9IGV4cG9ydHMuUkVTUE9OU0VfRVZFTlQgPSB2b2lkIDA7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuLi9jb25zdGFudHMvZXJyb3JzXCIpO1xuZXhwb3J0cy5SRVNQT05TRV9FVkVOVCA9ICdSRVNQT05TRV9FVkVOVCc7XG5jb25zdCBjcmVhdGVSZXNwb25zZU1lc3NhZ2UgPSAoaWQsIHN1Y2Nlc3MsIHBheWxvYWQpID0+ICh7XG4gICAgZXZlbnQ6IGV4cG9ydHMuUkVTUE9OU0VfRVZFTlQsXG4gICAgdHlwZTogZXhwb3J0cy5SRVNQT05TRV9FVkVOVCxcbiAgICBpZCxcbiAgICBzdWNjZXNzLFxuICAgIHBheWxvYWQ6IHN1Y2Nlc3MgPyBwYXlsb2FkIDogKDAsIGVycm9yc18xLnNlcmlhbGl6ZUVycm9yKShwYXlsb2FkKSxcbn0pO1xuZXhwb3J0cy5jcmVhdGVSZXNwb25zZU1lc3NhZ2UgPSBjcmVhdGVSZXNwb25zZU1lc3NhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWxsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/call.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/core.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/core.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createErrorMessage = exports.parseMessage = exports.CORE_EVENT = void 0;\nexports.CORE_EVENT = 'CORE_EVENT';\nconst parseMessage = (messageData) => {\n    const message = {\n        event: messageData.event,\n        type: messageData.type,\n        payload: messageData.payload,\n    };\n    if (typeof messageData.id === 'number') {\n        message.id = messageData.id;\n    }\n    if (typeof messageData.success === 'boolean') {\n        message.success = messageData.success;\n    }\n    return message;\n};\nexports.parseMessage = parseMessage;\nconst createErrorMessage = (error) => ({\n    success: false,\n    payload: {\n        error: error.message,\n        code: error.code,\n    },\n});\nexports.createErrorMessage = createErrorMessage;\n//# sourceMappingURL=core.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvY29yZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsR0FBRyxvQkFBb0IsR0FBRyxrQkFBa0I7QUFDdEUsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBQ0QsMEJBQTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2V2ZW50cy9jb3JlLmpzPzA4NmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUVycm9yTWVzc2FnZSA9IGV4cG9ydHMucGFyc2VNZXNzYWdlID0gZXhwb3J0cy5DT1JFX0VWRU5UID0gdm9pZCAwO1xuZXhwb3J0cy5DT1JFX0VWRU5UID0gJ0NPUkVfRVZFTlQnO1xuY29uc3QgcGFyc2VNZXNzYWdlID0gKG1lc3NhZ2VEYXRhKSA9PiB7XG4gICAgY29uc3QgbWVzc2FnZSA9IHtcbiAgICAgICAgZXZlbnQ6IG1lc3NhZ2VEYXRhLmV2ZW50LFxuICAgICAgICB0eXBlOiBtZXNzYWdlRGF0YS50eXBlLFxuICAgICAgICBwYXlsb2FkOiBtZXNzYWdlRGF0YS5wYXlsb2FkLFxuICAgIH07XG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlRGF0YS5pZCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgbWVzc2FnZS5pZCA9IG1lc3NhZ2VEYXRhLmlkO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG1lc3NhZ2VEYXRhLnN1Y2Nlc3MgPT09ICdib29sZWFuJykge1xuICAgICAgICBtZXNzYWdlLnN1Y2Nlc3MgPSBtZXNzYWdlRGF0YS5zdWNjZXNzO1xuICAgIH1cbiAgICByZXR1cm4gbWVzc2FnZTtcbn07XG5leHBvcnRzLnBhcnNlTWVzc2FnZSA9IHBhcnNlTWVzc2FnZTtcbmNvbnN0IGNyZWF0ZUVycm9yTWVzc2FnZSA9IChlcnJvcikgPT4gKHtcbiAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICBwYXlsb2FkOiB7XG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICBjb2RlOiBlcnJvci5jb2RlLFxuICAgIH0sXG59KTtcbmV4cG9ydHMuY3JlYXRlRXJyb3JNZXNzYWdlID0gY3JlYXRlRXJyb3JNZXNzYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29yZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/core.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/device.js":
/*!***********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/device.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createDeviceMessage = exports.DEVICE = exports.DEVICE_EVENT = void 0;\nexports.DEVICE_EVENT = 'DEVICE_EVENT';\nexports.DEVICE = {\n    CONNECT: 'device-connect',\n    CONNECT_UNACQUIRED: 'device-connect_unacquired',\n    DISCONNECT: 'device-disconnect',\n    CHANGED: 'device-changed',\n    ACQUIRE: 'device-acquire',\n    RELEASE: 'device-release',\n    ACQUIRED: 'device-acquired',\n    RELEASED: 'device-released',\n    USED_ELSEWHERE: 'device-used_elsewhere',\n    LOADING: 'device-loading',\n    BUTTON: 'button',\n    PIN: 'pin',\n    PASSPHRASE: 'passphrase',\n    PASSPHRASE_ON_DEVICE: 'passphrase_on_device',\n    WORD: 'word',\n};\nconst createDeviceMessage = (type, payload) => ({\n    event: exports.DEVICE_EVENT,\n    type,\n    payload,\n});\nexports.createDeviceMessage = createDeviceMessage;\n//# sourceMappingURL=device.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvZGV2aWNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLGNBQWMsR0FBRyxvQkFBb0I7QUFDbkUsb0JBQW9CO0FBQ3BCLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvZGV2aWNlLmpzPzViMGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZURldmljZU1lc3NhZ2UgPSBleHBvcnRzLkRFVklDRSA9IGV4cG9ydHMuREVWSUNFX0VWRU5UID0gdm9pZCAwO1xuZXhwb3J0cy5ERVZJQ0VfRVZFTlQgPSAnREVWSUNFX0VWRU5UJztcbmV4cG9ydHMuREVWSUNFID0ge1xuICAgIENPTk5FQ1Q6ICdkZXZpY2UtY29ubmVjdCcsXG4gICAgQ09OTkVDVF9VTkFDUVVJUkVEOiAnZGV2aWNlLWNvbm5lY3RfdW5hY3F1aXJlZCcsXG4gICAgRElTQ09OTkVDVDogJ2RldmljZS1kaXNjb25uZWN0JyxcbiAgICBDSEFOR0VEOiAnZGV2aWNlLWNoYW5nZWQnLFxuICAgIEFDUVVJUkU6ICdkZXZpY2UtYWNxdWlyZScsXG4gICAgUkVMRUFTRTogJ2RldmljZS1yZWxlYXNlJyxcbiAgICBBQ1FVSVJFRDogJ2RldmljZS1hY3F1aXJlZCcsXG4gICAgUkVMRUFTRUQ6ICdkZXZpY2UtcmVsZWFzZWQnLFxuICAgIFVTRURfRUxTRVdIRVJFOiAnZGV2aWNlLXVzZWRfZWxzZXdoZXJlJyxcbiAgICBMT0FESU5HOiAnZGV2aWNlLWxvYWRpbmcnLFxuICAgIEJVVFRPTjogJ2J1dHRvbicsXG4gICAgUElOOiAncGluJyxcbiAgICBQQVNTUEhSQVNFOiAncGFzc3BocmFzZScsXG4gICAgUEFTU1BIUkFTRV9PTl9ERVZJQ0U6ICdwYXNzcGhyYXNlX29uX2RldmljZScsXG4gICAgV09SRDogJ3dvcmQnLFxufTtcbmNvbnN0IGNyZWF0ZURldmljZU1lc3NhZ2UgPSAodHlwZSwgcGF5bG9hZCkgPT4gKHtcbiAgICBldmVudDogZXhwb3J0cy5ERVZJQ0VfRVZFTlQsXG4gICAgdHlwZSxcbiAgICBwYXlsb2FkLFxufSk7XG5leHBvcnRzLmNyZWF0ZURldmljZU1lc3NhZ2UgPSBjcmVhdGVEZXZpY2VNZXNzYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGV2aWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/device.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/iframe.js":
/*!***********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/iframe.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createIFrameMessage = exports.IFRAME = void 0;\nconst ui_request_1 = __webpack_require__(/*! ./ui-request */ \"./node_modules/@trezor/connect/lib/events/ui-request.js\");\nexports.IFRAME = {\n    BOOTSTRAP: 'iframe-bootstrap',\n    LOADED: 'iframe-loaded',\n    INIT: 'iframe-init',\n    ERROR: 'iframe-error',\n    CALL: 'iframe-call',\n    LOG: 'iframe-log',\n};\nconst createIFrameMessage = (type, payload) => ({\n    event: ui_request_1.UI_EVENT,\n    type,\n    payload,\n});\nexports.createIFrameMessage = createIFrameMessage;\n//# sourceMappingURL=iframe.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvaWZyYW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLGNBQWM7QUFDNUMscUJBQXFCLG1CQUFPLENBQUMsNkVBQWM7QUFDM0MsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2V2ZW50cy9pZnJhbWUuanM/ZDMwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlSUZyYW1lTWVzc2FnZSA9IGV4cG9ydHMuSUZSQU1FID0gdm9pZCAwO1xuY29uc3QgdWlfcmVxdWVzdF8xID0gcmVxdWlyZShcIi4vdWktcmVxdWVzdFwiKTtcbmV4cG9ydHMuSUZSQU1FID0ge1xuICAgIEJPT1RTVFJBUDogJ2lmcmFtZS1ib290c3RyYXAnLFxuICAgIExPQURFRDogJ2lmcmFtZS1sb2FkZWQnLFxuICAgIElOSVQ6ICdpZnJhbWUtaW5pdCcsXG4gICAgRVJST1I6ICdpZnJhbWUtZXJyb3InLFxuICAgIENBTEw6ICdpZnJhbWUtY2FsbCcsXG4gICAgTE9HOiAnaWZyYW1lLWxvZycsXG59O1xuY29uc3QgY3JlYXRlSUZyYW1lTWVzc2FnZSA9ICh0eXBlLCBwYXlsb2FkKSA9PiAoe1xuICAgIGV2ZW50OiB1aV9yZXF1ZXN0XzEuVUlfRVZFTlQsXG4gICAgdHlwZSxcbiAgICBwYXlsb2FkLFxufSk7XG5leHBvcnRzLmNyZWF0ZUlGcmFtZU1lc3NhZ2UgPSBjcmVhdGVJRnJhbWVNZXNzYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aWZyYW1lLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/iframe.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UI = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst ui_request_1 = __webpack_require__(/*! ./ui-request */ \"./node_modules/@trezor/connect/lib/events/ui-request.js\");\nconst ui_response_1 = __webpack_require__(/*! ./ui-response */ \"./node_modules/@trezor/connect/lib/events/ui-response.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./blockchain */ \"./node_modules/@trezor/connect/lib/events/blockchain.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./call */ \"./node_modules/@trezor/connect/lib/events/call.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./core */ \"./node_modules/@trezor/connect/lib/events/core.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./device */ \"./node_modules/@trezor/connect/lib/events/device.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./iframe */ \"./node_modules/@trezor/connect/lib/events/iframe.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./popup */ \"./node_modules/@trezor/connect/lib/events/popup.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./transport */ \"./node_modules/@trezor/connect/lib/events/transport.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./ui-promise */ \"./node_modules/@trezor/connect/lib/events/ui-promise.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./ui-request */ \"./node_modules/@trezor/connect/lib/events/ui-request.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./ui-response */ \"./node_modules/@trezor/connect/lib/events/ui-response.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./webextension */ \"./node_modules/@trezor/connect/lib/events/webextension.js\"), exports);\nexports.UI = {\n    ...ui_request_1.UI_REQUEST,\n    ...ui_response_1.UI_RESPONSE,\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsVUFBVTtBQUNWLGdCQUFnQixtQkFBTyxDQUFDLGlEQUFPO0FBQy9CLHFCQUFxQixtQkFBTyxDQUFDLDZFQUFjO0FBQzNDLHNCQUFzQixtQkFBTyxDQUFDLCtFQUFlO0FBQzdDLHFCQUFxQixtQkFBTyxDQUFDLDZFQUFjO0FBQzNDLHFCQUFxQixtQkFBTyxDQUFDLGlFQUFRO0FBQ3JDLHFCQUFxQixtQkFBTyxDQUFDLGlFQUFRO0FBQ3JDLHFCQUFxQixtQkFBTyxDQUFDLHFFQUFVO0FBQ3ZDLHFCQUFxQixtQkFBTyxDQUFDLHFFQUFVO0FBQ3ZDLHFCQUFxQixtQkFBTyxDQUFDLG1FQUFTO0FBQ3RDLHFCQUFxQixtQkFBTyxDQUFDLDJFQUFhO0FBQzFDLHFCQUFxQixtQkFBTyxDQUFDLDZFQUFjO0FBQzNDLHFCQUFxQixtQkFBTyxDQUFDLDZFQUFjO0FBQzNDLHFCQUFxQixtQkFBTyxDQUFDLCtFQUFlO0FBQzVDLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFnQjtBQUM3QyxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvZXZlbnRzL2luZGV4LmpzP2RjMzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVJID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IHVpX3JlcXVlc3RfMSA9IHJlcXVpcmUoXCIuL3VpLXJlcXVlc3RcIik7XG5jb25zdCB1aV9yZXNwb25zZV8xID0gcmVxdWlyZShcIi4vdWktcmVzcG9uc2VcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9ibG9ja2NoYWluXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NhbGxcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29yZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kZXZpY2VcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaWZyYW1lXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BvcHVwXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYW5zcG9ydFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91aS1wcm9taXNlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3VpLXJlcXVlc3RcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdWktcmVzcG9uc2VcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vd2ViZXh0ZW5zaW9uXCIpLCBleHBvcnRzKTtcbmV4cG9ydHMuVUkgPSB7XG4gICAgLi4udWlfcmVxdWVzdF8xLlVJX1JFUVVFU1QsXG4gICAgLi4udWlfcmVzcG9uc2VfMS5VSV9SRVNQT05TRSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/popup.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/popup.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createPopupMessage = exports.POPUP = void 0;\nconst ui_request_1 = __webpack_require__(/*! ./ui-request */ \"./node_modules/@trezor/connect/lib/events/ui-request.js\");\nexports.POPUP = {\n    BOOTSTRAP: 'popup-bootstrap',\n    LOADED: 'popup-loaded',\n    CORE_LOADED: 'popup-core-loaded',\n    INIT: 'popup-init',\n    ERROR: 'popup-error',\n    EXTENSION_USB_PERMISSIONS: 'open-usb-permissions',\n    HANDSHAKE: 'popup-handshake',\n    CLOSED: 'popup-closed',\n    CANCEL_POPUP_REQUEST: 'ui-cancel-popup-request',\n    CLOSE_WINDOW: 'window.close',\n    ANALYTICS_RESPONSE: 'popup-analytics-response',\n    CONTENT_SCRIPT_LOADED: 'popup-content-script-loaded',\n    METHOD_INFO: 'popup-method-info',\n};\nconst createPopupMessage = (type, payload) => ({\n    event: ui_request_1.UI_EVENT,\n    type,\n    payload,\n});\nexports.createPopupMessage = createPopupMessage;\n//# sourceMappingURL=popup.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvcG9wdXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsYUFBYTtBQUMxQyxxQkFBcUIsbUJBQU8sQ0FBQyw2RUFBYztBQUMzQyxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDBCQUEwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvcG9wdXAuanM/MWQwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlUG9wdXBNZXNzYWdlID0gZXhwb3J0cy5QT1BVUCA9IHZvaWQgMDtcbmNvbnN0IHVpX3JlcXVlc3RfMSA9IHJlcXVpcmUoXCIuL3VpLXJlcXVlc3RcIik7XG5leHBvcnRzLlBPUFVQID0ge1xuICAgIEJPT1RTVFJBUDogJ3BvcHVwLWJvb3RzdHJhcCcsXG4gICAgTE9BREVEOiAncG9wdXAtbG9hZGVkJyxcbiAgICBDT1JFX0xPQURFRDogJ3BvcHVwLWNvcmUtbG9hZGVkJyxcbiAgICBJTklUOiAncG9wdXAtaW5pdCcsXG4gICAgRVJST1I6ICdwb3B1cC1lcnJvcicsXG4gICAgRVhURU5TSU9OX1VTQl9QRVJNSVNTSU9OUzogJ29wZW4tdXNiLXBlcm1pc3Npb25zJyxcbiAgICBIQU5EU0hBS0U6ICdwb3B1cC1oYW5kc2hha2UnLFxuICAgIENMT1NFRDogJ3BvcHVwLWNsb3NlZCcsXG4gICAgQ0FOQ0VMX1BPUFVQX1JFUVVFU1Q6ICd1aS1jYW5jZWwtcG9wdXAtcmVxdWVzdCcsXG4gICAgQ0xPU0VfV0lORE9XOiAnd2luZG93LmNsb3NlJyxcbiAgICBBTkFMWVRJQ1NfUkVTUE9OU0U6ICdwb3B1cC1hbmFseXRpY3MtcmVzcG9uc2UnLFxuICAgIENPTlRFTlRfU0NSSVBUX0xPQURFRDogJ3BvcHVwLWNvbnRlbnQtc2NyaXB0LWxvYWRlZCcsXG4gICAgTUVUSE9EX0lORk86ICdwb3B1cC1tZXRob2QtaW5mbycsXG59O1xuY29uc3QgY3JlYXRlUG9wdXBNZXNzYWdlID0gKHR5cGUsIHBheWxvYWQpID0+ICh7XG4gICAgZXZlbnQ6IHVpX3JlcXVlc3RfMS5VSV9FVkVOVCxcbiAgICB0eXBlLFxuICAgIHBheWxvYWQsXG59KTtcbmV4cG9ydHMuY3JlYXRlUG9wdXBNZXNzYWdlID0gY3JlYXRlUG9wdXBNZXNzYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9wdXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/popup.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/transport.js":
/*!**************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/transport.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createTransportMessage = exports.TRANSPORT_EVENT = exports.TRANSPORT = void 0;\nconst errors_1 = __webpack_require__(/*! ../constants/errors */ \"./node_modules/@trezor/connect/lib/constants/errors.js\");\nvar constants_1 = __webpack_require__(/*! @trezor/transport/lib/constants */ \"./node_modules/@trezor/transport/lib/constants.js\");\nObject.defineProperty(exports, \"TRANSPORT\", ({ enumerable: true, get: function () { return constants_1.TRANSPORT; } }));\nexports.TRANSPORT_EVENT = 'TRANSPORT_EVENT';\nconst createTransportMessage = (type, payload) => ({\n    event: exports.TRANSPORT_EVENT,\n    type,\n    payload: 'error' in payload ? (0, errors_1.serializeError)(payload) : payload,\n});\nexports.createTransportMessage = createTransportMessage;\n//# sourceMappingURL=transport.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvdHJhbnNwb3J0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QixHQUFHLHVCQUF1QixHQUFHLGlCQUFpQjtBQUM1RSxpQkFBaUIsbUJBQU8sQ0FBQyxtRkFBcUI7QUFDOUMsa0JBQWtCLG1CQUFPLENBQUMsMEZBQWlDO0FBQzNELDZDQUE0QyxFQUFFLHFDQUFxQyxpQ0FBaUMsRUFBQztBQUNySCx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsOEJBQThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2V2ZW50cy90cmFuc3BvcnQuanM/ZWE1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlVHJhbnNwb3J0TWVzc2FnZSA9IGV4cG9ydHMuVFJBTlNQT1JUX0VWRU5UID0gZXhwb3J0cy5UUkFOU1BPUlQgPSB2b2lkIDA7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuLi9jb25zdGFudHMvZXJyb3JzXCIpO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIkB0cmV6b3IvdHJhbnNwb3J0L2xpYi9jb25zdGFudHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUUkFOU1BPUlRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnN0YW50c18xLlRSQU5TUE9SVDsgfSB9KTtcbmV4cG9ydHMuVFJBTlNQT1JUX0VWRU5UID0gJ1RSQU5TUE9SVF9FVkVOVCc7XG5jb25zdCBjcmVhdGVUcmFuc3BvcnRNZXNzYWdlID0gKHR5cGUsIHBheWxvYWQpID0+ICh7XG4gICAgZXZlbnQ6IGV4cG9ydHMuVFJBTlNQT1JUX0VWRU5ULFxuICAgIHR5cGUsXG4gICAgcGF5bG9hZDogJ2Vycm9yJyBpbiBwYXlsb2FkID8gKDAsIGVycm9yc18xLnNlcmlhbGl6ZUVycm9yKShwYXlsb2FkKSA6IHBheWxvYWQsXG59KTtcbmV4cG9ydHMuY3JlYXRlVHJhbnNwb3J0TWVzc2FnZSA9IGNyZWF0ZVRyYW5zcG9ydE1lc3NhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc3BvcnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/transport.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/ui-promise.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/ui-promise.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=ui-promise.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvdWktcHJvbWlzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvdWktcHJvbWlzZS5qcz8xMDRhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWktcHJvbWlzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/ui-promise.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/ui-request.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/ui-request.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createUiMessage = exports.UI_REQUEST = exports.UI_EVENT = void 0;\nexports.UI_EVENT = 'UI_EVENT';\nexports.UI_REQUEST = {\n    TRANSPORT: 'ui-no_transport',\n    BOOTLOADER: 'ui-device_bootloader_mode',\n    NOT_IN_BOOTLOADER: 'ui-device_not_in_bootloader_mode',\n    REQUIRE_MODE: 'ui-device_require_mode',\n    INITIALIZE: 'ui-device_not_initialized',\n    SEEDLESS: 'ui-device_seedless',\n    FIRMWARE_OLD: 'ui-device_firmware_old',\n    FIRMWARE_OUTDATED: 'ui-device_firmware_outdated',\n    FIRMWARE_NOT_SUPPORTED: 'ui-device_firmware_unsupported',\n    FIRMWARE_NOT_COMPATIBLE: 'ui-device_firmware_not_compatible',\n    FIRMWARE_NOT_INSTALLED: 'ui-device_firmware_not_installed',\n    FIRMWARE_PROGRESS: 'ui-firmware-progress',\n    DEVICE_NEEDS_BACKUP: 'ui-device_needs_backup',\n    REQUEST_UI_WINDOW: 'ui-request_window',\n    CLOSE_UI_WINDOW: 'ui-close_window',\n    REQUEST_PERMISSION: 'ui-request_permission',\n    REQUEST_CONFIRMATION: 'ui-request_confirmation',\n    REQUEST_PIN: 'ui-request_pin',\n    INVALID_PIN: 'ui-invalid_pin',\n    REQUEST_PASSPHRASE: 'ui-request_passphrase',\n    REQUEST_PASSPHRASE_ON_DEVICE: 'ui-request_passphrase_on_device',\n    INVALID_PASSPHRASE: 'ui-invalid_passphrase',\n    CONNECT: 'ui-connect',\n    LOADING: 'ui-loading',\n    SET_OPERATION: 'ui-set_operation',\n    SELECT_DEVICE: 'ui-select_device',\n    SELECT_ACCOUNT: 'ui-select_account',\n    SELECT_FEE: 'ui-select_fee',\n    UPDATE_CUSTOM_FEE: 'ui-update_custom_fee',\n    INSUFFICIENT_FUNDS: 'ui-insufficient_funds',\n    REQUEST_BUTTON: 'ui-button',\n    REQUEST_WORD: 'ui-request_word',\n    LOGIN_CHALLENGE_REQUEST: 'ui-login_challenge_request',\n    BUNDLE_PROGRESS: 'ui-bundle_progress',\n    ADDRESS_VALIDATION: 'ui-address_validation',\n    IFRAME_FAILURE: 'ui-iframe_failure',\n};\nconst createUiMessage = (type, payload) => ({\n    event: exports.UI_EVENT,\n    type,\n    payload,\n});\nexports.createUiMessage = createUiMessage;\n//# sourceMappingURL=ui-request.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvdWktcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRyxrQkFBa0IsR0FBRyxnQkFBZ0I7QUFDL0QsZ0JBQWdCO0FBQ2hCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvdWktcmVxdWVzdC5qcz8zNzRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVVaU1lc3NhZ2UgPSBleHBvcnRzLlVJX1JFUVVFU1QgPSBleHBvcnRzLlVJX0VWRU5UID0gdm9pZCAwO1xuZXhwb3J0cy5VSV9FVkVOVCA9ICdVSV9FVkVOVCc7XG5leHBvcnRzLlVJX1JFUVVFU1QgPSB7XG4gICAgVFJBTlNQT1JUOiAndWktbm9fdHJhbnNwb3J0JyxcbiAgICBCT09UTE9BREVSOiAndWktZGV2aWNlX2Jvb3Rsb2FkZXJfbW9kZScsXG4gICAgTk9UX0lOX0JPT1RMT0FERVI6ICd1aS1kZXZpY2Vfbm90X2luX2Jvb3Rsb2FkZXJfbW9kZScsXG4gICAgUkVRVUlSRV9NT0RFOiAndWktZGV2aWNlX3JlcXVpcmVfbW9kZScsXG4gICAgSU5JVElBTElaRTogJ3VpLWRldmljZV9ub3RfaW5pdGlhbGl6ZWQnLFxuICAgIFNFRURMRVNTOiAndWktZGV2aWNlX3NlZWRsZXNzJyxcbiAgICBGSVJNV0FSRV9PTEQ6ICd1aS1kZXZpY2VfZmlybXdhcmVfb2xkJyxcbiAgICBGSVJNV0FSRV9PVVREQVRFRDogJ3VpLWRldmljZV9maXJtd2FyZV9vdXRkYXRlZCcsXG4gICAgRklSTVdBUkVfTk9UX1NVUFBPUlRFRDogJ3VpLWRldmljZV9maXJtd2FyZV91bnN1cHBvcnRlZCcsXG4gICAgRklSTVdBUkVfTk9UX0NPTVBBVElCTEU6ICd1aS1kZXZpY2VfZmlybXdhcmVfbm90X2NvbXBhdGlibGUnLFxuICAgIEZJUk1XQVJFX05PVF9JTlNUQUxMRUQ6ICd1aS1kZXZpY2VfZmlybXdhcmVfbm90X2luc3RhbGxlZCcsXG4gICAgRklSTVdBUkVfUFJPR1JFU1M6ICd1aS1maXJtd2FyZS1wcm9ncmVzcycsXG4gICAgREVWSUNFX05FRURTX0JBQ0tVUDogJ3VpLWRldmljZV9uZWVkc19iYWNrdXAnLFxuICAgIFJFUVVFU1RfVUlfV0lORE9XOiAndWktcmVxdWVzdF93aW5kb3cnLFxuICAgIENMT1NFX1VJX1dJTkRPVzogJ3VpLWNsb3NlX3dpbmRvdycsXG4gICAgUkVRVUVTVF9QRVJNSVNTSU9OOiAndWktcmVxdWVzdF9wZXJtaXNzaW9uJyxcbiAgICBSRVFVRVNUX0NPTkZJUk1BVElPTjogJ3VpLXJlcXVlc3RfY29uZmlybWF0aW9uJyxcbiAgICBSRVFVRVNUX1BJTjogJ3VpLXJlcXVlc3RfcGluJyxcbiAgICBJTlZBTElEX1BJTjogJ3VpLWludmFsaWRfcGluJyxcbiAgICBSRVFVRVNUX1BBU1NQSFJBU0U6ICd1aS1yZXF1ZXN0X3Bhc3NwaHJhc2UnLFxuICAgIFJFUVVFU1RfUEFTU1BIUkFTRV9PTl9ERVZJQ0U6ICd1aS1yZXF1ZXN0X3Bhc3NwaHJhc2Vfb25fZGV2aWNlJyxcbiAgICBJTlZBTElEX1BBU1NQSFJBU0U6ICd1aS1pbnZhbGlkX3Bhc3NwaHJhc2UnLFxuICAgIENPTk5FQ1Q6ICd1aS1jb25uZWN0JyxcbiAgICBMT0FESU5HOiAndWktbG9hZGluZycsXG4gICAgU0VUX09QRVJBVElPTjogJ3VpLXNldF9vcGVyYXRpb24nLFxuICAgIFNFTEVDVF9ERVZJQ0U6ICd1aS1zZWxlY3RfZGV2aWNlJyxcbiAgICBTRUxFQ1RfQUNDT1VOVDogJ3VpLXNlbGVjdF9hY2NvdW50JyxcbiAgICBTRUxFQ1RfRkVFOiAndWktc2VsZWN0X2ZlZScsXG4gICAgVVBEQVRFX0NVU1RPTV9GRUU6ICd1aS11cGRhdGVfY3VzdG9tX2ZlZScsXG4gICAgSU5TVUZGSUNJRU5UX0ZVTkRTOiAndWktaW5zdWZmaWNpZW50X2Z1bmRzJyxcbiAgICBSRVFVRVNUX0JVVFRPTjogJ3VpLWJ1dHRvbicsXG4gICAgUkVRVUVTVF9XT1JEOiAndWktcmVxdWVzdF93b3JkJyxcbiAgICBMT0dJTl9DSEFMTEVOR0VfUkVRVUVTVDogJ3VpLWxvZ2luX2NoYWxsZW5nZV9yZXF1ZXN0JyxcbiAgICBCVU5ETEVfUFJPR1JFU1M6ICd1aS1idW5kbGVfcHJvZ3Jlc3MnLFxuICAgIEFERFJFU1NfVkFMSURBVElPTjogJ3VpLWFkZHJlc3NfdmFsaWRhdGlvbicsXG4gICAgSUZSQU1FX0ZBSUxVUkU6ICd1aS1pZnJhbWVfZmFpbHVyZScsXG59O1xuY29uc3QgY3JlYXRlVWlNZXNzYWdlID0gKHR5cGUsIHBheWxvYWQpID0+ICh7XG4gICAgZXZlbnQ6IGV4cG9ydHMuVUlfRVZFTlQsXG4gICAgdHlwZSxcbiAgICBwYXlsb2FkLFxufSk7XG5leHBvcnRzLmNyZWF0ZVVpTWVzc2FnZSA9IGNyZWF0ZVVpTWVzc2FnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpLXJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/ui-request.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/ui-response.js":
/*!****************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/ui-response.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createUiResponse = exports.UI_RESPONSE = void 0;\nconst ui_request_1 = __webpack_require__(/*! ./ui-request */ \"./node_modules/@trezor/connect/lib/events/ui-request.js\");\nexports.UI_RESPONSE = {\n    RECEIVE_PERMISSION: 'ui-receive_permission',\n    RECEIVE_CONFIRMATION: 'ui-receive_confirmation',\n    RECEIVE_PIN: 'ui-receive_pin',\n    RECEIVE_PASSPHRASE: 'ui-receive_passphrase',\n    RECEIVE_DEVICE: 'ui-receive_device',\n    RECEIVE_ACCOUNT: 'ui-receive_account',\n    RECEIVE_FEE: 'ui-receive_fee',\n    RECEIVE_WORD: 'ui-receive_word',\n    INVALID_PASSPHRASE_ACTION: 'ui-invalid_passphrase_action',\n    CHANGE_SETTINGS: 'ui-change_settings',\n    LOGIN_CHALLENGE_RESPONSE: 'ui-login_challenge_response',\n};\nconst createUiResponse = (type, payload) => ({\n    event: ui_request_1.UI_EVENT,\n    type,\n    payload,\n});\nexports.createUiResponse = createUiResponse;\n//# sourceMappingURL=ui-response.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvdWktcmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsbUJBQW1CO0FBQzlDLHFCQUFxQixtQkFBTyxDQUFDLDZFQUFjO0FBQzNDLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvZXZlbnRzL3VpLXJlc3BvbnNlLmpzPzYwOTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVVpUmVzcG9uc2UgPSBleHBvcnRzLlVJX1JFU1BPTlNFID0gdm9pZCAwO1xuY29uc3QgdWlfcmVxdWVzdF8xID0gcmVxdWlyZShcIi4vdWktcmVxdWVzdFwiKTtcbmV4cG9ydHMuVUlfUkVTUE9OU0UgPSB7XG4gICAgUkVDRUlWRV9QRVJNSVNTSU9OOiAndWktcmVjZWl2ZV9wZXJtaXNzaW9uJyxcbiAgICBSRUNFSVZFX0NPTkZJUk1BVElPTjogJ3VpLXJlY2VpdmVfY29uZmlybWF0aW9uJyxcbiAgICBSRUNFSVZFX1BJTjogJ3VpLXJlY2VpdmVfcGluJyxcbiAgICBSRUNFSVZFX1BBU1NQSFJBU0U6ICd1aS1yZWNlaXZlX3Bhc3NwaHJhc2UnLFxuICAgIFJFQ0VJVkVfREVWSUNFOiAndWktcmVjZWl2ZV9kZXZpY2UnLFxuICAgIFJFQ0VJVkVfQUNDT1VOVDogJ3VpLXJlY2VpdmVfYWNjb3VudCcsXG4gICAgUkVDRUlWRV9GRUU6ICd1aS1yZWNlaXZlX2ZlZScsXG4gICAgUkVDRUlWRV9XT1JEOiAndWktcmVjZWl2ZV93b3JkJyxcbiAgICBJTlZBTElEX1BBU1NQSFJBU0VfQUNUSU9OOiAndWktaW52YWxpZF9wYXNzcGhyYXNlX2FjdGlvbicsXG4gICAgQ0hBTkdFX1NFVFRJTkdTOiAndWktY2hhbmdlX3NldHRpbmdzJyxcbiAgICBMT0dJTl9DSEFMTEVOR0VfUkVTUE9OU0U6ICd1aS1sb2dpbl9jaGFsbGVuZ2VfcmVzcG9uc2UnLFxufTtcbmNvbnN0IGNyZWF0ZVVpUmVzcG9uc2UgPSAodHlwZSwgcGF5bG9hZCkgPT4gKHtcbiAgICBldmVudDogdWlfcmVxdWVzdF8xLlVJX0VWRU5ULFxuICAgIHR5cGUsXG4gICAgcGF5bG9hZCxcbn0pO1xuZXhwb3J0cy5jcmVhdGVVaVJlc3BvbnNlID0gY3JlYXRlVWlSZXNwb25zZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpLXJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/ui-response.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/webextension.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/webextension.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WEBEXTENSION = void 0;\nexports.WEBEXTENSION = {\n    USB_PERMISSIONS_BROADCAST: 'usb-permissions',\n    USB_PERMISSIONS_INIT: 'usb-permissions-init',\n    USB_PERMISSIONS_CLOSE: 'usb-permissions-close',\n    USB_PERMISSIONS_FINISHED: 'usb-permissions-finished',\n    CHANNEL_HANDSHAKE_CONFIRM: 'channel-handshake-confirm',\n};\n//# sourceMappingURL=webextension.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvd2ViZXh0ZW5zaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvZXZlbnRzL3dlYmV4dGVuc2lvbi5qcz9kMGQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5XRUJFWFRFTlNJT04gPSB2b2lkIDA7XG5leHBvcnRzLldFQkVYVEVOU0lPTiA9IHtcbiAgICBVU0JfUEVSTUlTU0lPTlNfQlJPQURDQVNUOiAndXNiLXBlcm1pc3Npb25zJyxcbiAgICBVU0JfUEVSTUlTU0lPTlNfSU5JVDogJ3VzYi1wZXJtaXNzaW9ucy1pbml0JyxcbiAgICBVU0JfUEVSTUlTU0lPTlNfQ0xPU0U6ICd1c2ItcGVybWlzc2lvbnMtY2xvc2UnLFxuICAgIFVTQl9QRVJNSVNTSU9OU19GSU5JU0hFRDogJ3VzYi1wZXJtaXNzaW9ucy1maW5pc2hlZCcsXG4gICAgQ0hBTk5FTF9IQU5EU0hBS0VfQ09ORklSTTogJ2NoYW5uZWwtaGFuZHNoYWtlLWNvbmZpcm0nLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdlYmV4dGVuc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/webextension.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/exports.js":
/*!*****************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/exports.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseConnectSettings = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/@trezor/connect/lib/constants/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./events */ \"./node_modules/@trezor/connect/lib/events/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@trezor/connect/lib/types/index.js\"), exports);\nvar connectSettings_1 = __webpack_require__(/*! ./data/connectSettings */ \"./node_modules/@trezor/connect/lib/data/connectSettings.js\");\nObject.defineProperty(exports, \"parseConnectSettings\", ({ enumerable: true, get: function () { return connectSettings_1.parseConnectSettings; } }));\n//# sourceMappingURL=exports.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9leHBvcnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QixnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBTztBQUMvQixxQkFBcUIsbUJBQU8sQ0FBQywwRUFBYTtBQUMxQyxxQkFBcUIsbUJBQU8sQ0FBQyxvRUFBVTtBQUN2QyxxQkFBcUIsbUJBQU8sQ0FBQyxrRUFBUztBQUN0Qyx3QkFBd0IsbUJBQU8sQ0FBQywwRkFBd0I7QUFDeEQsd0RBQXVELEVBQUUscUNBQXFDLGtEQUFrRCxFQUFDO0FBQ2pKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2V4cG9ydHMuanM/MTk2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VDb25uZWN0U2V0dGluZ3MgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29uc3RhbnRzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2V2ZW50c1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG52YXIgY29ubmVjdFNldHRpbmdzXzEgPSByZXF1aXJlKFwiLi9kYXRhL2Nvbm5lY3RTZXR0aW5nc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlQ29ubmVjdFNldHRpbmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25uZWN0U2V0dGluZ3NfMS5wYXJzZUNvbm5lY3RTZXR0aW5nczsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4cG9ydHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/exports.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/factory.js":
/*!*****************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/factory.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.factory = void 0;\nconst events_1 = __webpack_require__(/*! ./events */ \"./node_modules/@trezor/connect/lib/events/index.js\");\nconst factory = ({ eventEmitter, manifest, init, call, requestLogin, uiResponse, renderWebUSBButton, disableWebUSB, requestWebUSBDevice, cancel, dispose, }) => {\n    const api = {\n        manifest,\n        init,\n        getSettings: () => call({ method: 'getSettings' }),\n        on: (type, fn) => {\n            eventEmitter.on(type, fn);\n        },\n        off: (type, fn) => {\n            eventEmitter.removeListener(type, fn);\n        },\n        removeAllListeners: type => {\n            if (typeof type === 'string') {\n                eventEmitter.removeAllListeners(type);\n            }\n            else {\n                eventEmitter.removeAllListeners();\n            }\n        },\n        uiResponse,\n        blockchainGetAccountBalanceHistory: params => call({ ...params, method: 'blockchainGetAccountBalanceHistory' }),\n        blockchainGetCurrentFiatRates: params => call({ ...params, method: 'blockchainGetCurrentFiatRates' }),\n        blockchainGetFiatRatesForTimestamps: params => call({ ...params, method: 'blockchainGetFiatRatesForTimestamps' }),\n        blockchainDisconnect: params => call({ ...params, method: 'blockchainDisconnect' }),\n        blockchainEstimateFee: params => call({ ...params, method: 'blockchainEstimateFee' }),\n        blockchainGetTransactions: params => call({ ...params, method: 'blockchainGetTransactions' }),\n        blockchainSetCustomBackend: params => call({ ...params, method: 'blockchainSetCustomBackend' }),\n        blockchainSubscribe: params => call({ ...params, method: 'blockchainSubscribe' }),\n        blockchainSubscribeFiatRates: params => call({ ...params, method: 'blockchainSubscribeFiatRates' }),\n        blockchainUnsubscribe: params => call({ ...params, method: 'blockchainUnsubscribe' }),\n        blockchainUnsubscribeFiatRates: params => call({ ...params, method: 'blockchainUnsubscribeFiatRates' }),\n        requestLogin: params => requestLogin(params),\n        cardanoGetAddress: params => call({\n            ...params,\n            method: 'cardanoGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        cardanoGetNativeScriptHash: params => call({ ...params, method: 'cardanoGetNativeScriptHash' }),\n        cardanoGetPublicKey: params => call({ ...params, method: 'cardanoGetPublicKey' }),\n        cardanoSignTransaction: params => call({ ...params, method: 'cardanoSignTransaction' }),\n        cardanoComposeTransaction: params => call({ ...params, method: 'cardanoComposeTransaction' }),\n        cipherKeyValue: params => call({ ...params, method: 'cipherKeyValue' }),\n        composeTransaction: params => call({ ...params, method: 'composeTransaction' }),\n        ethereumGetAddress: params => call({\n            ...params,\n            method: 'ethereumGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        ethereumGetPublicKey: params => call({ ...params, method: 'ethereumGetPublicKey' }),\n        ethereumSignMessage: params => call({ ...params, method: 'ethereumSignMessage' }),\n        ethereumSignTransaction: params => call({ ...params, method: 'ethereumSignTransaction' }),\n        ethereumSignTypedData: params => call({ ...params, method: 'ethereumSignTypedData' }),\n        ethereumVerifyMessage: params => call({ ...params, method: 'ethereumVerifyMessage' }),\n        getAccountDescriptor: params => call({ ...params, method: 'getAccountDescriptor' }),\n        getAccountInfo: params => call({ ...params, method: 'getAccountInfo' }),\n        getAddress: params => call({\n            ...params,\n            method: 'getAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        getDeviceState: params => call({ ...params, method: 'getDeviceState' }),\n        getFeatures: params => call({ ...params, method: 'getFeatures' }),\n        getFirmwareHash: params => call({ ...params, method: 'getFirmwareHash' }),\n        getOwnershipId: params => call({ ...params, method: 'getOwnershipId' }),\n        getOwnershipProof: params => call({ ...params, method: 'getOwnershipProof' }),\n        getPublicKey: params => call({ ...params, method: 'getPublicKey' }),\n        nemGetAddress: params => call({\n            ...params,\n            method: 'nemGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        nemSignTransaction: params => call({ ...params, method: 'nemSignTransaction' }),\n        pushTransaction: params => call({ ...params, method: 'pushTransaction' }),\n        rippleGetAddress: params => call({\n            ...params,\n            method: 'rippleGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        rippleSignTransaction: params => call({ ...params, method: 'rippleSignTransaction' }),\n        signMessage: params => call({ ...params, method: 'signMessage' }),\n        signTransaction: params => call({ ...params, method: 'signTransaction' }),\n        solanaGetPublicKey: params => call({ ...params, method: 'solanaGetPublicKey' }),\n        solanaGetAddress: params => call({ ...params, method: 'solanaGetAddress' }),\n        solanaSignTransaction: params => call({ ...params, method: 'solanaSignTransaction' }),\n        stellarGetAddress: params => call({\n            ...params,\n            method: 'stellarGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        stellarSignTransaction: params => call({ ...params, method: 'stellarSignTransaction' }),\n        tezosGetAddress: params => call({\n            ...params,\n            method: 'tezosGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        tezosGetPublicKey: params => call({ ...params, method: 'tezosGetPublicKey' }),\n        tezosSignTransaction: params => call({ ...params, method: 'tezosSignTransaction' }),\n        unlockPath: params => call({ ...params, method: 'unlockPath' }),\n        eosGetPublicKey: params => call({ ...params, method: 'eosGetPublicKey' }),\n        eosSignTransaction: params => call({ ...params, method: 'eosSignTransaction' }),\n        binanceGetAddress: params => call({\n            ...params,\n            method: 'binanceGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        binanceGetPublicKey: params => call({ ...params, method: 'binanceGetPublicKey' }),\n        binanceSignTransaction: params => call({ ...params, method: 'binanceSignTransaction' }),\n        verifyMessage: params => call({ ...params, method: 'verifyMessage' }),\n        resetDevice: params => call({ ...params, method: 'resetDevice' }),\n        wipeDevice: params => call({ ...params, method: 'wipeDevice' }),\n        checkFirmwareAuthenticity: params => call({ ...params, method: 'checkFirmwareAuthenticity' }),\n        applyFlags: params => call({ ...params, method: 'applyFlags' }),\n        applySettings: params => call({ ...params, method: 'applySettings' }),\n        authenticateDevice: params => call({ ...params, method: 'authenticateDevice' }),\n        authorizeCoinjoin: params => call({ ...params, method: 'authorizeCoinjoin' }),\n        cancelCoinjoinAuthorization: params => call({ ...params, method: 'cancelCoinjoinAuthorization' }),\n        showDeviceTutorial: params => call({ ...params, method: 'showDeviceTutorial' }),\n        backupDevice: params => call({ ...params, method: 'backupDevice' }),\n        changeLanguage: params => call({ ...params, method: 'changeLanguage' }),\n        changePin: params => call({ ...params, method: 'changePin' }),\n        changeWipeCode: params => call({ ...params, method: 'changeWipeCode' }),\n        firmwareUpdate: params => call({ ...params, method: 'firmwareUpdate' }),\n        recoveryDevice: params => call({ ...params, method: 'recoveryDevice' }),\n        getCoinInfo: params => call({ ...params, method: 'getCoinInfo' }),\n        rebootToBootloader: params => call({ ...params, method: 'rebootToBootloader' }),\n        setBusy: params => call({ ...params, method: 'setBusy' }),\n        setProxy: params => call({ ...params, method: 'setProxy' }),\n        dispose,\n        cancel,\n        renderWebUSBButton,\n        disableWebUSB,\n        requestWebUSBDevice,\n    };\n    return api;\n};\nexports.factory = factory;\n//# sourceMappingURL=factory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/factory.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/account.js":
/*!***********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/account.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hY2NvdW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL3R5cGVzL2FjY291bnQuanM/MGY2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjY291bnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/account.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/binance/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/binance/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BinanceSignTransaction = exports.BinancePreparedTransaction = exports.BinancePreparedMessage = exports.BinanceSDKTransaction = void 0;\nconst constants_1 = __webpack_require__(/*! ../../../constants */ \"./node_modules/@trezor/connect/lib/constants/index.js\");\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.BinanceSDKTransaction = schema_utils_1.Type.Object({\n    chain_id: schema_utils_1.Type.String(),\n    account_number: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    memo: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    transfer: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceTransferMsg),\n    placeOrder: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceOrderMsg),\n    cancelOrder: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceCancelMsg),\n});\nexports.BinancePreparedMessage = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Intersect([\n        constants_1.PROTO.BinanceTransferMsg,\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('BinanceTransferMsg'),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        constants_1.PROTO.BinanceOrderMsg,\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('BinanceOrderMsg'),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        constants_1.PROTO.BinanceCancelMsg,\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('BinanceCancelMsg'),\n        }),\n    ]),\n]);\nexports.BinancePreparedTransaction = schema_utils_1.Type.Intersect([\n    exports.BinanceSDKTransaction,\n    schema_utils_1.Type.Object({\n        messages: schema_utils_1.Type.Array(exports.BinancePreparedMessage),\n        account_number: schema_utils_1.Type.Number(),\n        sequence: schema_utils_1.Type.Number(),\n        source: schema_utils_1.Type.Number(),\n    }),\n]);\nexports.BinanceSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    transaction: exports.BinanceSDKTransaction,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvYmluYW5jZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEIsR0FBRyxrQ0FBa0MsR0FBRyw4QkFBOEIsR0FBRyw2QkFBNkI7QUFDcEksb0JBQW9CLG1CQUFPLENBQUMsaUZBQW9CO0FBQ2hELGlCQUFpQixtQkFBTyxDQUFDLHdFQUFjO0FBQ3ZDLHVCQUF1QixtQkFBTyxDQUFDLDhFQUFzQjtBQUNyRCw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvYmluYW5jZS9pbmRleC5qcz9hMTNiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CaW5hbmNlU2lnblRyYW5zYWN0aW9uID0gZXhwb3J0cy5CaW5hbmNlUHJlcGFyZWRUcmFuc2FjdGlvbiA9IGV4cG9ydHMuQmluYW5jZVByZXBhcmVkTWVzc2FnZSA9IGV4cG9ydHMuQmluYW5jZVNES1RyYW5zYWN0aW9uID0gdm9pZCAwO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29uc3RhbnRzXCIpO1xuY29uc3QgcGFyYW1zXzEgPSByZXF1aXJlKFwiLi4vLi4vcGFyYW1zXCIpO1xuY29uc3Qgc2NoZW1hX3V0aWxzXzEgPSByZXF1aXJlKFwiQHRyZXpvci9zY2hlbWEtdXRpbHNcIik7XG5leHBvcnRzLkJpbmFuY2VTREtUcmFuc2FjdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBjaGFpbl9pZDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBhY2NvdW50X251bWJlcjogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpKSxcbiAgICBtZW1vOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIHNlcXVlbmNlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCkpLFxuICAgIHNvdXJjZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpKSxcbiAgICB0cmFuc2Zlcjogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChjb25zdGFudHNfMS5QUk9UTy5CaW5hbmNlVHJhbnNmZXJNc2cpLFxuICAgIHBsYWNlT3JkZXI6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoY29uc3RhbnRzXzEuUFJPVE8uQmluYW5jZU9yZGVyTXNnKSxcbiAgICBjYW5jZWxPcmRlcjogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChjb25zdGFudHNfMS5QUk9UTy5CaW5hbmNlQ2FuY2VsTXNnKSxcbn0pO1xuZXhwb3J0cy5CaW5hbmNlUHJlcGFyZWRNZXNzYWdlID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5VbmlvbihbXG4gICAgc2NoZW1hX3V0aWxzXzEuVHlwZS5JbnRlcnNlY3QoW1xuICAgICAgICBjb25zdGFudHNfMS5QUk9UTy5CaW5hbmNlVHJhbnNmZXJNc2csXG4gICAgICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgICAgIHR5cGU6IHNjaGVtYV91dGlsc18xLlR5cGUuTGl0ZXJhbCgnQmluYW5jZVRyYW5zZmVyTXNnJyksXG4gICAgICAgIH0pLFxuICAgIF0pLFxuICAgIHNjaGVtYV91dGlsc18xLlR5cGUuSW50ZXJzZWN0KFtcbiAgICAgICAgY29uc3RhbnRzXzEuUFJPVE8uQmluYW5jZU9yZGVyTXNnLFxuICAgICAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgICAgICAgICB0eXBlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoJ0JpbmFuY2VPcmRlck1zZycpLFxuICAgICAgICB9KSxcbiAgICBdKSxcbiAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLkludGVyc2VjdChbXG4gICAgICAgIGNvbnN0YW50c18xLlBST1RPLkJpbmFuY2VDYW5jZWxNc2csXG4gICAgICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgICAgIHR5cGU6IHNjaGVtYV91dGlsc18xLlR5cGUuTGl0ZXJhbCgnQmluYW5jZUNhbmNlbE1zZycpLFxuICAgICAgICB9KSxcbiAgICBdKSxcbl0pO1xuZXhwb3J0cy5CaW5hbmNlUHJlcGFyZWRUcmFuc2FjdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuSW50ZXJzZWN0KFtcbiAgICBleHBvcnRzLkJpbmFuY2VTREtUcmFuc2FjdGlvbixcbiAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgICAgIG1lc3NhZ2VzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLkFycmF5KGV4cG9ydHMuQmluYW5jZVByZXBhcmVkTWVzc2FnZSksXG4gICAgICAgIGFjY291bnRfbnVtYmVyOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgICAgICBzZXF1ZW5jZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICAgICAgc291cmNlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIH0pLFxuXSk7XG5leHBvcnRzLkJpbmFuY2VTaWduVHJhbnNhY3Rpb24gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgcGF0aDogcGFyYW1zXzEuRGVyaXZhdGlvblBhdGgsXG4gICAgdHJhbnNhY3Rpb246IGV4cG9ydHMuQmluYW5jZVNES1RyYW5zYWN0aW9uLFxuICAgIGNodW5raWZ5OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/binance/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/bitcoin/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/bitcoin/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VerifyMessage = exports.SignMessage = void 0;\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.SignMessage = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    coin: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    message: schema_utils_1.Type.String(),\n    hex: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    no_script_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.VerifyMessage = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n    message: schema_utils_1.Type.String(),\n    coin: schema_utils_1.Type.String(),\n    hex: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvYml0Y29pbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyxtQkFBbUI7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMsd0VBQWM7QUFDdkMsdUJBQXVCLG1CQUFPLENBQUMsOEVBQXNCO0FBQ3JELG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL3R5cGVzL2FwaS9iaXRjb2luL2luZGV4LmpzPzEwMWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZlcmlmeU1lc3NhZ2UgPSBleHBvcnRzLlNpZ25NZXNzYWdlID0gdm9pZCAwO1xuY29uc3QgcGFyYW1zXzEgPSByZXF1aXJlKFwiLi4vLi4vcGFyYW1zXCIpO1xuY29uc3Qgc2NoZW1hX3V0aWxzXzEgPSByZXF1aXJlKFwiQHRyZXpvci9zY2hlbWEtdXRpbHNcIik7XG5leHBvcnRzLlNpZ25NZXNzYWdlID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHBhdGg6IHBhcmFtc18xLkRlcml2YXRpb25QYXRoLFxuICAgIGNvaW46IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSksXG4gICAgbWVzc2FnZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBoZXg6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCkpLFxuICAgIG5vX3NjcmlwdF90eXBlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbn0pO1xuZXhwb3J0cy5WZXJpZnlNZXNzYWdlID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIGFkZHJlc3M6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgc2lnbmF0dXJlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIG1lc3NhZ2U6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgY29pbjogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBoZXg6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCkpLFxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/bitcoin/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/cardano/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/cardano/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CardanoSignedTxData = exports.CardanoAuxiliaryDataSupplement = exports.CardanoSignedTxWitness = exports.CardanoSignTransactionExtended = exports.CardanoSignTransaction = exports.CardanoAuxiliaryData = exports.CardanoCVoteRegistrationParameters = exports.CardanoCVoteRegistrationDelegation = exports.CardanoReferenceInput = exports.CardanoRequiredSigner = exports.CardanoCollateralInput = exports.CardanoMint = exports.CardanoWithdrawal = exports.CardanoCertificate = exports.CardanoPoolParameters = exports.CardanoPoolMargin = exports.CardanoPoolMetadata = exports.CardanoPoolRelay = exports.CardanoPoolOwner = exports.CardanoOutput = exports.CardanoAssetGroup = exports.CardanoToken = exports.CardanoInput = exports.CardanoGetPublicKey = exports.CardanoNativeScriptHash = exports.CardanoGetNativeScriptHash = exports.CardanoNativeScript = exports.CardanoGetAddress = exports.CardanoAddressParameters = exports.CardanoCertificatePointer = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nconst constants_1 = __webpack_require__(/*! ../../../constants */ \"./node_modules/@trezor/connect/lib/constants/index.js\");\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nexports.CardanoCertificatePointer = schema_utils_1.Type.Object({\n    blockIndex: schema_utils_1.Type.Number(),\n    txIndex: schema_utils_1.Type.Number(),\n    certificateIndex: schema_utils_1.Type.Number(),\n});\nexports.CardanoAddressParameters = schema_utils_1.Type.Object({\n    addressType: constants_1.PROTO.EnumCardanoAddressType,\n    path: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    stakingPath: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    stakingKeyHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    certificatePointer: schema_utils_1.Type.Optional(exports.CardanoCertificatePointer),\n    paymentScriptHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    stakingScriptHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoGetAddress = schema_utils_1.Type.Object({\n    addressParameters: exports.CardanoAddressParameters,\n    protocolMagic: schema_utils_1.Type.Number(),\n    networkId: schema_utils_1.Type.Number(),\n    address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    showOnTrezor: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    derivationType: schema_utils_1.Type.Optional(constants_1.PROTO.EnumCardanoDerivationType),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.CardanoNativeScript = schema_utils_1.Type.Recursive(This => schema_utils_1.Type.Object({\n    type: constants_1.PROTO.EnumCardanoNativeScriptType,\n    scripts: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(This)),\n    keyHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    keyPath: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    requiredSignaturesCount: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    invalidBefore: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    invalidHereafter: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}));\nexports.CardanoGetNativeScriptHash = schema_utils_1.Type.Object({\n    script: exports.CardanoNativeScript,\n    displayFormat: constants_1.PROTO.EnumCardanoNativeScriptHashDisplayFormat,\n    derivationType: schema_utils_1.Type.Optional(constants_1.PROTO.EnumCardanoDerivationType),\n});\nexports.CardanoNativeScriptHash = schema_utils_1.Type.Object({\n    scriptHash: schema_utils_1.Type.String(),\n});\nexports.CardanoGetPublicKey = schema_utils_1.Type.Intersect([\n    params_1.GetPublicKey,\n    schema_utils_1.Type.Object({\n        derivationType: schema_utils_1.Type.Optional(constants_1.PROTO.EnumCardanoDerivationType),\n    }),\n]);\nexports.CardanoInput = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoToken = schema_utils_1.Type.Object({\n    assetNameBytes: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    mintAmount: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoAssetGroup = schema_utils_1.Type.Object({\n    policyId: schema_utils_1.Type.String(),\n    tokenAmounts: schema_utils_1.Type.Array(exports.CardanoToken),\n});\nexports.CardanoOutput = schema_utils_1.Type.Intersect([\n    schema_utils_1.Type.Union([\n        schema_utils_1.Type.Object({\n            addressParameters: exports.CardanoAddressParameters,\n        }),\n        schema_utils_1.Type.Object({\n            address: schema_utils_1.Type.String(),\n        }),\n    ]),\n    schema_utils_1.Type.Object({\n        amount: schema_utils_1.Type.String(),\n        tokenBundle: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoAssetGroup)),\n        datumHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        format: schema_utils_1.Type.Optional(constants_1.PROTO.EnumCardanoTxOutputSerializationFormat),\n        inlineDatum: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        referenceScript: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    }),\n]);\nexports.CardanoPoolOwner = schema_utils_1.Type.Object({\n    stakingKeyPath: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    stakingKeyHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoPoolRelay = schema_utils_1.Type.Object({\n    type: constants_1.PROTO.EnumCardanoPoolRelayType,\n    ipv4Address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ipv6Address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    port: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    hostName: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoPoolMetadata = schema_utils_1.Type.Object({\n    url: schema_utils_1.Type.String(),\n    hash: schema_utils_1.Type.String(),\n});\nexports.CardanoPoolMargin = schema_utils_1.Type.Object({\n    numerator: schema_utils_1.Type.String(),\n    denominator: schema_utils_1.Type.String(),\n});\nexports.CardanoPoolParameters = schema_utils_1.Type.Object({\n    poolId: schema_utils_1.Type.String(),\n    vrfKeyHash: schema_utils_1.Type.String(),\n    pledge: schema_utils_1.Type.String(),\n    cost: schema_utils_1.Type.String(),\n    margin: exports.CardanoPoolMargin,\n    rewardAccount: schema_utils_1.Type.String(),\n    owners: schema_utils_1.Type.Array(exports.CardanoPoolOwner, { minItems: 1 }),\n    relays: schema_utils_1.Type.Array(exports.CardanoPoolRelay),\n    metadata: schema_utils_1.Type.Optional(exports.CardanoPoolMetadata),\n});\nexports.CardanoCertificate = schema_utils_1.Type.Object({\n    type: constants_1.PROTO.EnumCardanoCertificateType,\n    path: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    pool: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    poolParameters: schema_utils_1.Type.Optional(exports.CardanoPoolParameters),\n    scriptHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    keyHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoWithdrawal = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    amount: schema_utils_1.Type.String(),\n    scriptHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    keyHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoMint = schema_utils_1.Type.Array(exports.CardanoAssetGroup);\nexports.CardanoCollateralInput = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoRequiredSigner = schema_utils_1.Type.Object({\n    keyPath: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    keyHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoReferenceInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoCVoteRegistrationDelegation = schema_utils_1.Type.Object({\n    votePublicKey: schema_utils_1.Type.String(),\n    weight: schema_utils_1.Type.Number(),\n});\nexports.CardanoCVoteRegistrationParameters = schema_utils_1.Type.Object({\n    votePublicKey: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    stakingPath: params_1.DerivationPath,\n    paymentAddressParameters: schema_utils_1.Type.Optional(exports.CardanoAddressParameters),\n    nonce: schema_utils_1.Type.String(),\n    format: schema_utils_1.Type.Optional(constants_1.PROTO.EnumCardanoCVoteRegistrationFormat),\n    delegations: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoCVoteRegistrationDelegation)),\n    votingPurpose: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    paymentAddress: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoAuxiliaryData = schema_utils_1.Type.Object({\n    hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    cVoteRegistrationParameters: schema_utils_1.Type.Optional(exports.CardanoCVoteRegistrationParameters),\n});\nexports.CardanoSignTransaction = schema_utils_1.Type.Object({\n    inputs: schema_utils_1.Type.Array(exports.CardanoInput),\n    outputs: schema_utils_1.Type.Array(exports.CardanoOutput),\n    fee: schema_utils_1.Type.Uint(),\n    ttl: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    certificates: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoCertificate)),\n    withdrawals: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoWithdrawal)),\n    validityIntervalStart: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    auxiliaryData: schema_utils_1.Type.Optional(exports.CardanoAuxiliaryData),\n    mint: schema_utils_1.Type.Optional(exports.CardanoMint),\n    scriptDataHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    collateralInputs: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoCollateralInput)),\n    requiredSigners: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoRequiredSigner)),\n    collateralReturn: schema_utils_1.Type.Optional(exports.CardanoOutput),\n    totalCollateral: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    referenceInputs: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoReferenceInput)),\n    additionalWitnessRequests: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(params_1.DerivationPath)),\n    protocolMagic: schema_utils_1.Type.Number(),\n    networkId: schema_utils_1.Type.Number(),\n    signingMode: constants_1.PROTO.EnumCardanoTxSigningMode,\n    derivationType: schema_utils_1.Type.Optional(constants_1.PROTO.EnumCardanoDerivationType),\n    includeNetworkId: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.CardanoSignTransactionExtended = schema_utils_1.Type.Intersect([\n    exports.CardanoSignTransaction,\n    schema_utils_1.Type.Object({\n        unsignedTx: schema_utils_1.Type.Object({\n            body: schema_utils_1.Type.String(),\n            hash: schema_utils_1.Type.String(),\n        }),\n        testnet: schema_utils_1.Type.Boolean(),\n    }),\n]);\nexports.CardanoSignedTxWitness = schema_utils_1.Type.Object({\n    type: constants_1.PROTO.EnumCardanoTxWitnessType,\n    pubKey: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n    chainCode: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoAuxiliaryDataSupplement = schema_utils_1.Type.Object({\n    type: constants_1.PROTO.EnumCardanoTxAuxiliaryDataSupplementType,\n    auxiliaryDataHash: schema_utils_1.Type.String(),\n    cVoteRegistrationSignature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoSignedTxData = schema_utils_1.Type.Object({\n    hash: schema_utils_1.Type.String(),\n    witnesses: schema_utils_1.Type.Array(exports.CardanoSignedTxWitness),\n    auxiliaryDataSupplement: schema_utils_1.Type.Optional(exports.CardanoAuxiliaryDataSupplement),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvY2FyZGFuby9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRyxzQ0FBc0MsR0FBRyw4QkFBOEIsR0FBRyxzQ0FBc0MsR0FBRyw4QkFBOEIsR0FBRyw0QkFBNEIsR0FBRywwQ0FBMEMsR0FBRywwQ0FBMEMsR0FBRyw2QkFBNkIsR0FBRyw2QkFBNkIsR0FBRyw4QkFBOEIsR0FBRyxtQkFBbUIsR0FBRyx5QkFBeUIsR0FBRywwQkFBMEIsR0FBRyw2QkFBNkIsR0FBRyx5QkFBeUIsR0FBRywyQkFBMkIsR0FBRyx3QkFBd0IsR0FBRyx3QkFBd0IsR0FBRyxxQkFBcUIsR0FBRyx5QkFBeUIsR0FBRyxvQkFBb0IsR0FBRyxvQkFBb0IsR0FBRywyQkFBMkIsR0FBRywrQkFBK0IsR0FBRyxrQ0FBa0MsR0FBRywyQkFBMkIsR0FBRyx5QkFBeUIsR0FBRyxnQ0FBZ0MsR0FBRyxpQ0FBaUM7QUFDaDdCLHVCQUF1QixtQkFBTyxDQUFDLDhFQUFzQjtBQUNyRCxvQkFBb0IsbUJBQU8sQ0FBQyxpRkFBb0I7QUFDaEQsaUJBQWlCLG1CQUFPLENBQUMsd0VBQWM7QUFDdkMsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELCtCQUErQjtBQUMvQjtBQUNBLENBQUM7QUFDRCwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsQ0FBQztBQUNELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSxDQUFDO0FBQ0QseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxhQUFhO0FBQy9FO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsbUJBQW1CO0FBQ25CLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvY2FyZGFuby9pbmRleC5qcz8wYjg2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DYXJkYW5vU2lnbmVkVHhEYXRhID0gZXhwb3J0cy5DYXJkYW5vQXV4aWxpYXJ5RGF0YVN1cHBsZW1lbnQgPSBleHBvcnRzLkNhcmRhbm9TaWduZWRUeFdpdG5lc3MgPSBleHBvcnRzLkNhcmRhbm9TaWduVHJhbnNhY3Rpb25FeHRlbmRlZCA9IGV4cG9ydHMuQ2FyZGFub1NpZ25UcmFuc2FjdGlvbiA9IGV4cG9ydHMuQ2FyZGFub0F1eGlsaWFyeURhdGEgPSBleHBvcnRzLkNhcmRhbm9DVm90ZVJlZ2lzdHJhdGlvblBhcmFtZXRlcnMgPSBleHBvcnRzLkNhcmRhbm9DVm90ZVJlZ2lzdHJhdGlvbkRlbGVnYXRpb24gPSBleHBvcnRzLkNhcmRhbm9SZWZlcmVuY2VJbnB1dCA9IGV4cG9ydHMuQ2FyZGFub1JlcXVpcmVkU2lnbmVyID0gZXhwb3J0cy5DYXJkYW5vQ29sbGF0ZXJhbElucHV0ID0gZXhwb3J0cy5DYXJkYW5vTWludCA9IGV4cG9ydHMuQ2FyZGFub1dpdGhkcmF3YWwgPSBleHBvcnRzLkNhcmRhbm9DZXJ0aWZpY2F0ZSA9IGV4cG9ydHMuQ2FyZGFub1Bvb2xQYXJhbWV0ZXJzID0gZXhwb3J0cy5DYXJkYW5vUG9vbE1hcmdpbiA9IGV4cG9ydHMuQ2FyZGFub1Bvb2xNZXRhZGF0YSA9IGV4cG9ydHMuQ2FyZGFub1Bvb2xSZWxheSA9IGV4cG9ydHMuQ2FyZGFub1Bvb2xPd25lciA9IGV4cG9ydHMuQ2FyZGFub091dHB1dCA9IGV4cG9ydHMuQ2FyZGFub0Fzc2V0R3JvdXAgPSBleHBvcnRzLkNhcmRhbm9Ub2tlbiA9IGV4cG9ydHMuQ2FyZGFub0lucHV0ID0gZXhwb3J0cy5DYXJkYW5vR2V0UHVibGljS2V5ID0gZXhwb3J0cy5DYXJkYW5vTmF0aXZlU2NyaXB0SGFzaCA9IGV4cG9ydHMuQ2FyZGFub0dldE5hdGl2ZVNjcmlwdEhhc2ggPSBleHBvcnRzLkNhcmRhbm9OYXRpdmVTY3JpcHQgPSBleHBvcnRzLkNhcmRhbm9HZXRBZGRyZXNzID0gZXhwb3J0cy5DYXJkYW5vQWRkcmVzc1BhcmFtZXRlcnMgPSBleHBvcnRzLkNhcmRhbm9DZXJ0aWZpY2F0ZVBvaW50ZXIgPSB2b2lkIDA7XG5jb25zdCBzY2hlbWFfdXRpbHNfMSA9IHJlcXVpcmUoXCJAdHJlem9yL3NjaGVtYS11dGlsc1wiKTtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvbnN0YW50c1wiKTtcbmNvbnN0IHBhcmFtc18xID0gcmVxdWlyZShcIi4uLy4uL3BhcmFtc1wiKTtcbmV4cG9ydHMuQ2FyZGFub0NlcnRpZmljYXRlUG9pbnRlciA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBibG9ja0luZGV4OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIHR4SW5kZXg6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgY2VydGlmaWNhdGVJbmRleDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbn0pO1xuZXhwb3J0cy5DYXJkYW5vQWRkcmVzc1BhcmFtZXRlcnMgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgYWRkcmVzc1R5cGU6IGNvbnN0YW50c18xLlBST1RPLkVudW1DYXJkYW5vQWRkcmVzc1R5cGUsXG4gICAgcGF0aDogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChwYXJhbXNfMS5EZXJpdmF0aW9uUGF0aCksXG4gICAgc3Rha2luZ1BhdGg6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwocGFyYW1zXzEuRGVyaXZhdGlvblBhdGgpLFxuICAgIHN0YWtpbmdLZXlIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIGNlcnRpZmljYXRlUG9pbnRlcjogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChleHBvcnRzLkNhcmRhbm9DZXJ0aWZpY2F0ZVBvaW50ZXIpLFxuICAgIHBheW1lbnRTY3JpcHRIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIHN0YWtpbmdTY3JpcHRIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxufSk7XG5leHBvcnRzLkNhcmRhbm9HZXRBZGRyZXNzID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIGFkZHJlc3NQYXJhbWV0ZXJzOiBleHBvcnRzLkNhcmRhbm9BZGRyZXNzUGFyYW1ldGVycyxcbiAgICBwcm90b2NvbE1hZ2ljOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIG5ldHdvcmtJZDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBhZGRyZXNzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIHNob3dPblRyZXpvcjogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLkJvb2xlYW4oKSksXG4gICAgZGVyaXZhdGlvblR5cGU6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoY29uc3RhbnRzXzEuUFJPVE8uRW51bUNhcmRhbm9EZXJpdmF0aW9uVHlwZSksXG4gICAgY2h1bmtpZnk6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCkpLFxufSk7XG5leHBvcnRzLkNhcmRhbm9OYXRpdmVTY3JpcHQgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLlJlY3Vyc2l2ZShUaGlzID0+IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICB0eXBlOiBjb25zdGFudHNfMS5QUk9UTy5FbnVtQ2FyZGFub05hdGl2ZVNjcmlwdFR5cGUsXG4gICAgc2NyaXB0czogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLkFycmF5KFRoaXMpKSxcbiAgICBrZXlIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIGtleVBhdGg6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwocGFyYW1zXzEuRGVyaXZhdGlvblBhdGgpLFxuICAgIHJlcXVpcmVkU2lnbmF0dXJlc0NvdW50OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCkpLFxuICAgIGludmFsaWRCZWZvcmU6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSksXG4gICAgaW52YWxpZEhlcmVhZnRlcjogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbn0pKTtcbmV4cG9ydHMuQ2FyZGFub0dldE5hdGl2ZVNjcmlwdEhhc2ggPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgc2NyaXB0OiBleHBvcnRzLkNhcmRhbm9OYXRpdmVTY3JpcHQsXG4gICAgZGlzcGxheUZvcm1hdDogY29uc3RhbnRzXzEuUFJPVE8uRW51bUNhcmRhbm9OYXRpdmVTY3JpcHRIYXNoRGlzcGxheUZvcm1hdCxcbiAgICBkZXJpdmF0aW9uVHlwZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChjb25zdGFudHNfMS5QUk9UTy5FbnVtQ2FyZGFub0Rlcml2YXRpb25UeXBlKSxcbn0pO1xuZXhwb3J0cy5DYXJkYW5vTmF0aXZlU2NyaXB0SGFzaCA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBzY3JpcHRIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxufSk7XG5leHBvcnRzLkNhcmRhbm9HZXRQdWJsaWNLZXkgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLkludGVyc2VjdChbXG4gICAgcGFyYW1zXzEuR2V0UHVibGljS2V5LFxuICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgZGVyaXZhdGlvblR5cGU6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoY29uc3RhbnRzXzEuUFJPVE8uRW51bUNhcmRhbm9EZXJpdmF0aW9uVHlwZSksXG4gICAgfSksXG5dKTtcbmV4cG9ydHMuQ2FyZGFub0lucHV0ID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHBhdGg6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwocGFyYW1zXzEuRGVyaXZhdGlvblBhdGgpLFxuICAgIHByZXZfaGFzaDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBwcmV2X2luZGV4OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxufSk7XG5leHBvcnRzLkNhcmRhbm9Ub2tlbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBhc3NldE5hbWVCeXRlczogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBhbW91bnQ6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSksXG4gICAgbWludEFtb3VudDogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbn0pO1xuZXhwb3J0cy5DYXJkYW5vQXNzZXRHcm91cCA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBwb2xpY3lJZDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICB0b2tlbkFtb3VudHM6IHNjaGVtYV91dGlsc18xLlR5cGUuQXJyYXkoZXhwb3J0cy5DYXJkYW5vVG9rZW4pLFxufSk7XG5leHBvcnRzLkNhcmRhbm9PdXRwdXQgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLkludGVyc2VjdChbXG4gICAgc2NoZW1hX3V0aWxzXzEuVHlwZS5VbmlvbihbXG4gICAgICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgICAgIGFkZHJlc3NQYXJhbWV0ZXJzOiBleHBvcnRzLkNhcmRhbm9BZGRyZXNzUGFyYW1ldGVycyxcbiAgICAgICAgfSksXG4gICAgICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgICAgIGFkZHJlc3M6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgICAgIH0pLFxuICAgIF0pLFxuICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgYW1vdW50OiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgICAgICB0b2tlbkJ1bmRsZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLkFycmF5KGV4cG9ydHMuQ2FyZGFub0Fzc2V0R3JvdXApKSxcbiAgICAgICAgZGF0dW1IYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgICAgICBmb3JtYXQ6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoY29uc3RhbnRzXzEuUFJPVE8uRW51bUNhcmRhbm9UeE91dHB1dFNlcmlhbGl6YXRpb25Gb3JtYXQpLFxuICAgICAgICBpbmxpbmVEYXR1bTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbiAgICAgICAgcmVmZXJlbmNlU2NyaXB0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIH0pLFxuXSk7XG5leHBvcnRzLkNhcmRhbm9Qb29sT3duZXIgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgc3Rha2luZ0tleVBhdGg6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwocGFyYW1zXzEuRGVyaXZhdGlvblBhdGgpLFxuICAgIHN0YWtpbmdLZXlIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxufSk7XG5leHBvcnRzLkNhcmRhbm9Qb29sUmVsYXkgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgdHlwZTogY29uc3RhbnRzXzEuUFJPVE8uRW51bUNhcmRhbm9Qb29sUmVsYXlUeXBlLFxuICAgIGlwdjRBZGRyZXNzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIGlwdjZBZGRyZXNzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIHBvcnQ6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSksXG4gICAgaG9zdE5hbWU6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSksXG59KTtcbmV4cG9ydHMuQ2FyZGFub1Bvb2xNZXRhZGF0YSA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICB1cmw6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgaGFzaDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbn0pO1xuZXhwb3J0cy5DYXJkYW5vUG9vbE1hcmdpbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBudW1lcmF0b3I6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgZGVub21pbmF0b3I6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG59KTtcbmV4cG9ydHMuQ2FyZGFub1Bvb2xQYXJhbWV0ZXJzID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHBvb2xJZDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICB2cmZLZXlIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIHBsZWRnZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBjb3N0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIG1hcmdpbjogZXhwb3J0cy5DYXJkYW5vUG9vbE1hcmdpbixcbiAgICByZXdhcmRBY2NvdW50OiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIG93bmVyczogc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShleHBvcnRzLkNhcmRhbm9Qb29sT3duZXIsIHsgbWluSXRlbXM6IDEgfSksXG4gICAgcmVsYXlzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLkFycmF5KGV4cG9ydHMuQ2FyZGFub1Bvb2xSZWxheSksXG4gICAgbWV0YWRhdGE6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoZXhwb3J0cy5DYXJkYW5vUG9vbE1ldGFkYXRhKSxcbn0pO1xuZXhwb3J0cy5DYXJkYW5vQ2VydGlmaWNhdGUgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgdHlwZTogY29uc3RhbnRzXzEuUFJPVE8uRW51bUNhcmRhbm9DZXJ0aWZpY2F0ZVR5cGUsXG4gICAgcGF0aDogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChwYXJhbXNfMS5EZXJpdmF0aW9uUGF0aCksXG4gICAgcG9vbDogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbiAgICBwb29sUGFyYW1ldGVyczogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChleHBvcnRzLkNhcmRhbm9Qb29sUGFyYW1ldGVycyksXG4gICAgc2NyaXB0SGFzaDogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbiAgICBrZXlIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxufSk7XG5leHBvcnRzLkNhcmRhbm9XaXRoZHJhd2FsID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHBhdGg6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwocGFyYW1zXzEuRGVyaXZhdGlvblBhdGgpLFxuICAgIGFtb3VudDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBzY3JpcHRIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIGtleUhhc2g6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSksXG59KTtcbmV4cG9ydHMuQ2FyZGFub01pbnQgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLkFycmF5KGV4cG9ydHMuQ2FyZGFub0Fzc2V0R3JvdXApO1xuZXhwb3J0cy5DYXJkYW5vQ29sbGF0ZXJhbElucHV0ID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHBhdGg6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwocGFyYW1zXzEuRGVyaXZhdGlvblBhdGgpLFxuICAgIHByZXZfaGFzaDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBwcmV2X2luZGV4OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxufSk7XG5leHBvcnRzLkNhcmRhbm9SZXF1aXJlZFNpZ25lciA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBrZXlQYXRoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHBhcmFtc18xLkRlcml2YXRpb25QYXRoKSxcbiAgICBrZXlIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxufSk7XG5leHBvcnRzLkNhcmRhbm9SZWZlcmVuY2VJbnB1dCA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBwcmV2X2hhc2g6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgcHJldl9pbmRleDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbn0pO1xuZXhwb3J0cy5DYXJkYW5vQ1ZvdGVSZWdpc3RyYXRpb25EZWxlZ2F0aW9uID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHZvdGVQdWJsaWNLZXk6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgd2VpZ2h0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxufSk7XG5leHBvcnRzLkNhcmRhbm9DVm90ZVJlZ2lzdHJhdGlvblBhcmFtZXRlcnMgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgdm90ZVB1YmxpY0tleTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbiAgICBzdGFraW5nUGF0aDogcGFyYW1zXzEuRGVyaXZhdGlvblBhdGgsXG4gICAgcGF5bWVudEFkZHJlc3NQYXJhbWV0ZXJzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKGV4cG9ydHMuQ2FyZGFub0FkZHJlc3NQYXJhbWV0ZXJzKSxcbiAgICBub25jZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBmb3JtYXQ6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoY29uc3RhbnRzXzEuUFJPVE8uRW51bUNhcmRhbm9DVm90ZVJlZ2lzdHJhdGlvbkZvcm1hdCksXG4gICAgZGVsZWdhdGlvbnM6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShleHBvcnRzLkNhcmRhbm9DVm90ZVJlZ2lzdHJhdGlvbkRlbGVnYXRpb24pKSxcbiAgICB2b3RpbmdQdXJwb3NlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCkpLFxuICAgIHBheW1lbnRBZGRyZXNzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxufSk7XG5leHBvcnRzLkNhcmRhbm9BdXhpbGlhcnlEYXRhID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIGhhc2g6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSksXG4gICAgY1ZvdGVSZWdpc3RyYXRpb25QYXJhbWV0ZXJzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKGV4cG9ydHMuQ2FyZGFub0NWb3RlUmVnaXN0cmF0aW9uUGFyYW1ldGVycyksXG59KTtcbmV4cG9ydHMuQ2FyZGFub1NpZ25UcmFuc2FjdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBpbnB1dHM6IHNjaGVtYV91dGlsc18xLlR5cGUuQXJyYXkoZXhwb3J0cy5DYXJkYW5vSW5wdXQpLFxuICAgIG91dHB1dHM6IHNjaGVtYV91dGlsc18xLlR5cGUuQXJyYXkoZXhwb3J0cy5DYXJkYW5vT3V0cHV0KSxcbiAgICBmZWU6IHNjaGVtYV91dGlsc18xLlR5cGUuVWludCgpLFxuICAgIHR0bDogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlVpbnQoKSksXG4gICAgY2VydGlmaWNhdGVzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQXJyYXkoZXhwb3J0cy5DYXJkYW5vQ2VydGlmaWNhdGUpKSxcbiAgICB3aXRoZHJhd2Fsczogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLkFycmF5KGV4cG9ydHMuQ2FyZGFub1dpdGhkcmF3YWwpKSxcbiAgICB2YWxpZGl0eUludGVydmFsU3RhcnQ6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSksXG4gICAgYXV4aWxpYXJ5RGF0YTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChleHBvcnRzLkNhcmRhbm9BdXhpbGlhcnlEYXRhKSxcbiAgICBtaW50OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKGV4cG9ydHMuQ2FyZGFub01pbnQpLFxuICAgIHNjcmlwdERhdGFIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIGNvbGxhdGVyYWxJbnB1dHM6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShleHBvcnRzLkNhcmRhbm9Db2xsYXRlcmFsSW5wdXQpKSxcbiAgICByZXF1aXJlZFNpZ25lcnM6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShleHBvcnRzLkNhcmRhbm9SZXF1aXJlZFNpZ25lcikpLFxuICAgIGNvbGxhdGVyYWxSZXR1cm46IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoZXhwb3J0cy5DYXJkYW5vT3V0cHV0KSxcbiAgICB0b3RhbENvbGxhdGVyYWw6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSksXG4gICAgcmVmZXJlbmNlSW5wdXRzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQXJyYXkoZXhwb3J0cy5DYXJkYW5vUmVmZXJlbmNlSW5wdXQpKSxcbiAgICBhZGRpdGlvbmFsV2l0bmVzc1JlcXVlc3RzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQXJyYXkocGFyYW1zXzEuRGVyaXZhdGlvblBhdGgpKSxcbiAgICBwcm90b2NvbE1hZ2ljOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIG5ldHdvcmtJZDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBzaWduaW5nTW9kZTogY29uc3RhbnRzXzEuUFJPVE8uRW51bUNhcmRhbm9UeFNpZ25pbmdNb2RlLFxuICAgIGRlcml2YXRpb25UeXBlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKGNvbnN0YW50c18xLlBST1RPLkVudW1DYXJkYW5vRGVyaXZhdGlvblR5cGUpLFxuICAgIGluY2x1ZGVOZXR3b3JrSWQ6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCkpLFxuICAgIGNodW5raWZ5OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbn0pO1xuZXhwb3J0cy5DYXJkYW5vU2lnblRyYW5zYWN0aW9uRXh0ZW5kZWQgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLkludGVyc2VjdChbXG4gICAgZXhwb3J0cy5DYXJkYW5vU2lnblRyYW5zYWN0aW9uLFxuICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgdW5zaWduZWRUeDogc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgICAgICAgICAgYm9keTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICAgICAgICAgIGhhc2g6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgICAgIH0pLFxuICAgICAgICB0ZXN0bmV0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLkJvb2xlYW4oKSxcbiAgICB9KSxcbl0pO1xuZXhwb3J0cy5DYXJkYW5vU2lnbmVkVHhXaXRuZXNzID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHR5cGU6IGNvbnN0YW50c18xLlBST1RPLkVudW1DYXJkYW5vVHhXaXRuZXNzVHlwZSxcbiAgICBwdWJLZXk6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgc2lnbmF0dXJlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIGNoYWluQ29kZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbn0pO1xuZXhwb3J0cy5DYXJkYW5vQXV4aWxpYXJ5RGF0YVN1cHBsZW1lbnQgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgdHlwZTogY29uc3RhbnRzXzEuUFJPVE8uRW51bUNhcmRhbm9UeEF1eGlsaWFyeURhdGFTdXBwbGVtZW50VHlwZSxcbiAgICBhdXhpbGlhcnlEYXRhSGFzaDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBjVm90ZVJlZ2lzdHJhdGlvblNpZ25hdHVyZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbn0pO1xuZXhwb3J0cy5DYXJkYW5vU2lnbmVkVHhEYXRhID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIGhhc2g6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgd2l0bmVzc2VzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLkFycmF5KGV4cG9ydHMuQ2FyZGFub1NpZ25lZFR4V2l0bmVzcyksXG4gICAgYXV4aWxpYXJ5RGF0YVN1cHBsZW1lbnQ6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoZXhwb3J0cy5DYXJkYW5vQXV4aWxpYXJ5RGF0YVN1cHBsZW1lbnQpLFxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/cardano/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/eos/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/eos/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EosSignTransaction = exports.EosSDKTransaction = exports.EosTxAction = exports.EosTxActionCommon = exports.EosAuthorization = exports.EosTxHeader = exports.EosPublicKey = void 0;\nconst constants_1 = __webpack_require__(/*! ../../../constants */ \"./node_modules/@trezor/connect/lib/constants/index.js\");\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.EosPublicKey = schema_utils_1.Type.Object({\n    wifPublicKey: schema_utils_1.Type.String(),\n    rawPublicKey: schema_utils_1.Type.String(),\n    path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    serializedPath: schema_utils_1.Type.String(),\n});\nexports.EosTxHeader = schema_utils_1.Type.Object({\n    expiration: schema_utils_1.Type.Union([schema_utils_1.Type.Uint(), schema_utils_1.Type.String()]),\n    refBlockNum: schema_utils_1.Type.Number(),\n    refBlockPrefix: schema_utils_1.Type.Number(),\n    maxNetUsageWords: schema_utils_1.Type.Number(),\n    maxCpuUsageMs: schema_utils_1.Type.Number(),\n    delaySec: schema_utils_1.Type.Number(),\n});\nexports.EosAuthorization = schema_utils_1.Type.Object({\n    threshold: schema_utils_1.Type.Number(),\n    keys: schema_utils_1.Type.Array(constants_1.PROTO.EosAuthorizationKey),\n    accounts: schema_utils_1.Type.Array(schema_utils_1.Type.Object({\n        permission: constants_1.PROTO.EosPermissionLevel,\n        weight: schema_utils_1.Type.Number(),\n    })),\n    waits: schema_utils_1.Type.Array(constants_1.PROTO.EosAuthorizationWait),\n});\nexports.EosTxActionCommon = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    authorization: schema_utils_1.Type.Array(constants_1.PROTO.EosPermissionLevel),\n});\nexports.EosTxAction = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('transfer'),\n            data: schema_utils_1.Type.Object({\n                from: schema_utils_1.Type.String(),\n                to: schema_utils_1.Type.String(),\n                quantity: schema_utils_1.Type.String(),\n                memo: schema_utils_1.Type.String(),\n            }),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('delegatebw'),\n            data: schema_utils_1.Type.Object({\n                from: schema_utils_1.Type.String(),\n                receiver: schema_utils_1.Type.String(),\n                stake_net_quantity: schema_utils_1.Type.String(),\n                stake_cpu_quantity: schema_utils_1.Type.String(),\n                transfer: schema_utils_1.Type.Boolean(),\n            }),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('undelegatebw'),\n            data: schema_utils_1.Type.Object({\n                from: schema_utils_1.Type.String(),\n                receiver: schema_utils_1.Type.String(),\n                unstake_net_quantity: schema_utils_1.Type.String(),\n                unstake_cpu_quantity: schema_utils_1.Type.String(),\n            }),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('buyram'),\n            data: schema_utils_1.Type.Object({\n                payer: schema_utils_1.Type.String(),\n                receiver: schema_utils_1.Type.String(),\n                quant: schema_utils_1.Type.String(),\n            }),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('buyrambytes'),\n            data: constants_1.PROTO.EosActionBuyRamBytes,\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('sellram'),\n            data: constants_1.PROTO.EosActionSellRam,\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('voteproducer'),\n            data: schema_utils_1.Type.Object({\n                voter: schema_utils_1.Type.String(),\n                proxy: schema_utils_1.Type.String(),\n                producers: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n            }),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('refund'),\n            data: constants_1.PROTO.EosActionRefund,\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('updateauth'),\n            data: schema_utils_1.Type.Object({\n                account: schema_utils_1.Type.String(),\n                permission: schema_utils_1.Type.String(),\n                parent: schema_utils_1.Type.String(),\n                auth: exports.EosAuthorization,\n            }),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('deleteauth'),\n            data: constants_1.PROTO.EosActionDeleteAuth,\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('linkauth'),\n            data: constants_1.PROTO.EosActionLinkAuth,\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('unlinkauth'),\n            data: constants_1.PROTO.EosActionUnlinkAuth,\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('newaccount'),\n            data: schema_utils_1.Type.Object({\n                creator: schema_utils_1.Type.String(),\n                name: schema_utils_1.Type.String(),\n                owner: exports.EosAuthorization,\n                active: exports.EosAuthorization,\n            }),\n        }),\n    ]),\n]);\nexports.EosSDKTransaction = schema_utils_1.Type.Object({\n    chainId: schema_utils_1.Type.String(),\n    header: exports.EosTxHeader,\n    actions: schema_utils_1.Type.Array(schema_utils_1.Type.Union([\n        exports.EosTxAction,\n        schema_utils_1.Type.Intersect([\n            exports.EosTxActionCommon,\n            schema_utils_1.Type.Object({\n                name: schema_utils_1.Type.String(),\n                data: schema_utils_1.Type.String(),\n            }),\n        ]),\n    ])),\n});\nexports.EosSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    transaction: exports.EosSDKTransaction,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/eos/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/ethereum/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/ethereum/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EthereumVerifyMessage = exports.EthereumSignTypedHash = exports.EthereumSignTypedData = exports.EthereumSignTypedDataMessage = exports.EthereumSignTypedDataTypes = exports.EthereumSignedTx = exports.EthereumSignTransaction = exports.EthereumTransactionEIP1559 = exports.EthereumAccessList = exports.EthereumTransaction = exports.EthereumSignMessage = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nexports.EthereumSignMessage = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    message: schema_utils_1.Type.String(),\n    hex: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumTransaction = schema_utils_1.Type.Object({\n    to: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.String(),\n    gasPrice: schema_utils_1.Type.String(),\n    gasLimit: schema_utils_1.Type.String(),\n    maxFeePerGas: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n    maxPriorityFeePerGas: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n    nonce: schema_utils_1.Type.String(),\n    data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    chainId: schema_utils_1.Type.Number(),\n    txType: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.EthereumAccessList = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    storageKeys: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n});\nexports.EthereumTransactionEIP1559 = schema_utils_1.Type.Object({\n    to: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.String(),\n    gasLimit: schema_utils_1.Type.String(),\n    gasPrice: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n    nonce: schema_utils_1.Type.String(),\n    data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    chainId: schema_utils_1.Type.Number(),\n    maxFeePerGas: schema_utils_1.Type.String(),\n    maxPriorityFeePerGas: schema_utils_1.Type.String(),\n    accessList: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.EthereumAccessList)),\n});\nexports.EthereumSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    transaction: schema_utils_1.Type.Union([exports.EthereumTransaction, exports.EthereumTransactionEIP1559]),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumSignedTx = schema_utils_1.Type.Object({\n    v: schema_utils_1.Type.String(),\n    r: schema_utils_1.Type.String(),\n    s: schema_utils_1.Type.String(),\n    serializedTx: schema_utils_1.Type.String(),\n});\nconst EthereumSignTypedDataTypeProperty = schema_utils_1.Type.Object({\n    name: schema_utils_1.Type.String(),\n    type: schema_utils_1.Type.String(),\n});\nexports.EthereumSignTypedDataTypes = schema_utils_1.Type.Object({\n    EIP712Domain: schema_utils_1.Type.Array(EthereumSignTypedDataTypeProperty),\n}, {\n    additionalProperties: schema_utils_1.Type.Array(EthereumSignTypedDataTypeProperty),\n});\nexports.EthereumSignTypedDataMessage = schema_utils_1.Type.Object({\n    types: exports.EthereumSignTypedDataTypes,\n    primaryType: schema_utils_1.Type.String(),\n    domain: schema_utils_1.Type.Object({\n        name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        version: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        chainId: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.BigInt(), schema_utils_1.Type.String()])),\n        verifyingContract: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        salt: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.ArrayBuffer(), schema_utils_1.Type.String()])),\n    }),\n    message: schema_utils_1.Type.Object({}, {\n        additionalProperties: schema_utils_1.Type.Any(),\n    }),\n});\nexports.EthereumSignTypedData = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    data: exports.EthereumSignTypedDataMessage,\n    metamask_v4_compat: schema_utils_1.Type.Boolean(),\n    domain_separator_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n    message_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n});\nexports.EthereumSignTypedHash = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    data: exports.EthereumSignTypedDataMessage,\n    metamask_v4_compat: schema_utils_1.Type.Boolean(),\n    domain_separator_hash: schema_utils_1.Type.String(),\n    message_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.EthereumVerifyMessage = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    message: schema_utils_1.Type.String(),\n    hex: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    signature: schema_utils_1.Type.String(),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/ethereum/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvdHlwZXMvYXBpL2luZGV4LmpzPzZmNDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/ripple/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/ripple/index.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RippleSignedTx = exports.RippleSignTransaction = exports.RippleTransaction = exports.RipplePayment = void 0;\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.RipplePayment = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.String(),\n    destination: schema_utils_1.Type.String(),\n    destinationTag: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.RippleTransaction = schema_utils_1.Type.Object({\n    fee: schema_utils_1.Type.String(),\n    flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    sequence: schema_utils_1.Type.Number(),\n    maxLedgerVersion: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    payment: exports.RipplePayment,\n});\nexports.RippleSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    transaction: exports.RippleTransaction,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.RippleSignedTx = schema_utils_1.Type.Object({\n    serializedTx: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvcmlwcGxlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLDZCQUE2QixHQUFHLHlCQUF5QixHQUFHLHFCQUFxQjtBQUMxRyxpQkFBaUIsbUJBQU8sQ0FBQyx3RUFBYztBQUN2Qyx1QkFBdUIsbUJBQU8sQ0FBQyw4RUFBc0I7QUFDckQscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL3R5cGVzL2FwaS9yaXBwbGUvaW5kZXguanM/NWEyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmlwcGxlU2lnbmVkVHggPSBleHBvcnRzLlJpcHBsZVNpZ25UcmFuc2FjdGlvbiA9IGV4cG9ydHMuUmlwcGxlVHJhbnNhY3Rpb24gPSBleHBvcnRzLlJpcHBsZVBheW1lbnQgPSB2b2lkIDA7XG5jb25zdCBwYXJhbXNfMSA9IHJlcXVpcmUoXCIuLi8uLi9wYXJhbXNcIik7XG5jb25zdCBzY2hlbWFfdXRpbHNfMSA9IHJlcXVpcmUoXCJAdHJlem9yL3NjaGVtYS11dGlsc1wiKTtcbmV4cG9ydHMuUmlwcGxlUGF5bWVudCA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBhbW91bnQ6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgZGVzdGluYXRpb246IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgZGVzdGluYXRpb25UYWc6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSksXG59KTtcbmV4cG9ydHMuUmlwcGxlVHJhbnNhY3Rpb24gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgZmVlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIGZsYWdzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCkpLFxuICAgIHNlcXVlbmNlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIG1heExlZGdlclZlcnNpb246IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSksXG4gICAgcGF5bWVudDogZXhwb3J0cy5SaXBwbGVQYXltZW50LFxufSk7XG5leHBvcnRzLlJpcHBsZVNpZ25UcmFuc2FjdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBwYXRoOiBwYXJhbXNfMS5EZXJpdmF0aW9uUGF0aCxcbiAgICB0cmFuc2FjdGlvbjogZXhwb3J0cy5SaXBwbGVUcmFuc2FjdGlvbixcbiAgICBjaHVua2lmeTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLkJvb2xlYW4oKSksXG59KTtcbmV4cG9ydHMuUmlwcGxlU2lnbmVkVHggPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgc2VyaWFsaXplZFR4OiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIHNpZ25hdHVyZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/ripple/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/solana/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/solana/index.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SolanaSignedTransaction = exports.SolanaSignTransaction = exports.SolanaTxAdditionalInfo = exports.SolanaTxTokenAccountInfo = exports.SolanaPublicKey = void 0;\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.SolanaPublicKey = schema_utils_1.Type.Intersect([\n    params_1.PublicKey,\n    schema_utils_1.Type.Object({\n        publicKey: schema_utils_1.Type.String(),\n    }),\n]);\nexports.SolanaTxTokenAccountInfo = schema_utils_1.Type.Object({\n    baseAddress: schema_utils_1.Type.String(),\n    tokenProgram: schema_utils_1.Type.String(),\n    tokenMint: schema_utils_1.Type.String(),\n    tokenAccount: schema_utils_1.Type.String(),\n});\nexports.SolanaTxAdditionalInfo = schema_utils_1.Type.Object({\n    tokenAccountsInfos: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.SolanaTxTokenAccountInfo, { minItems: 1 })),\n});\nexports.SolanaSignTransaction = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())]),\n    serializedTx: schema_utils_1.Type.String(),\n    additionalInfo: schema_utils_1.Type.Optional(exports.SolanaTxAdditionalInfo),\n});\nexports.SolanaSignedTransaction = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvc29sYW5hL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQixHQUFHLDZCQUE2QixHQUFHLDhCQUE4QixHQUFHLGdDQUFnQyxHQUFHLHVCQUF1QjtBQUM3SixpQkFBaUIsbUJBQU8sQ0FBQyx3RUFBYztBQUN2Qyx1QkFBdUIsbUJBQU8sQ0FBQyw4RUFBc0I7QUFDckQsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw4QkFBOEI7QUFDOUIsbUhBQW1ILGFBQWE7QUFDaEksQ0FBQztBQUNELDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsK0JBQStCO0FBQy9CO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL3R5cGVzL2FwaS9zb2xhbmEvaW5kZXguanM/NzhkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU29sYW5hU2lnbmVkVHJhbnNhY3Rpb24gPSBleHBvcnRzLlNvbGFuYVNpZ25UcmFuc2FjdGlvbiA9IGV4cG9ydHMuU29sYW5hVHhBZGRpdGlvbmFsSW5mbyA9IGV4cG9ydHMuU29sYW5hVHhUb2tlbkFjY291bnRJbmZvID0gZXhwb3J0cy5Tb2xhbmFQdWJsaWNLZXkgPSB2b2lkIDA7XG5jb25zdCBwYXJhbXNfMSA9IHJlcXVpcmUoXCIuLi8uLi9wYXJhbXNcIik7XG5jb25zdCBzY2hlbWFfdXRpbHNfMSA9IHJlcXVpcmUoXCJAdHJlem9yL3NjaGVtYS11dGlsc1wiKTtcbmV4cG9ydHMuU29sYW5hUHVibGljS2V5ID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5JbnRlcnNlY3QoW1xuICAgIHBhcmFtc18xLlB1YmxpY0tleSxcbiAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgICAgIHB1YmxpY0tleTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICB9KSxcbl0pO1xuZXhwb3J0cy5Tb2xhbmFUeFRva2VuQWNjb3VudEluZm8gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgYmFzZUFkZHJlc3M6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgdG9rZW5Qcm9ncmFtOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIHRva2VuTWludDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICB0b2tlbkFjY291bnQ6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG59KTtcbmV4cG9ydHMuU29sYW5hVHhBZGRpdGlvbmFsSW5mbyA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICB0b2tlbkFjY291bnRzSW5mb3M6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShleHBvcnRzLlNvbGFuYVR4VG9rZW5BY2NvdW50SW5mbywgeyBtaW5JdGVtczogMSB9KSksXG59KTtcbmV4cG9ydHMuU29sYW5hU2lnblRyYW5zYWN0aW9uID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHBhdGg6IHNjaGVtYV91dGlsc18xLlR5cGUuVW5pb24oW3NjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksIHNjaGVtYV91dGlsc18xLlR5cGUuQXJyYXkoc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSldKSxcbiAgICBzZXJpYWxpemVkVHg6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgYWRkaXRpb25hbEluZm86IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoZXhwb3J0cy5Tb2xhbmFUeEFkZGl0aW9uYWxJbmZvKSxcbn0pO1xuZXhwb3J0cy5Tb2xhbmFTaWduZWRUcmFuc2FjdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBzaWduYXR1cmU6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/solana/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/stellar/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/stellar/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StellarOperationMessage = exports.StellarSignedTx = exports.StellarSignTransaction = exports.StellarTransaction = exports.StellarOperation = exports.StellarClaimClaimableBalanceOperation = exports.StellarInflationOperation = exports.StellarBumpSequenceOperation = exports.StellarManageDataOperation = exports.StellarAccountMergeOperation = exports.StellarAllowTrustOperation = exports.StellarChangeTrustOperation = exports.StellarSetOptionsOperation = exports.StellarManageBuyOfferOperation = exports.StellarManageSellOfferOperation = exports.StellarPassiveSellOfferOperation = exports.StellarPathPaymentStrictSendOperation = exports.StellarPathPaymentStrictReceiveOperation = exports.StellarPaymentOperation = exports.StellarCreateAccountOperation = exports.StellarAsset = void 0;\nconst constants_1 = __webpack_require__(/*! ../../../constants */ \"./node_modules/@trezor/connect/lib/constants/index.js\");\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.StellarAsset = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Union([constants_1.PROTO.EnumStellarAssetType, schema_utils_1.Type.KeyOfEnum(constants_1.PROTO.StellarAssetType)]),\n    code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    issuer: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.StellarCreateAccountOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('createAccount'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination: schema_utils_1.Type.String(),\n    startingBalance: schema_utils_1.Type.String(),\n});\nexports.StellarPaymentOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('payment'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination: schema_utils_1.Type.String(),\n    asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.String(),\n});\nexports.StellarPathPaymentStrictReceiveOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('pathPaymentStrictReceive'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sendAsset: exports.StellarAsset,\n    sendMax: schema_utils_1.Type.Uint(),\n    destination: schema_utils_1.Type.String(),\n    destAsset: exports.StellarAsset,\n    destAmount: schema_utils_1.Type.Uint(),\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset)),\n});\nexports.StellarPathPaymentStrictSendOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('pathPaymentStrictSend'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sendAsset: exports.StellarAsset,\n    sendAmount: schema_utils_1.Type.Uint(),\n    destination: schema_utils_1.Type.String(),\n    destAsset: exports.StellarAsset,\n    destMin: schema_utils_1.Type.Uint(),\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset)),\n});\nexports.StellarPassiveSellOfferOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('createPassiveSellOffer'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    buying: exports.StellarAsset,\n    selling: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price: schema_utils_1.Type.Object({\n        n: schema_utils_1.Type.Number(),\n        d: schema_utils_1.Type.Number(),\n    }),\n});\nexports.StellarManageSellOfferOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('manageSellOffer'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    buying: exports.StellarAsset,\n    selling: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    offerId: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    price: schema_utils_1.Type.Object({\n        n: schema_utils_1.Type.Number(),\n        d: schema_utils_1.Type.Number(),\n    }),\n});\nexports.StellarManageBuyOfferOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('manageBuyOffer'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    buying: exports.StellarAsset,\n    selling: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    offerId: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    price: schema_utils_1.Type.Object({\n        n: schema_utils_1.Type.Number(),\n        d: schema_utils_1.Type.Number(),\n    }),\n});\nexports.StellarSetOptionsOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('setOptions'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    signer: schema_utils_1.Type.Optional(schema_utils_1.Type.Object({\n        type: constants_1.PROTO.EnumStellarSignerType,\n        key: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Buffer()]),\n        weight: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    })),\n    inflationDest: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    clearFlags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    setFlags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    masterWeight: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    lowThreshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    medThreshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    highThreshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    homeDomain: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.StellarChangeTrustOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('changeTrust'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    line: exports.StellarAsset,\n    limit: schema_utils_1.Type.String(),\n});\nexports.StellarAllowTrustOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('allowTrust'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    trustor: schema_utils_1.Type.String(),\n    assetCode: schema_utils_1.Type.String(),\n    assetType: constants_1.PROTO.EnumStellarAssetType,\n    authorize: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Undefined()])),\n});\nexports.StellarAccountMergeOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('accountMerge'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination: schema_utils_1.Type.String(),\n});\nexports.StellarManageDataOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('manageData'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    name: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Buffer()])),\n});\nexports.StellarBumpSequenceOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('bumpSequence'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    bumpTo: schema_utils_1.Type.Uint(),\n});\nexports.StellarInflationOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('inflation'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.StellarClaimClaimableBalanceOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('claimClaimableBalance'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    balanceId: schema_utils_1.Type.String(),\n});\nexports.StellarOperation = schema_utils_1.Type.Union([\n    exports.StellarCreateAccountOperation,\n    exports.StellarPaymentOperation,\n    exports.StellarPathPaymentStrictReceiveOperation,\n    exports.StellarPathPaymentStrictSendOperation,\n    exports.StellarPassiveSellOfferOperation,\n    exports.StellarManageSellOfferOperation,\n    exports.StellarManageBuyOfferOperation,\n    exports.StellarSetOptionsOperation,\n    exports.StellarChangeTrustOperation,\n    exports.StellarAllowTrustOperation,\n    exports.StellarAccountMergeOperation,\n    exports.StellarInflationOperation,\n    exports.StellarManageDataOperation,\n    exports.StellarBumpSequenceOperation,\n    exports.StellarClaimClaimableBalanceOperation,\n]);\nexports.StellarTransaction = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Number(),\n    sequence: schema_utils_1.Type.Uint(),\n    timebounds: schema_utils_1.Type.Optional(schema_utils_1.Type.Object({\n        minTime: schema_utils_1.Type.Number(),\n        maxTime: schema_utils_1.Type.Number(),\n    })),\n    memo: schema_utils_1.Type.Optional(schema_utils_1.Type.Object({\n        type: constants_1.PROTO.EnumStellarMemoType,\n        id: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n        text: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        hash: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Buffer()])),\n    })),\n    operations: schema_utils_1.Type.Array(exports.StellarOperation),\n});\nexports.StellarSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    networkPassphrase: schema_utils_1.Type.String(),\n    transaction: exports.StellarTransaction,\n});\nexports.StellarSignedTx = schema_utils_1.Type.Object({\n    publicKey: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.StellarOperationMessage = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarCreateAccountOp'),\n        }),\n        constants_1.PROTO.StellarCreateAccountOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarPaymentOp'),\n        }),\n        constants_1.PROTO.StellarPaymentOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarPathPaymentStrictReceiveOp'),\n        }),\n        constants_1.PROTO.StellarPathPaymentStrictReceiveOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarPathPaymentStrictSendOp'),\n        }),\n        constants_1.PROTO.StellarPathPaymentStrictSendOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarManageSellOfferOp'),\n        }),\n        constants_1.PROTO.StellarManageSellOfferOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarManageBuyOfferOp'),\n        }),\n        constants_1.PROTO.StellarManageBuyOfferOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarCreatePassiveSellOfferOp'),\n        }),\n        constants_1.PROTO.StellarCreatePassiveSellOfferOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarSetOptionsOp'),\n        }),\n        constants_1.PROTO.StellarSetOptionsOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarChangeTrustOp'),\n        }),\n        constants_1.PROTO.StellarChangeTrustOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarAllowTrustOp'),\n        }),\n        constants_1.PROTO.StellarAllowTrustOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarAccountMergeOp'),\n        }),\n        constants_1.PROTO.StellarAccountMergeOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarManageDataOp'),\n        }),\n        constants_1.PROTO.StellarManageDataOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarBumpSequenceOp'),\n        }),\n        constants_1.PROTO.StellarBumpSequenceOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarClaimClaimableBalanceOp'),\n        }),\n        constants_1.PROTO.StellarClaimClaimableBalanceOp,\n    ]),\n]);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/stellar/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/tezos/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/tezos/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TezosSignTransaction = exports.TezosOperation = exports.TezosDelegationOperation = exports.TezosOriginationOperation = exports.TezosTransactionOperation = exports.TezosParametersManager = exports.TezosManagerTransfer = exports.TezosRevealOperation = void 0;\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.TezosRevealOperation = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Number(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    public_key: schema_utils_1.Type.String(),\n});\nexports.TezosManagerTransfer = schema_utils_1.Type.Object({\n    destination: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Number(),\n});\nexports.TezosParametersManager = schema_utils_1.Type.Object({\n    set_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    cancel_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    transfer: schema_utils_1.Type.Optional(exports.TezosManagerTransfer),\n});\nexports.TezosTransactionOperation = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    destination: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Number(),\n    counter: schema_utils_1.Type.Number(),\n    fee: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    parameters: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    parameters_manager: schema_utils_1.Type.Optional(exports.TezosParametersManager),\n});\nexports.TezosOriginationOperation = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    balance: schema_utils_1.Type.Number(),\n    delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script: params_1.DerivationPath,\n    fee: schema_utils_1.Type.Number(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n});\nexports.TezosDelegationOperation = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    delegate: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Number(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n});\nexports.TezosOperation = schema_utils_1.Type.Object({\n    reveal: schema_utils_1.Type.Optional(exports.TezosRevealOperation),\n    transaction: schema_utils_1.Type.Optional(exports.TezosTransactionOperation),\n    origination: schema_utils_1.Type.Optional(exports.TezosOriginationOperation),\n    delegation: schema_utils_1.Type.Optional(exports.TezosDelegationOperation),\n});\nexports.TezosSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    branch: schema_utils_1.Type.String(),\n    operation: exports.TezosOperation,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvdGV6b3MvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCLEdBQUcsc0JBQXNCLEdBQUcsZ0NBQWdDLEdBQUcsaUNBQWlDLEdBQUcsaUNBQWlDLEdBQUcsOEJBQThCLEdBQUcsNEJBQTRCLEdBQUcsNEJBQTRCO0FBQy9QLGlCQUFpQixtQkFBTyxDQUFDLHdFQUFjO0FBQ3ZDLHVCQUF1QixtQkFBTyxDQUFDLDhFQUFzQjtBQUNyRCw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0EsQ0FBQztBQUNELDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvdHlwZXMvYXBpL3Rlem9zL2luZGV4LmpzPzJjMzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRlem9zU2lnblRyYW5zYWN0aW9uID0gZXhwb3J0cy5UZXpvc09wZXJhdGlvbiA9IGV4cG9ydHMuVGV6b3NEZWxlZ2F0aW9uT3BlcmF0aW9uID0gZXhwb3J0cy5UZXpvc09yaWdpbmF0aW9uT3BlcmF0aW9uID0gZXhwb3J0cy5UZXpvc1RyYW5zYWN0aW9uT3BlcmF0aW9uID0gZXhwb3J0cy5UZXpvc1BhcmFtZXRlcnNNYW5hZ2VyID0gZXhwb3J0cy5UZXpvc01hbmFnZXJUcmFuc2ZlciA9IGV4cG9ydHMuVGV6b3NSZXZlYWxPcGVyYXRpb24gPSB2b2lkIDA7XG5jb25zdCBwYXJhbXNfMSA9IHJlcXVpcmUoXCIuLi8uLi9wYXJhbXNcIik7XG5jb25zdCBzY2hlbWFfdXRpbHNfMSA9IHJlcXVpcmUoXCJAdHJlem9yL3NjaGVtYS11dGlsc1wiKTtcbmV4cG9ydHMuVGV6b3NSZXZlYWxPcGVyYXRpb24gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgc291cmNlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIGZlZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBjb3VudGVyOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIGdhc19saW1pdDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBzdG9yYWdlX2xpbWl0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIHB1YmxpY19rZXk6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG59KTtcbmV4cG9ydHMuVGV6b3NNYW5hZ2VyVHJhbnNmZXIgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgZGVzdGluYXRpb246IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgYW1vdW50OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxufSk7XG5leHBvcnRzLlRlem9zUGFyYW1ldGVyc01hbmFnZXIgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgc2V0X2RlbGVnYXRlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIGNhbmNlbF9kZWxlZ2F0ZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLkJvb2xlYW4oKSksXG4gICAgdHJhbnNmZXI6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoZXhwb3J0cy5UZXpvc01hbmFnZXJUcmFuc2ZlciksXG59KTtcbmV4cG9ydHMuVGV6b3NUcmFuc2FjdGlvbk9wZXJhdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBzb3VyY2U6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgZGVzdGluYXRpb246IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgYW1vdW50OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIGNvdW50ZXI6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgZmVlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIGdhc19saW1pdDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBzdG9yYWdlX2xpbWl0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIHBhcmFtZXRlcnM6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpKSksXG4gICAgcGFyYW1ldGVyc19tYW5hZ2VyOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKGV4cG9ydHMuVGV6b3NQYXJhbWV0ZXJzTWFuYWdlciksXG59KTtcbmV4cG9ydHMuVGV6b3NPcmlnaW5hdGlvbk9wZXJhdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBzb3VyY2U6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgYmFsYW5jZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBkZWxlZ2F0ZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbiAgICBzY3JpcHQ6IHBhcmFtc18xLkRlcml2YXRpb25QYXRoLFxuICAgIGZlZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBjb3VudGVyOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIGdhc19saW1pdDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBzdG9yYWdlX2xpbWl0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxufSk7XG5leHBvcnRzLlRlem9zRGVsZWdhdGlvbk9wZXJhdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBzb3VyY2U6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgZGVsZWdhdGU6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgZmVlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIGNvdW50ZXI6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgZ2FzX2xpbWl0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIHN0b3JhZ2VfbGltaXQ6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG59KTtcbmV4cG9ydHMuVGV6b3NPcGVyYXRpb24gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgcmV2ZWFsOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKGV4cG9ydHMuVGV6b3NSZXZlYWxPcGVyYXRpb24pLFxuICAgIHRyYW5zYWN0aW9uOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKGV4cG9ydHMuVGV6b3NUcmFuc2FjdGlvbk9wZXJhdGlvbiksXG4gICAgb3JpZ2luYXRpb246IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoZXhwb3J0cy5UZXpvc09yaWdpbmF0aW9uT3BlcmF0aW9uKSxcbiAgICBkZWxlZ2F0aW9uOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKGV4cG9ydHMuVGV6b3NEZWxlZ2F0aW9uT3BlcmF0aW9uKSxcbn0pO1xuZXhwb3J0cy5UZXpvc1NpZ25UcmFuc2FjdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBwYXRoOiBwYXJhbXNfMS5EZXJpdmF0aW9uUGF0aCxcbiAgICBicmFuY2g6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgb3BlcmF0aW9uOiBleHBvcnRzLlRlem9zT3BlcmF0aW9uLFxuICAgIGNodW5raWZ5OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/tezos/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/coinInfo.js":
/*!************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/coinInfo.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CoinInfo = exports.MiscNetworkInfo = exports.EthereumNetworkInfo = exports.BitcoinNetworkInfo = exports.BlockchainLink = exports.CoinSupport = exports.CoinObj = exports.Network = exports.Bip32 = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nconst fees_1 = __webpack_require__(/*! ./fees */ \"./node_modules/@trezor/connect/lib/types/fees.js\");\nexports.Bip32 = schema_utils_1.Type.Object({\n    public: schema_utils_1.Type.Number(),\n    private: schema_utils_1.Type.Number(),\n});\nexports.Network = schema_utils_1.Type.Object({\n    messagePrefix: schema_utils_1.Type.String(),\n    bech32: schema_utils_1.Type.String(),\n    bip32: exports.Bip32,\n    pubKeyHash: schema_utils_1.Type.Number(),\n    scriptHash: schema_utils_1.Type.Number(),\n    wif: schema_utils_1.Type.Number(),\n    forkId: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.CoinObj = schema_utils_1.Type.Object({\n    coin: schema_utils_1.Type.String(),\n});\nexports.CoinSupport = schema_utils_1.Type.Object({\n    connect: schema_utils_1.Type.Boolean(),\n    T1B1: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Literal(false)]),\n    T2T1: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Literal(false)]),\n    T2B1: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Literal(false)]),\n});\nexports.BlockchainLink = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.String(),\n    url: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n});\nconst Common = schema_utils_1.Type.Object({\n    label: schema_utils_1.Type.String(),\n    name: schema_utils_1.Type.String(),\n    shortcut: schema_utils_1.Type.String(),\n    slip44: schema_utils_1.Type.Number(),\n    support: exports.CoinSupport,\n    decimals: schema_utils_1.Type.Number(),\n    blockchainLink: schema_utils_1.Type.Optional(exports.BlockchainLink),\n    blockTime: schema_utils_1.Type.Number(),\n    minFee: schema_utils_1.Type.Number(),\n    maxFee: schema_utils_1.Type.Number(),\n    defaultFees: schema_utils_1.Type.Array(fees_1.FeeLevel),\n});\nexports.BitcoinNetworkInfo = schema_utils_1.Type.Intersect([\n    Common,\n    schema_utils_1.Type.Object({\n        type: schema_utils_1.Type.Literal('bitcoin'),\n        cashAddrPrefix: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        curveName: schema_utils_1.Type.String(),\n        dustLimit: schema_utils_1.Type.Number(),\n        forceBip143: schema_utils_1.Type.Boolean(),\n        hashGenesisBlock: schema_utils_1.Type.String(),\n        maxAddressLength: schema_utils_1.Type.Number(),\n        maxFeeSatoshiKb: schema_utils_1.Type.Number(),\n        minAddressLength: schema_utils_1.Type.Number(),\n        minFeeSatoshiKb: schema_utils_1.Type.Number(),\n        segwit: schema_utils_1.Type.Boolean(),\n        xPubMagic: schema_utils_1.Type.Number(),\n        xPubMagicSegwitNative: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        xPubMagicSegwit: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        taproot: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n        network: exports.Network,\n        isBitcoin: schema_utils_1.Type.Boolean(),\n    }),\n]);\nexports.EthereumNetworkInfo = schema_utils_1.Type.Intersect([\n    Common,\n    schema_utils_1.Type.Object({\n        type: schema_utils_1.Type.Literal('ethereum'),\n        chainId: schema_utils_1.Type.Number(),\n        network: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n    }),\n]);\nexports.MiscNetworkInfo = schema_utils_1.Type.Intersect([\n    Common,\n    schema_utils_1.Type.Object({\n        type: schema_utils_1.Type.Union([schema_utils_1.Type.Literal('misc'), schema_utils_1.Type.Literal('nem')]),\n        curve: schema_utils_1.Type.String(),\n        network: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n    }),\n]);\nexports.CoinInfo = schema_utils_1.Type.Union([exports.BitcoinNetworkInfo, exports.EthereumNetworkInfo, exports.MiscNetworkInfo]);\n//# sourceMappingURL=coinInfo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9jb2luSW5mby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyx1QkFBdUIsR0FBRywyQkFBMkIsR0FBRywwQkFBMEIsR0FBRyxzQkFBc0IsR0FBRyxtQkFBbUIsR0FBRyxlQUFlLEdBQUcsZUFBZSxHQUFHLGFBQWE7QUFDeE0sdUJBQXVCLG1CQUFPLENBQUMsOEVBQXNCO0FBQ3JELGVBQWUsbUJBQU8sQ0FBQyxnRUFBUTtBQUMvQixhQUFhO0FBQ2I7QUFDQTtBQUNBLENBQUM7QUFDRCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsZUFBZTtBQUNmO0FBQ0EsQ0FBQztBQUNELG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGdCQUFnQjtBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9jb2luSW5mby5qcz84YmI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db2luSW5mbyA9IGV4cG9ydHMuTWlzY05ldHdvcmtJbmZvID0gZXhwb3J0cy5FdGhlcmV1bU5ldHdvcmtJbmZvID0gZXhwb3J0cy5CaXRjb2luTmV0d29ya0luZm8gPSBleHBvcnRzLkJsb2NrY2hhaW5MaW5rID0gZXhwb3J0cy5Db2luU3VwcG9ydCA9IGV4cG9ydHMuQ29pbk9iaiA9IGV4cG9ydHMuTmV0d29yayA9IGV4cG9ydHMuQmlwMzIgPSB2b2lkIDA7XG5jb25zdCBzY2hlbWFfdXRpbHNfMSA9IHJlcXVpcmUoXCJAdHJlem9yL3NjaGVtYS11dGlsc1wiKTtcbmNvbnN0IGZlZXNfMSA9IHJlcXVpcmUoXCIuL2ZlZXNcIik7XG5leHBvcnRzLkJpcDMyID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHB1YmxpYzogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBwcml2YXRlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxufSk7XG5leHBvcnRzLk5ldHdvcmsgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgbWVzc2FnZVByZWZpeDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBiZWNoMzI6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgYmlwMzI6IGV4cG9ydHMuQmlwMzIsXG4gICAgcHViS2V5SGFzaDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBzY3JpcHRIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIHdpZjogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBmb3JrSWQ6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSksXG59KTtcbmV4cG9ydHMuQ29pbk9iaiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBjb2luOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxufSk7XG5leHBvcnRzLkNvaW5TdXBwb3J0ID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIGNvbm5lY3Q6IHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpLFxuICAgIFQxQjE6IHNjaGVtYV91dGlsc18xLlR5cGUuVW5pb24oW3NjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksIHNjaGVtYV91dGlsc18xLlR5cGUuTGl0ZXJhbChmYWxzZSldKSxcbiAgICBUMlQxOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlVuaW9uKFtzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLCBzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoZmFsc2UpXSksXG4gICAgVDJCMTogc2NoZW1hX3V0aWxzXzEuVHlwZS5Vbmlvbihbc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSwgc2NoZW1hX3V0aWxzXzEuVHlwZS5MaXRlcmFsKGZhbHNlKV0pLFxufSk7XG5leHBvcnRzLkJsb2NrY2hhaW5MaW5rID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHR5cGU6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgdXJsOiBzY2hlbWFfdXRpbHNfMS5UeXBlLkFycmF5KHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxufSk7XG5jb25zdCBDb21tb24gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgbGFiZWw6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgbmFtZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBzaG9ydGN1dDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBzbGlwNDQ6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgc3VwcG9ydDogZXhwb3J0cy5Db2luU3VwcG9ydCxcbiAgICBkZWNpbWFsczogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBibG9ja2NoYWluTGluazogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChleHBvcnRzLkJsb2NrY2hhaW5MaW5rKSxcbiAgICBibG9ja1RpbWU6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgbWluRmVlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIG1heEZlZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBkZWZhdWx0RmVlczogc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShmZWVzXzEuRmVlTGV2ZWwpLFxufSk7XG5leHBvcnRzLkJpdGNvaW5OZXR3b3JrSW5mbyA9IHNjaGVtYV91dGlsc18xLlR5cGUuSW50ZXJzZWN0KFtcbiAgICBDb21tb24sXG4gICAgc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgICAgICB0eXBlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoJ2JpdGNvaW4nKSxcbiAgICAgICAgY2FzaEFkZHJQcmVmaXg6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSksXG4gICAgICAgIGN1cnZlTmFtZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICAgICAgZHVzdExpbWl0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgICAgICBmb3JjZUJpcDE0Mzogc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCksXG4gICAgICAgIGhhc2hHZW5lc2lzQmxvY2s6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgICAgIG1heEFkZHJlc3NMZW5ndGg6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgICAgIG1heEZlZVNhdG9zaGlLYjogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICAgICAgbWluQWRkcmVzc0xlbmd0aDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICAgICAgbWluRmVlU2F0b3NoaUtiOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgICAgICBzZWd3aXQ6IHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpLFxuICAgICAgICB4UHViTWFnaWM6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgICAgIHhQdWJNYWdpY1NlZ3dpdE5hdGl2ZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpKSxcbiAgICAgICAgeFB1Yk1hZ2ljU2Vnd2l0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCkpLFxuICAgICAgICB0YXByb290OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbiAgICAgICAgbmV0d29yazogZXhwb3J0cy5OZXR3b3JrLFxuICAgICAgICBpc0JpdGNvaW46IHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpLFxuICAgIH0pLFxuXSk7XG5leHBvcnRzLkV0aGVyZXVtTmV0d29ya0luZm8gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLkludGVyc2VjdChbXG4gICAgQ29tbW9uLFxuICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgdHlwZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5MaXRlcmFsKCdldGhlcmV1bScpLFxuICAgICAgICBjaGFpbklkOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgICAgICBuZXR3b3JrOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuVW5kZWZpbmVkKCkpLFxuICAgIH0pLFxuXSk7XG5leHBvcnRzLk1pc2NOZXR3b3JrSW5mbyA9IHNjaGVtYV91dGlsc18xLlR5cGUuSW50ZXJzZWN0KFtcbiAgICBDb21tb24sXG4gICAgc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgICAgICB0eXBlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlVuaW9uKFtzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoJ21pc2MnKSwgc2NoZW1hX3V0aWxzXzEuVHlwZS5MaXRlcmFsKCduZW0nKV0pLFxuICAgICAgICBjdXJ2ZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICAgICAgbmV0d29yazogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlVuZGVmaW5lZCgpKSxcbiAgICB9KSxcbl0pO1xuZXhwb3J0cy5Db2luSW5mbyA9IHNjaGVtYV91dGlsc18xLlR5cGUuVW5pb24oW2V4cG9ydHMuQml0Y29pbk5ldHdvcmtJbmZvLCBleHBvcnRzLkV0aGVyZXVtTmV0d29ya0luZm8sIGV4cG9ydHMuTWlzY05ldHdvcmtJbmZvXSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb2luSW5mby5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/coinInfo.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/device.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/device.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DeviceModelInternal = exports.FirmwareType = void 0;\nvar FirmwareType;\n(function (FirmwareType) {\n    FirmwareType[\"BitcoinOnly\"] = \"bitcoin-only\";\n    FirmwareType[\"Regular\"] = \"regular\";\n})(FirmwareType || (exports.FirmwareType = FirmwareType = {}));\nvar protobuf_1 = __webpack_require__(/*! @trezor/protobuf */ \"./node_modules/@trezor/protobuf/lib/index.js\");\nObject.defineProperty(exports, \"DeviceModelInternal\", ({ enumerable: true, get: function () { return protobuf_1.DeviceModelInternal; } }));\n//# sourceMappingURL=device.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9kZXZpY2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsb0JBQW9CO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxtQkFBbUIsb0JBQW9CLG9CQUFvQjtBQUM1RCxpQkFBaUIsbUJBQU8sQ0FBQyxzRUFBa0I7QUFDM0MsdURBQXNELEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQ3hJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL3R5cGVzL2RldmljZS5qcz9hOWE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZXZpY2VNb2RlbEludGVybmFsID0gZXhwb3J0cy5GaXJtd2FyZVR5cGUgPSB2b2lkIDA7XG52YXIgRmlybXdhcmVUeXBlO1xuKGZ1bmN0aW9uIChGaXJtd2FyZVR5cGUpIHtcbiAgICBGaXJtd2FyZVR5cGVbXCJCaXRjb2luT25seVwiXSA9IFwiYml0Y29pbi1vbmx5XCI7XG4gICAgRmlybXdhcmVUeXBlW1wiUmVndWxhclwiXSA9IFwicmVndWxhclwiO1xufSkoRmlybXdhcmVUeXBlIHx8IChleHBvcnRzLkZpcm13YXJlVHlwZSA9IEZpcm13YXJlVHlwZSA9IHt9KSk7XG52YXIgcHJvdG9idWZfMSA9IHJlcXVpcmUoXCJAdHJlem9yL3Byb3RvYnVmXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRGV2aWNlTW9kZWxJbnRlcm5hbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcHJvdG9idWZfMS5EZXZpY2VNb2RlbEludGVybmFsOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGV2aWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/device.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/fees.js":
/*!********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/fees.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SelectFeeLevel = exports.FeeLevel = exports.FeeInfo = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.FeeInfo = schema_utils_1.Type.Object({\n    blockTime: schema_utils_1.Type.Number(),\n    minFee: schema_utils_1.Type.Number(),\n    maxFee: schema_utils_1.Type.Number(),\n    dustLimit: schema_utils_1.Type.Number(),\n});\nexports.FeeLevel = schema_utils_1.Type.Object({\n    label: schema_utils_1.Type.Union([\n        schema_utils_1.Type.Literal('high'),\n        schema_utils_1.Type.Literal('normal'),\n        schema_utils_1.Type.Literal('economy'),\n        schema_utils_1.Type.Literal('low'),\n        schema_utils_1.Type.Literal('custom'),\n    ]),\n    feePerUnit: schema_utils_1.Type.String(),\n    blocks: schema_utils_1.Type.Number(),\n    feeLimit: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    feePerTx: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.SelectFeeLevel = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Object({\n        name: schema_utils_1.Type.String(),\n        fee: schema_utils_1.Type.Literal('0'),\n        feePerByte: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        disabled: schema_utils_1.Type.Literal(true),\n    }),\n    schema_utils_1.Type.Object({\n        name: schema_utils_1.Type.String(),\n        fee: schema_utils_1.Type.String(),\n        feePerByte: schema_utils_1.Type.String(),\n        minutes: schema_utils_1.Type.Number(),\n        total: schema_utils_1.Type.String(),\n    }),\n]);\n//# sourceMappingURL=fees.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9mZWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLGdCQUFnQixHQUFHLGVBQWU7QUFDM0QsdUJBQXVCLG1CQUFPLENBQUMsOEVBQXNCO0FBQ3JELGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9mZWVzLmpzPzkyYjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNlbGVjdEZlZUxldmVsID0gZXhwb3J0cy5GZWVMZXZlbCA9IGV4cG9ydHMuRmVlSW5mbyA9IHZvaWQgMDtcbmNvbnN0IHNjaGVtYV91dGlsc18xID0gcmVxdWlyZShcIkB0cmV6b3Ivc2NoZW1hLXV0aWxzXCIpO1xuZXhwb3J0cy5GZWVJbmZvID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIGJsb2NrVGltZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBtaW5GZWU6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgbWF4RmVlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIGR1c3RMaW1pdDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbn0pO1xuZXhwb3J0cy5GZWVMZXZlbCA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBsYWJlbDogc2NoZW1hX3V0aWxzXzEuVHlwZS5VbmlvbihbXG4gICAgICAgIHNjaGVtYV91dGlsc18xLlR5cGUuTGl0ZXJhbCgnaGlnaCcpLFxuICAgICAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoJ25vcm1hbCcpLFxuICAgICAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoJ2Vjb25vbXknKSxcbiAgICAgICAgc2NoZW1hX3V0aWxzXzEuVHlwZS5MaXRlcmFsKCdsb3cnKSxcbiAgICAgICAgc2NoZW1hX3V0aWxzXzEuVHlwZS5MaXRlcmFsKCdjdXN0b20nKSxcbiAgICBdKSxcbiAgICBmZWVQZXJVbml0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIGJsb2Nrczogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBmZWVMaW1pdDogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbiAgICBmZWVQZXJUeDogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbn0pO1xuZXhwb3J0cy5TZWxlY3RGZWVMZXZlbCA9IHNjaGVtYV91dGlsc18xLlR5cGUuVW5pb24oW1xuICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgbmFtZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICAgICAgZmVlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoJzAnKSxcbiAgICAgICAgZmVlUGVyQnl0ZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlVuZGVmaW5lZCgpKSxcbiAgICAgICAgZGlzYWJsZWQ6IHNjaGVtYV91dGlsc18xLlR5cGUuTGl0ZXJhbCh0cnVlKSxcbiAgICB9KSxcbiAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgICAgIG5hbWU6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgICAgIGZlZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICAgICAgZmVlUGVyQnl0ZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICAgICAgbWludXRlczogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICAgICAgdG90YWw6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgfSksXG5dKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZlZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/fees.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/firmware.js":
/*!************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/firmware.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IntermediaryVersion = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.IntermediaryVersion = schema_utils_1.Type.Union([schema_utils_1.Type.Literal(1), schema_utils_1.Type.Literal(2), schema_utils_1.Type.Literal(3)]);\n//# sourceMappingURL=firmware.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9maXJtd2FyZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0IsdUJBQXVCLG1CQUFPLENBQUMsOEVBQXNCO0FBQ3JELDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9maXJtd2FyZS5qcz84ODI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnRlcm1lZGlhcnlWZXJzaW9uID0gdm9pZCAwO1xuY29uc3Qgc2NoZW1hX3V0aWxzXzEgPSByZXF1aXJlKFwiQHRyZXpvci9zY2hlbWEtdXRpbHNcIik7XG5leHBvcnRzLkludGVybWVkaWFyeVZlcnNpb24gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLlVuaW9uKFtzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoMSksIHNjaGVtYV91dGlsc18xLlR5cGUuTGl0ZXJhbCgyKSwgc2NoZW1hX3V0aWxzXzEuVHlwZS5MaXRlcmFsKDMpXSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maXJtd2FyZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/firmware.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./api */ \"./node_modules/@trezor/connect/lib/types/api/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./account */ \"./node_modules/@trezor/connect/lib/types/account.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./coinInfo */ \"./node_modules/@trezor/connect/lib/types/coinInfo.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./device */ \"./node_modules/@trezor/connect/lib/types/device.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./fees */ \"./node_modules/@trezor/connect/lib/types/fees.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./firmware */ \"./node_modules/@trezor/connect/lib/types/firmware.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./params */ \"./node_modules/@trezor/connect/lib/types/params.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./settings */ \"./node_modules/@trezor/connect/lib/types/settings.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/cardano */ \"./node_modules/@trezor/connect/lib/types/api/cardano/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/binance */ \"./node_modules/@trezor/connect/lib/types/api/binance/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/bitcoin */ \"./node_modules/@trezor/connect/lib/types/api/bitcoin/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/eos */ \"./node_modules/@trezor/connect/lib/types/api/eos/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/ripple */ \"./node_modules/@trezor/connect/lib/types/api/ripple/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/ethereum */ \"./node_modules/@trezor/connect/lib/types/api/ethereum/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/solana */ \"./node_modules/@trezor/connect/lib/types/api/solana/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/stellar */ \"./node_modules/@trezor/connect/lib/types/api/stellar/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/tezos */ \"./node_modules/@trezor/connect/lib/types/api/tezos/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBTztBQUMvQixxQkFBcUIsbUJBQU8sQ0FBQyxvRUFBTztBQUNwQyxxQkFBcUIsbUJBQU8sQ0FBQyxzRUFBVztBQUN4QyxxQkFBcUIsbUJBQU8sQ0FBQyx3RUFBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyxvRUFBVTtBQUN2QyxxQkFBcUIsbUJBQU8sQ0FBQyxnRUFBUTtBQUNyQyxxQkFBcUIsbUJBQU8sQ0FBQyx3RUFBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyxvRUFBVTtBQUN2QyxxQkFBcUIsbUJBQU8sQ0FBQyx3RUFBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyxvRkFBZTtBQUM1QyxxQkFBcUIsbUJBQU8sQ0FBQyxvRkFBZTtBQUM1QyxxQkFBcUIsbUJBQU8sQ0FBQyxvRkFBZTtBQUM1QyxxQkFBcUIsbUJBQU8sQ0FBQyw0RUFBVztBQUN4QyxxQkFBcUIsbUJBQU8sQ0FBQyxrRkFBYztBQUMzQyxxQkFBcUIsbUJBQU8sQ0FBQyxzRkFBZ0I7QUFDN0MscUJBQXFCLG1CQUFPLENBQUMsa0ZBQWM7QUFDM0MscUJBQXFCLG1CQUFPLENBQUMsb0ZBQWU7QUFDNUMscUJBQXFCLG1CQUFPLENBQUMsZ0ZBQWE7QUFDMUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvdHlwZXMvaW5kZXguanM/MjBlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcGlcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYWNjb3VudFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb2luSW5mb1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kZXZpY2VcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZmVlc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9maXJtd2FyZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wYXJhbXNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2V0dGluZ3NcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXBpL2NhcmRhbm9cIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXBpL2JpbmFuY2VcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXBpL2JpdGNvaW5cIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXBpL2Vvc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcGkvcmlwcGxlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FwaS9ldGhlcmV1bVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcGkvc29sYW5hXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FwaS9zdGVsbGFyXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FwaS90ZXpvc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/params.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/params.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = exports.GetPublicKey = exports.GetAddress = exports.DerivationPath = exports.Bundle = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nconst Bundle = (type) => schema_utils_1.Type.Object({ bundle: schema_utils_1.Type.Array(type, { minItems: 1 }) });\nexports.Bundle = Bundle;\nexports.DerivationPath = schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())]);\nexports.GetAddress = schema_utils_1.Type.Object({\n    path: exports.DerivationPath,\n    address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    showOnTrezor: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    useEventListener: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.GetPublicKey = schema_utils_1.Type.Object({\n    path: exports.DerivationPath,\n    showOnTrezor: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    suppressBackupWarning: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.PublicKey = schema_utils_1.Type.Object({\n    publicKey: schema_utils_1.Type.String(),\n    path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    serializedPath: schema_utils_1.Type.String(),\n});\n//# sourceMappingURL=params.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9wYXJhbXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsb0JBQW9CLEdBQUcsa0JBQWtCLEdBQUcsc0JBQXNCLEdBQUcsY0FBYztBQUN2Ryx1QkFBdUIsbUJBQU8sQ0FBQyw4RUFBc0I7QUFDckQsc0RBQXNELDBDQUEwQyxhQUFhLEdBQUc7QUFDaEgsY0FBYztBQUNkLHNCQUFzQjtBQUN0QixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9wYXJhbXMuanM/N2UxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHVibGljS2V5ID0gZXhwb3J0cy5HZXRQdWJsaWNLZXkgPSBleHBvcnRzLkdldEFkZHJlc3MgPSBleHBvcnRzLkRlcml2YXRpb25QYXRoID0gZXhwb3J0cy5CdW5kbGUgPSB2b2lkIDA7XG5jb25zdCBzY2hlbWFfdXRpbHNfMSA9IHJlcXVpcmUoXCJAdHJlem9yL3NjaGVtYS11dGlsc1wiKTtcbmNvbnN0IEJ1bmRsZSA9ICh0eXBlKSA9PiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7IGJ1bmRsZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheSh0eXBlLCB7IG1pbkl0ZW1zOiAxIH0pIH0pO1xuZXhwb3J0cy5CdW5kbGUgPSBCdW5kbGU7XG5leHBvcnRzLkRlcml2YXRpb25QYXRoID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5Vbmlvbihbc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSwgc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpKV0pO1xuZXhwb3J0cy5HZXRBZGRyZXNzID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHBhdGg6IGV4cG9ydHMuRGVyaXZhdGlvblBhdGgsXG4gICAgYWRkcmVzczogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbiAgICBzaG93T25UcmV6b3I6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCkpLFxuICAgIGNodW5raWZ5OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbiAgICB1c2VFdmVudExpc3RlbmVyOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbn0pO1xuZXhwb3J0cy5HZXRQdWJsaWNLZXkgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgcGF0aDogZXhwb3J0cy5EZXJpdmF0aW9uUGF0aCxcbiAgICBzaG93T25UcmV6b3I6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCkpLFxuICAgIHN1cHByZXNzQmFja3VwV2FybmluZzogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLkJvb2xlYW4oKSksXG4gICAgY2h1bmtpZnk6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCkpLFxufSk7XG5leHBvcnRzLlB1YmxpY0tleSA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBwdWJsaWNLZXk6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgcGF0aDogc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpKSxcbiAgICBzZXJpYWxpemVkUGF0aDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyYW1zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/params.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/settings.js":
/*!************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/settings.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=settings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9zZXR0aW5ncy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9zZXR0aW5ncy5qcz8xNDA5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2V0dGluZ3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/settings.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/utils/debug.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/utils/debug.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getLog = exports.enableLogByPrefix = exports.enableLog = exports.setLogWriter = exports.initLog = exports.Log = void 0;\nconst green = '#bada55';\nconst blue = '#20abd8';\nconst orange = '#f4a744';\nconst yellow = '#fbd948';\nconst colors = {\n    '@trezor/connect': `color: ${blue}; background: #000;`,\n    '@trezor/connect-web': `color: ${blue}; background: #000;`,\n    '@trezor/connect-webextension': `color: ${blue}; background: #000;`,\n    IFrame: `color: ${orange}; background: #000;`,\n    Core: `color: ${orange}; background: #000;`,\n    DeviceList: `color: ${green}; background: #000;`,\n    Device: `color: ${green}; background: #000;`,\n    DeviceCommands: `color: ${green}; background: #000;`,\n    '@trezor/transport': `color: ${green}; background: #000;`,\n    InteractionTimeout: `color: ${green}; background: #000;`,\n    '@trezor/connect-popup': `color: ${yellow}; background: #000;`,\n};\nconst MAX_ENTRIES = 100;\nclass Log {\n    constructor(prefix, enabled, logWriter) {\n        this.prefix = prefix;\n        this.enabled = enabled;\n        this.messages = [];\n        this.css = typeof window !== 'undefined' && colors[prefix] ? colors[prefix] : '';\n        if (logWriter) {\n            this.logWriter = logWriter;\n        }\n    }\n    addMessage({ level, prefix, timestamp }, ...args) {\n        const message = {\n            level,\n            prefix,\n            css: this.css,\n            message: args,\n            timestamp: timestamp || Date.now(),\n        };\n        this.messages.push(message);\n        if (this.logWriter) {\n            try {\n                this.logWriter.add(message);\n            }\n            catch (err) {\n                console.error('There was an error adding log message', err, message);\n            }\n        }\n        if (this.messages.length > MAX_ENTRIES) {\n            this.messages.shift();\n        }\n    }\n    setWriter(logWriter) {\n        this.logWriter = logWriter;\n    }\n    log(...args) {\n        this.addMessage({ level: 'log', prefix: this.prefix }, ...args);\n        if (this.enabled) {\n            console.log(`%c${this.prefix}`, this.css, ...args);\n        }\n    }\n    error(...args) {\n        this.addMessage({ level: 'error', prefix: this.prefix }, ...args);\n        if (this.enabled) {\n            console.error(`%c${this.prefix}`, this.css, ...args);\n        }\n    }\n    warn(...args) {\n        this.addMessage({ level: 'warn', prefix: this.prefix }, ...args);\n        if (this.enabled) {\n            console.warn(`%c${this.prefix}`, this.css, ...args);\n        }\n    }\n    debug(...args) {\n        this.addMessage({ level: 'debug', prefix: this.prefix }, ...args);\n        if (this.enabled) {\n            if (this.css) {\n                console.log(`%c${this.prefix}`, this.css, ...args);\n            }\n            else {\n                console.log(this.prefix, ...args);\n            }\n        }\n    }\n}\nexports.Log = Log;\nconst _logs = {};\nlet writer;\nconst initLog = (prefix, enabled, logWriter) => {\n    const instanceWriter = logWriter || writer;\n    const instance = new Log(prefix, !!enabled, instanceWriter);\n    _logs[prefix] = instance;\n    return instance;\n};\nexports.initLog = initLog;\nconst setLogWriter = (logWriterFactory) => {\n    Object.keys(_logs).forEach(key => {\n        writer = logWriterFactory();\n        if (writer) {\n            _logs[key].setWriter(writer);\n            const { messages } = _logs[key];\n            messages.forEach(message => {\n                writer === null || writer === void 0 ? void 0 : writer.add(message);\n            });\n        }\n    });\n};\nexports.setLogWriter = setLogWriter;\nconst enableLog = (enabled) => {\n    Object.keys(_logs).forEach(key => {\n        _logs[key].enabled = !!enabled;\n    });\n};\nexports.enableLog = enableLog;\nconst enableLogByPrefix = (prefix, enabled) => {\n    if (_logs[prefix]) {\n        _logs[prefix].enabled = enabled;\n    }\n};\nexports.enableLogByPrefix = enableLogByPrefix;\nconst getLog = () => {\n    let logs = [];\n    Object.keys(_logs).forEach(key => {\n        logs = logs.concat(_logs[key].messages);\n    });\n    logs.sort((a, b) => a.timestamp - b.timestamp);\n    return logs;\n};\nexports.getLog = getLog;\n//# sourceMappingURL=debug.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi91dGlscy9kZWJ1Zy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcseUJBQXlCLEdBQUcsaUJBQWlCLEdBQUcsb0JBQW9CLEdBQUcsZUFBZSxHQUFHLFdBQVc7QUFDckg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxPQUFPLGlCQUFpQjtBQUN6RCxxQ0FBcUMsT0FBTyxpQkFBaUI7QUFDN0QsOENBQThDLE9BQU8saUJBQWlCO0FBQ3RFLHNCQUFzQixTQUFTLGlCQUFpQjtBQUNoRCxvQkFBb0IsU0FBUyxpQkFBaUI7QUFDOUMsMEJBQTBCLFFBQVEsaUJBQWlCO0FBQ25ELHNCQUFzQixRQUFRLGlCQUFpQjtBQUMvQyw4QkFBOEIsUUFBUSxpQkFBaUI7QUFDdkQsbUNBQW1DLFFBQVEsaUJBQWlCO0FBQzVELGtDQUFrQyxRQUFRLGlCQUFpQjtBQUMzRCx1Q0FBdUMsU0FBUyxpQkFBaUI7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDBCQUEwQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsbUNBQW1DO0FBQzdEO0FBQ0EsNkJBQTZCLFlBQVk7QUFDekM7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHFDQUFxQztBQUMvRDtBQUNBLCtCQUErQixZQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixvQ0FBb0M7QUFDOUQ7QUFDQSw4QkFBOEIsWUFBWTtBQUMxQztBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscUNBQXFDO0FBQy9EO0FBQ0E7QUFDQSxpQ0FBaUMsWUFBWTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsV0FBVztBQUMvQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi91dGlscy9kZWJ1Zy5qcz9lYTY0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRMb2cgPSBleHBvcnRzLmVuYWJsZUxvZ0J5UHJlZml4ID0gZXhwb3J0cy5lbmFibGVMb2cgPSBleHBvcnRzLnNldExvZ1dyaXRlciA9IGV4cG9ydHMuaW5pdExvZyA9IGV4cG9ydHMuTG9nID0gdm9pZCAwO1xuY29uc3QgZ3JlZW4gPSAnI2JhZGE1NSc7XG5jb25zdCBibHVlID0gJyMyMGFiZDgnO1xuY29uc3Qgb3JhbmdlID0gJyNmNGE3NDQnO1xuY29uc3QgeWVsbG93ID0gJyNmYmQ5NDgnO1xuY29uc3QgY29sb3JzID0ge1xuICAgICdAdHJlem9yL2Nvbm5lY3QnOiBgY29sb3I6ICR7Ymx1ZX07IGJhY2tncm91bmQ6ICMwMDA7YCxcbiAgICAnQHRyZXpvci9jb25uZWN0LXdlYic6IGBjb2xvcjogJHtibHVlfTsgYmFja2dyb3VuZDogIzAwMDtgLFxuICAgICdAdHJlem9yL2Nvbm5lY3Qtd2ViZXh0ZW5zaW9uJzogYGNvbG9yOiAke2JsdWV9OyBiYWNrZ3JvdW5kOiAjMDAwO2AsXG4gICAgSUZyYW1lOiBgY29sb3I6ICR7b3JhbmdlfTsgYmFja2dyb3VuZDogIzAwMDtgLFxuICAgIENvcmU6IGBjb2xvcjogJHtvcmFuZ2V9OyBiYWNrZ3JvdW5kOiAjMDAwO2AsXG4gICAgRGV2aWNlTGlzdDogYGNvbG9yOiAke2dyZWVufTsgYmFja2dyb3VuZDogIzAwMDtgLFxuICAgIERldmljZTogYGNvbG9yOiAke2dyZWVufTsgYmFja2dyb3VuZDogIzAwMDtgLFxuICAgIERldmljZUNvbW1hbmRzOiBgY29sb3I6ICR7Z3JlZW59OyBiYWNrZ3JvdW5kOiAjMDAwO2AsXG4gICAgJ0B0cmV6b3IvdHJhbnNwb3J0JzogYGNvbG9yOiAke2dyZWVufTsgYmFja2dyb3VuZDogIzAwMDtgLFxuICAgIEludGVyYWN0aW9uVGltZW91dDogYGNvbG9yOiAke2dyZWVufTsgYmFja2dyb3VuZDogIzAwMDtgLFxuICAgICdAdHJlem9yL2Nvbm5lY3QtcG9wdXAnOiBgY29sb3I6ICR7eWVsbG93fTsgYmFja2dyb3VuZDogIzAwMDtgLFxufTtcbmNvbnN0IE1BWF9FTlRSSUVTID0gMTAwO1xuY2xhc3MgTG9nIHtcbiAgICBjb25zdHJ1Y3RvcihwcmVmaXgsIGVuYWJsZWQsIGxvZ1dyaXRlcikge1xuICAgICAgICB0aGlzLnByZWZpeCA9IHByZWZpeDtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gZW5hYmxlZDtcbiAgICAgICAgdGhpcy5tZXNzYWdlcyA9IFtdO1xuICAgICAgICB0aGlzLmNzcyA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIGNvbG9yc1twcmVmaXhdID8gY29sb3JzW3ByZWZpeF0gOiAnJztcbiAgICAgICAgaWYgKGxvZ1dyaXRlcikge1xuICAgICAgICAgICAgdGhpcy5sb2dXcml0ZXIgPSBsb2dXcml0ZXI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkTWVzc2FnZSh7IGxldmVsLCBwcmVmaXgsIHRpbWVzdGFtcCB9LCAuLi5hcmdzKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSB7XG4gICAgICAgICAgICBsZXZlbCxcbiAgICAgICAgICAgIHByZWZpeCxcbiAgICAgICAgICAgIGNzczogdGhpcy5jc3MsXG4gICAgICAgICAgICBtZXNzYWdlOiBhcmdzLFxuICAgICAgICAgICAgdGltZXN0YW1wOiB0aW1lc3RhbXAgfHwgRGF0ZS5ub3coKSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKG1lc3NhZ2UpO1xuICAgICAgICBpZiAodGhpcy5sb2dXcml0ZXIpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dXcml0ZXIuYWRkKG1lc3NhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1RoZXJlIHdhcyBhbiBlcnJvciBhZGRpbmcgbG9nIG1lc3NhZ2UnLCBlcnIsIG1lc3NhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm1lc3NhZ2VzLmxlbmd0aCA+IE1BWF9FTlRSSUVTKSB7XG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2VzLnNoaWZ0KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2V0V3JpdGVyKGxvZ1dyaXRlcikge1xuICAgICAgICB0aGlzLmxvZ1dyaXRlciA9IGxvZ1dyaXRlcjtcbiAgICB9XG4gICAgbG9nKC4uLmFyZ3MpIHtcbiAgICAgICAgdGhpcy5hZGRNZXNzYWdlKHsgbGV2ZWw6ICdsb2cnLCBwcmVmaXg6IHRoaXMucHJlZml4IH0sIC4uLmFyZ3MpO1xuICAgICAgICBpZiAodGhpcy5lbmFibGVkKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgJWMke3RoaXMucHJlZml4fWAsIHRoaXMuY3NzLCAuLi5hcmdzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlcnJvciguLi5hcmdzKSB7XG4gICAgICAgIHRoaXMuYWRkTWVzc2FnZSh7IGxldmVsOiAnZXJyb3InLCBwcmVmaXg6IHRoaXMucHJlZml4IH0sIC4uLmFyZ3MpO1xuICAgICAgICBpZiAodGhpcy5lbmFibGVkKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGAlYyR7dGhpcy5wcmVmaXh9YCwgdGhpcy5jc3MsIC4uLmFyZ3MpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHdhcm4oLi4uYXJncykge1xuICAgICAgICB0aGlzLmFkZE1lc3NhZ2UoeyBsZXZlbDogJ3dhcm4nLCBwcmVmaXg6IHRoaXMucHJlZml4IH0sIC4uLmFyZ3MpO1xuICAgICAgICBpZiAodGhpcy5lbmFibGVkKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oYCVjJHt0aGlzLnByZWZpeH1gLCB0aGlzLmNzcywgLi4uYXJncyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVidWcoLi4uYXJncykge1xuICAgICAgICB0aGlzLmFkZE1lc3NhZ2UoeyBsZXZlbDogJ2RlYnVnJywgcHJlZml4OiB0aGlzLnByZWZpeCB9LCAuLi5hcmdzKTtcbiAgICAgICAgaWYgKHRoaXMuZW5hYmxlZCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuY3NzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYCVjJHt0aGlzLnByZWZpeH1gLCB0aGlzLmNzcywgLi4uYXJncyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnByZWZpeCwgLi4uYXJncyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkxvZyA9IExvZztcbmNvbnN0IF9sb2dzID0ge307XG5sZXQgd3JpdGVyO1xuY29uc3QgaW5pdExvZyA9IChwcmVmaXgsIGVuYWJsZWQsIGxvZ1dyaXRlcikgPT4ge1xuICAgIGNvbnN0IGluc3RhbmNlV3JpdGVyID0gbG9nV3JpdGVyIHx8IHdyaXRlcjtcbiAgICBjb25zdCBpbnN0YW5jZSA9IG5ldyBMb2cocHJlZml4LCAhIWVuYWJsZWQsIGluc3RhbmNlV3JpdGVyKTtcbiAgICBfbG9nc1twcmVmaXhdID0gaW5zdGFuY2U7XG4gICAgcmV0dXJuIGluc3RhbmNlO1xufTtcbmV4cG9ydHMuaW5pdExvZyA9IGluaXRMb2c7XG5jb25zdCBzZXRMb2dXcml0ZXIgPSAobG9nV3JpdGVyRmFjdG9yeSkgPT4ge1xuICAgIE9iamVjdC5rZXlzKF9sb2dzKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIHdyaXRlciA9IGxvZ1dyaXRlckZhY3RvcnkoKTtcbiAgICAgICAgaWYgKHdyaXRlcikge1xuICAgICAgICAgICAgX2xvZ3Nba2V5XS5zZXRXcml0ZXIod3JpdGVyKTtcbiAgICAgICAgICAgIGNvbnN0IHsgbWVzc2FnZXMgfSA9IF9sb2dzW2tleV07XG4gICAgICAgICAgICBtZXNzYWdlcy5mb3JFYWNoKG1lc3NhZ2UgPT4ge1xuICAgICAgICAgICAgICAgIHdyaXRlciA9PT0gbnVsbCB8fCB3cml0ZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHdyaXRlci5hZGQobWVzc2FnZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xufTtcbmV4cG9ydHMuc2V0TG9nV3JpdGVyID0gc2V0TG9nV3JpdGVyO1xuY29uc3QgZW5hYmxlTG9nID0gKGVuYWJsZWQpID0+IHtcbiAgICBPYmplY3Qua2V5cyhfbG9ncykuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICBfbG9nc1trZXldLmVuYWJsZWQgPSAhIWVuYWJsZWQ7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5lbmFibGVMb2cgPSBlbmFibGVMb2c7XG5jb25zdCBlbmFibGVMb2dCeVByZWZpeCA9IChwcmVmaXgsIGVuYWJsZWQpID0+IHtcbiAgICBpZiAoX2xvZ3NbcHJlZml4XSkge1xuICAgICAgICBfbG9nc1twcmVmaXhdLmVuYWJsZWQgPSBlbmFibGVkO1xuICAgIH1cbn07XG5leHBvcnRzLmVuYWJsZUxvZ0J5UHJlZml4ID0gZW5hYmxlTG9nQnlQcmVmaXg7XG5jb25zdCBnZXRMb2cgPSAoKSA9PiB7XG4gICAgbGV0IGxvZ3MgPSBbXTtcbiAgICBPYmplY3Qua2V5cyhfbG9ncykuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICBsb2dzID0gbG9ncy5jb25jYXQoX2xvZ3Nba2V5XS5tZXNzYWdlcyk7XG4gICAgfSk7XG4gICAgbG9ncy5zb3J0KChhLCBiKSA9PiBhLnRpbWVzdGFtcCAtIGIudGltZXN0YW1wKTtcbiAgICByZXR1cm4gbG9ncztcbn07XG5leHBvcnRzLmdldExvZyA9IGdldExvZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlYnVnLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/utils/debug.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/utils/urlUtils.js":
/*!************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/utils/urlUtils.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getOnionDomain = exports.getHost = exports.getOrigin = void 0;\nconst utils_1 = __webpack_require__(/*! @trezor/utils */ \"./node_modules/@trezor/utils/lib/index.js\");\nconst getOrigin = (url) => {\n    var _a;\n    if (typeof url !== 'string')\n        return 'unknown';\n    if (url.indexOf('file://') === 0)\n        return 'file://';\n    const [origin] = (_a = url.match(/^https?:\\/\\/[^/]+/)) !== null && _a !== void 0 ? _a : [];\n    return origin !== null && origin !== void 0 ? origin : 'unknown';\n};\nexports.getOrigin = getOrigin;\nconst getHost = (url) => {\n    var _a;\n    if (typeof url !== 'string')\n        return;\n    const [, , uri] = (_a = url.match(/^(https?):\\/\\/([^:/]+)?/i)) !== null && _a !== void 0 ? _a : [];\n    if (uri) {\n        const parts = uri.split('.');\n        return parts.length > 2\n            ?\n                parts.slice(parts.length - 2, parts.length).join('.')\n            : uri;\n    }\n};\nexports.getHost = getHost;\nconst getOnionDomain = (url, dict) => {\n    var _a;\n    if (Array.isArray(url))\n        return url.map(u => { var _a; return (_a = (0, utils_1.urlToOnion)(u, dict)) !== null && _a !== void 0 ? _a : u; });\n    if (typeof url === 'string')\n        return (_a = (0, utils_1.urlToOnion)(url, dict)) !== null && _a !== void 0 ? _a : url;\n    return url;\n};\nexports.getOnionDomain = getOnionDomain;\n//# sourceMappingURL=urlUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi91dGlscy91cmxVdGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0IsR0FBRyxlQUFlLEdBQUcsaUJBQWlCO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLGdFQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsUUFBUSxvRkFBb0Y7QUFDMUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvdXRpbHMvdXJsVXRpbHMuanM/NzdiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0T25pb25Eb21haW4gPSBleHBvcnRzLmdldEhvc3QgPSBleHBvcnRzLmdldE9yaWdpbiA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQHRyZXpvci91dGlsc1wiKTtcbmNvbnN0IGdldE9yaWdpbiA9ICh1cmwpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKHR5cGVvZiB1cmwgIT09ICdzdHJpbmcnKVxuICAgICAgICByZXR1cm4gJ3Vua25vd24nO1xuICAgIGlmICh1cmwuaW5kZXhPZignZmlsZTovLycpID09PSAwKVxuICAgICAgICByZXR1cm4gJ2ZpbGU6Ly8nO1xuICAgIGNvbnN0IFtvcmlnaW5dID0gKF9hID0gdXJsLm1hdGNoKC9eaHR0cHM/OlxcL1xcL1teL10rLykpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xuICAgIHJldHVybiBvcmlnaW4gIT09IG51bGwgJiYgb3JpZ2luICE9PSB2b2lkIDAgPyBvcmlnaW4gOiAndW5rbm93bic7XG59O1xuZXhwb3J0cy5nZXRPcmlnaW4gPSBnZXRPcmlnaW47XG5jb25zdCBnZXRIb3N0ID0gKHVybCkgPT4ge1xuICAgIHZhciBfYTtcbiAgICBpZiAodHlwZW9mIHVybCAhPT0gJ3N0cmluZycpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCBbLCAsIHVyaV0gPSAoX2EgPSB1cmwubWF0Y2goL14oaHR0cHM/KTpcXC9cXC8oW146L10rKT8vaSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xuICAgIGlmICh1cmkpIHtcbiAgICAgICAgY29uc3QgcGFydHMgPSB1cmkuc3BsaXQoJy4nKTtcbiAgICAgICAgcmV0dXJuIHBhcnRzLmxlbmd0aCA+IDJcbiAgICAgICAgICAgID9cbiAgICAgICAgICAgICAgICBwYXJ0cy5zbGljZShwYXJ0cy5sZW5ndGggLSAyLCBwYXJ0cy5sZW5ndGgpLmpvaW4oJy4nKVxuICAgICAgICAgICAgOiB1cmk7XG4gICAgfVxufTtcbmV4cG9ydHMuZ2V0SG9zdCA9IGdldEhvc3Q7XG5jb25zdCBnZXRPbmlvbkRvbWFpbiA9ICh1cmwsIGRpY3QpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodXJsKSlcbiAgICAgICAgcmV0dXJuIHVybC5tYXAodSA9PiB7IHZhciBfYTsgcmV0dXJuIChfYSA9ICgwLCB1dGlsc18xLnVybFRvT25pb24pKHUsIGRpY3QpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB1OyB9KTtcbiAgICBpZiAodHlwZW9mIHVybCA9PT0gJ3N0cmluZycpXG4gICAgICAgIHJldHVybiAoX2EgPSAoMCwgdXRpbHNfMS51cmxUb09uaW9uKSh1cmwsIGRpY3QpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB1cmw7XG4gICAgcmV0dXJuIHVybDtcbn07XG5leHBvcnRzLmdldE9uaW9uRG9tYWluID0gZ2V0T25pb25Eb21haW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmxVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/utils/urlUtils.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/env-utils/lib/envUtils.js":
/*!********************************************************!*\
  !*** ./node_modules/@trezor/env-utils/lib/envUtils.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.envUtils = exports.getEnvironment = exports.isNative = exports.isDesktop = exports.isWeb = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst ua_parser_js_1 = tslib_1.__importDefault(__webpack_require__(/*! ua-parser-js */ \"./node_modules/ua-parser-js/src/ua-parser.js\"));\nconst isWeb = () => process.env.SUITE_TYPE === 'web';\nexports.isWeb = isWeb;\nconst isDesktop = () => process.env.SUITE_TYPE === 'desktop';\nexports.isDesktop = isDesktop;\nconst isNative = () => false;\nexports.isNative = isNative;\nconst getEnvironment = () => {\n    if ((0, exports.isWeb)())\n        return 'web';\n    return 'desktop';\n};\nexports.getEnvironment = getEnvironment;\nlet userAgentParser;\nconst getUserAgent = () => window.navigator.userAgent;\nconst getUserAgentParser = () => {\n    if (!userAgentParser) {\n        const ua = getUserAgent();\n        userAgentParser = new ua_parser_js_1.default(ua);\n    }\n    return userAgentParser;\n};\nconst isAndroid = () => /Android/.test(getUserAgent());\nconst isChromeOs = () => /CrOS/.test(getUserAgent());\nconst getBrowserVersion = () => getUserAgentParser().getBrowser().version || '';\nconst getCommitHash = () => process.env.COMMITHASH || '';\nconst getOsVersion = () => getUserAgentParser().getOS().version || '';\nconst getSuiteVersion = () => process.env.VERSION || '';\nconst getBrowserName = () => {\n    const browserName = getUserAgentParser().getBrowser().name;\n    return (browserName === null || browserName === void 0 ? void 0 : browserName.toLowerCase()) || '';\n};\nconst isFirefox = () => getBrowserName() === 'firefox';\nconst getPlatform = () => window.navigator.platform;\nconst getPlatformLanguages = () => window.navigator.languages;\nconst getScreenWidth = () => window.screen.width;\nconst getScreenHeight = () => window.screen.height;\nconst getWindowWidth = () => window.innerWidth;\nconst getWindowHeight = () => window.innerHeight;\nconst getLocationOrigin = () => window.location.origin;\nconst getLocationHostname = () => window.location.hostname;\nconst getProcessPlatform = () => (typeof process !== 'undefined' ? process.platform : '');\nconst isMacOs = () => {\n    if (getProcessPlatform() === 'darwin')\n        return true;\n    if (typeof window === 'undefined')\n        return;\n    return getPlatform().startsWith('Mac');\n};\nconst isWindows = () => {\n    if (getProcessPlatform() === 'win32')\n        return true;\n    if (typeof window === 'undefined')\n        return;\n    return getPlatform().startsWith('Win');\n};\nconst isIOs = () => ['iPhone', 'iPad', 'iPod'].includes(getPlatform());\nconst isLinux = () => {\n    if (getProcessPlatform() === 'linux')\n        return true;\n    if (typeof window === 'undefined')\n        return;\n    if (isAndroid() || isChromeOs())\n        return false;\n    return getPlatform().startsWith('Linux');\n};\nconst isCodesignBuild = () => process.env.IS_CODESIGN_BUILD === 'true';\nconst getOsName = () => {\n    if (isWindows())\n        return 'windows';\n    if (isMacOs())\n        return 'macos';\n    if (isAndroid())\n        return 'android';\n    if (isChromeOs())\n        return 'chromeos';\n    if (isLinux())\n        return 'linux';\n    if (isIOs())\n        return 'ios';\n    return '';\n};\nconst getOsNameWeb = () => getUserAgentParser().getOS().name;\nconst getOsFamily = () => {\n    const osName = getUserAgentParser().getOS().name;\n    if (osName === 'Windows') {\n        return 'Windows';\n    }\n    if (osName === 'Mac OS') {\n        return 'MacOS';\n    }\n    return 'Linux';\n};\nconst getDeviceType = () => getUserAgentParser().getDevice().type;\nexports.envUtils = {\n    isWeb: exports.isWeb,\n    isDesktop: exports.isDesktop,\n    isNative: exports.isNative,\n    getEnvironment: exports.getEnvironment,\n    getUserAgent,\n    isAndroid,\n    isChromeOs,\n    getOsVersion,\n    getBrowserName,\n    getBrowserVersion,\n    getCommitHash,\n    getDeviceType,\n    getSuiteVersion,\n    isFirefox,\n    getPlatform,\n    getPlatformLanguages,\n    getScreenWidth,\n    getScreenHeight,\n    getWindowWidth,\n    getWindowHeight,\n    getLocationOrigin,\n    getLocationHostname,\n    getProcessPlatform,\n    isMacOs,\n    isWindows,\n    isIOs,\n    isLinux,\n    isCodesignBuild,\n    getOsName,\n    getOsNameWeb,\n    getOsFamily,\n};\n//# sourceMappingURL=envUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9lbnYtdXRpbHMvbGliL2VudlV0aWxzLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxzQkFBc0IsR0FBRyxnQkFBZ0IsR0FBRyxpQkFBaUIsR0FBRyxhQUFhO0FBQ2hHLGdCQUFnQixtQkFBTyxDQUFDLGlEQUFPO0FBQy9CLCtDQUErQyxtQkFBTyxDQUFDLGtFQUFjO0FBQ3JFLG9CQUFvQixPQUFPO0FBQzNCLGFBQWE7QUFDYix3QkFBd0IsT0FBTztBQUMvQixpQkFBaUI7QUFDakI7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsT0FBTztBQUNuQztBQUNBLDhCQUE4QixPQUFPO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLE9BQU8sbUJBQW1CLE9BQU87QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLE9BQU87QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9lbnYtdXRpbHMvbGliL2VudlV0aWxzLmpzP2FmNjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmVudlV0aWxzID0gZXhwb3J0cy5nZXRFbnZpcm9ubWVudCA9IGV4cG9ydHMuaXNOYXRpdmUgPSBleHBvcnRzLmlzRGVza3RvcCA9IGV4cG9ydHMuaXNXZWIgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgdWFfcGFyc2VyX2pzXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwidWEtcGFyc2VyLWpzXCIpKTtcbmNvbnN0IGlzV2ViID0gKCkgPT4gcHJvY2Vzcy5lbnYuU1VJVEVfVFlQRSA9PT0gJ3dlYic7XG5leHBvcnRzLmlzV2ViID0gaXNXZWI7XG5jb25zdCBpc0Rlc2t0b3AgPSAoKSA9PiBwcm9jZXNzLmVudi5TVUlURV9UWVBFID09PSAnZGVza3RvcCc7XG5leHBvcnRzLmlzRGVza3RvcCA9IGlzRGVza3RvcDtcbmNvbnN0IGlzTmF0aXZlID0gKCkgPT4gZmFsc2U7XG5leHBvcnRzLmlzTmF0aXZlID0gaXNOYXRpdmU7XG5jb25zdCBnZXRFbnZpcm9ubWVudCA9ICgpID0+IHtcbiAgICBpZiAoKDAsIGV4cG9ydHMuaXNXZWIpKCkpXG4gICAgICAgIHJldHVybiAnd2ViJztcbiAgICByZXR1cm4gJ2Rlc2t0b3AnO1xufTtcbmV4cG9ydHMuZ2V0RW52aXJvbm1lbnQgPSBnZXRFbnZpcm9ubWVudDtcbmxldCB1c2VyQWdlbnRQYXJzZXI7XG5jb25zdCBnZXRVc2VyQWdlbnQgPSAoKSA9PiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbmNvbnN0IGdldFVzZXJBZ2VudFBhcnNlciA9ICgpID0+IHtcbiAgICBpZiAoIXVzZXJBZ2VudFBhcnNlcikge1xuICAgICAgICBjb25zdCB1YSA9IGdldFVzZXJBZ2VudCgpO1xuICAgICAgICB1c2VyQWdlbnRQYXJzZXIgPSBuZXcgdWFfcGFyc2VyX2pzXzEuZGVmYXVsdCh1YSk7XG4gICAgfVxuICAgIHJldHVybiB1c2VyQWdlbnRQYXJzZXI7XG59O1xuY29uc3QgaXNBbmRyb2lkID0gKCkgPT4gL0FuZHJvaWQvLnRlc3QoZ2V0VXNlckFnZW50KCkpO1xuY29uc3QgaXNDaHJvbWVPcyA9ICgpID0+IC9Dck9TLy50ZXN0KGdldFVzZXJBZ2VudCgpKTtcbmNvbnN0IGdldEJyb3dzZXJWZXJzaW9uID0gKCkgPT4gZ2V0VXNlckFnZW50UGFyc2VyKCkuZ2V0QnJvd3NlcigpLnZlcnNpb24gfHwgJyc7XG5jb25zdCBnZXRDb21taXRIYXNoID0gKCkgPT4gcHJvY2Vzcy5lbnYuQ09NTUlUSEFTSCB8fCAnJztcbmNvbnN0IGdldE9zVmVyc2lvbiA9ICgpID0+IGdldFVzZXJBZ2VudFBhcnNlcigpLmdldE9TKCkudmVyc2lvbiB8fCAnJztcbmNvbnN0IGdldFN1aXRlVmVyc2lvbiA9ICgpID0+IHByb2Nlc3MuZW52LlZFUlNJT04gfHwgJyc7XG5jb25zdCBnZXRCcm93c2VyTmFtZSA9ICgpID0+IHtcbiAgICBjb25zdCBicm93c2VyTmFtZSA9IGdldFVzZXJBZ2VudFBhcnNlcigpLmdldEJyb3dzZXIoKS5uYW1lO1xuICAgIHJldHVybiAoYnJvd3Nlck5hbWUgPT09IG51bGwgfHwgYnJvd3Nlck5hbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGJyb3dzZXJOYW1lLnRvTG93ZXJDYXNlKCkpIHx8ICcnO1xufTtcbmNvbnN0IGlzRmlyZWZveCA9ICgpID0+IGdldEJyb3dzZXJOYW1lKCkgPT09ICdmaXJlZm94JztcbmNvbnN0IGdldFBsYXRmb3JtID0gKCkgPT4gd2luZG93Lm5hdmlnYXRvci5wbGF0Zm9ybTtcbmNvbnN0IGdldFBsYXRmb3JtTGFuZ3VhZ2VzID0gKCkgPT4gd2luZG93Lm5hdmlnYXRvci5sYW5ndWFnZXM7XG5jb25zdCBnZXRTY3JlZW5XaWR0aCA9ICgpID0+IHdpbmRvdy5zY3JlZW4ud2lkdGg7XG5jb25zdCBnZXRTY3JlZW5IZWlnaHQgPSAoKSA9PiB3aW5kb3cuc2NyZWVuLmhlaWdodDtcbmNvbnN0IGdldFdpbmRvd1dpZHRoID0gKCkgPT4gd2luZG93LmlubmVyV2lkdGg7XG5jb25zdCBnZXRXaW5kb3dIZWlnaHQgPSAoKSA9PiB3aW5kb3cuaW5uZXJIZWlnaHQ7XG5jb25zdCBnZXRMb2NhdGlvbk9yaWdpbiA9ICgpID0+IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW47XG5jb25zdCBnZXRMb2NhdGlvbkhvc3RuYW1lID0gKCkgPT4gd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lO1xuY29uc3QgZ2V0UHJvY2Vzc1BsYXRmb3JtID0gKCkgPT4gKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyA/IHByb2Nlc3MucGxhdGZvcm0gOiAnJyk7XG5jb25zdCBpc01hY09zID0gKCkgPT4ge1xuICAgIGlmIChnZXRQcm9jZXNzUGxhdGZvcm0oKSA9PT0gJ2RhcndpbicpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJylcbiAgICAgICAgcmV0dXJuO1xuICAgIHJldHVybiBnZXRQbGF0Zm9ybSgpLnN0YXJ0c1dpdGgoJ01hYycpO1xufTtcbmNvbnN0IGlzV2luZG93cyA9ICgpID0+IHtcbiAgICBpZiAoZ2V0UHJvY2Vzc1BsYXRmb3JtKCkgPT09ICd3aW4zMicpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJylcbiAgICAgICAgcmV0dXJuO1xuICAgIHJldHVybiBnZXRQbGF0Zm9ybSgpLnN0YXJ0c1dpdGgoJ1dpbicpO1xufTtcbmNvbnN0IGlzSU9zID0gKCkgPT4gWydpUGhvbmUnLCAnaVBhZCcsICdpUG9kJ10uaW5jbHVkZXMoZ2V0UGxhdGZvcm0oKSk7XG5jb25zdCBpc0xpbnV4ID0gKCkgPT4ge1xuICAgIGlmIChnZXRQcm9jZXNzUGxhdGZvcm0oKSA9PT0gJ2xpbnV4JylcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKGlzQW5kcm9pZCgpIHx8IGlzQ2hyb21lT3MoKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiBnZXRQbGF0Zm9ybSgpLnN0YXJ0c1dpdGgoJ0xpbnV4Jyk7XG59O1xuY29uc3QgaXNDb2Rlc2lnbkJ1aWxkID0gKCkgPT4gcHJvY2Vzcy5lbnYuSVNfQ09ERVNJR05fQlVJTEQgPT09ICd0cnVlJztcbmNvbnN0IGdldE9zTmFtZSA9ICgpID0+IHtcbiAgICBpZiAoaXNXaW5kb3dzKCkpXG4gICAgICAgIHJldHVybiAnd2luZG93cyc7XG4gICAgaWYgKGlzTWFjT3MoKSlcbiAgICAgICAgcmV0dXJuICdtYWNvcyc7XG4gICAgaWYgKGlzQW5kcm9pZCgpKVxuICAgICAgICByZXR1cm4gJ2FuZHJvaWQnO1xuICAgIGlmIChpc0Nocm9tZU9zKCkpXG4gICAgICAgIHJldHVybiAnY2hyb21lb3MnO1xuICAgIGlmIChpc0xpbnV4KCkpXG4gICAgICAgIHJldHVybiAnbGludXgnO1xuICAgIGlmIChpc0lPcygpKVxuICAgICAgICByZXR1cm4gJ2lvcyc7XG4gICAgcmV0dXJuICcnO1xufTtcbmNvbnN0IGdldE9zTmFtZVdlYiA9ICgpID0+IGdldFVzZXJBZ2VudFBhcnNlcigpLmdldE9TKCkubmFtZTtcbmNvbnN0IGdldE9zRmFtaWx5ID0gKCkgPT4ge1xuICAgIGNvbnN0IG9zTmFtZSA9IGdldFVzZXJBZ2VudFBhcnNlcigpLmdldE9TKCkubmFtZTtcbiAgICBpZiAob3NOYW1lID09PSAnV2luZG93cycpIHtcbiAgICAgICAgcmV0dXJuICdXaW5kb3dzJztcbiAgICB9XG4gICAgaWYgKG9zTmFtZSA9PT0gJ01hYyBPUycpIHtcbiAgICAgICAgcmV0dXJuICdNYWNPUyc7XG4gICAgfVxuICAgIHJldHVybiAnTGludXgnO1xufTtcbmNvbnN0IGdldERldmljZVR5cGUgPSAoKSA9PiBnZXRVc2VyQWdlbnRQYXJzZXIoKS5nZXREZXZpY2UoKS50eXBlO1xuZXhwb3J0cy5lbnZVdGlscyA9IHtcbiAgICBpc1dlYjogZXhwb3J0cy5pc1dlYixcbiAgICBpc0Rlc2t0b3A6IGV4cG9ydHMuaXNEZXNrdG9wLFxuICAgIGlzTmF0aXZlOiBleHBvcnRzLmlzTmF0aXZlLFxuICAgIGdldEVudmlyb25tZW50OiBleHBvcnRzLmdldEVudmlyb25tZW50LFxuICAgIGdldFVzZXJBZ2VudCxcbiAgICBpc0FuZHJvaWQsXG4gICAgaXNDaHJvbWVPcyxcbiAgICBnZXRPc1ZlcnNpb24sXG4gICAgZ2V0QnJvd3Nlck5hbWUsXG4gICAgZ2V0QnJvd3NlclZlcnNpb24sXG4gICAgZ2V0Q29tbWl0SGFzaCxcbiAgICBnZXREZXZpY2VUeXBlLFxuICAgIGdldFN1aXRlVmVyc2lvbixcbiAgICBpc0ZpcmVmb3gsXG4gICAgZ2V0UGxhdGZvcm0sXG4gICAgZ2V0UGxhdGZvcm1MYW5ndWFnZXMsXG4gICAgZ2V0U2NyZWVuV2lkdGgsXG4gICAgZ2V0U2NyZWVuSGVpZ2h0LFxuICAgIGdldFdpbmRvd1dpZHRoLFxuICAgIGdldFdpbmRvd0hlaWdodCxcbiAgICBnZXRMb2NhdGlvbk9yaWdpbixcbiAgICBnZXRMb2NhdGlvbkhvc3RuYW1lLFxuICAgIGdldFByb2Nlc3NQbGF0Zm9ybSxcbiAgICBpc01hY09zLFxuICAgIGlzV2luZG93cyxcbiAgICBpc0lPcyxcbiAgICBpc0xpbnV4LFxuICAgIGlzQ29kZXNpZ25CdWlsZCxcbiAgICBnZXRPc05hbWUsXG4gICAgZ2V0T3NOYW1lV2ViLFxuICAgIGdldE9zRmFtaWx5LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudlV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/env-utils/lib/envUtils.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/env-utils/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@trezor/env-utils/lib/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getOsFamily = exports.getOsNameWeb = exports.getOsName = exports.isCodesignBuild = exports.isLinux = exports.isIOs = exports.isWindows = exports.isMacOs = exports.getProcessPlatform = exports.getLocationHostname = exports.getLocationOrigin = exports.getWindowHeight = exports.getWindowWidth = exports.getScreenHeight = exports.getScreenWidth = exports.getPlatformLanguages = exports.getPlatform = exports.isFirefox = exports.getSuiteVersion = exports.getOsVersion = exports.getDeviceType = exports.getCommitHash = exports.getBrowserName = exports.getBrowserVersion = exports.isChromeOs = exports.isAndroid = exports.getUserAgent = exports.getEnvironment = exports.isNative = exports.isDesktop = exports.isWeb = void 0;\nconst envUtils_1 = __webpack_require__(/*! ./envUtils */ \"./node_modules/@trezor/env-utils/lib/envUtils.js\");\nexports.isWeb = envUtils_1.envUtils.isWeb, exports.isDesktop = envUtils_1.envUtils.isDesktop, exports.isNative = envUtils_1.envUtils.isNative, exports.getEnvironment = envUtils_1.envUtils.getEnvironment, exports.getUserAgent = envUtils_1.envUtils.getUserAgent, exports.isAndroid = envUtils_1.envUtils.isAndroid, exports.isChromeOs = envUtils_1.envUtils.isChromeOs, exports.getBrowserVersion = envUtils_1.envUtils.getBrowserVersion, exports.getBrowserName = envUtils_1.envUtils.getBrowserName, exports.getCommitHash = envUtils_1.envUtils.getCommitHash, exports.getDeviceType = envUtils_1.envUtils.getDeviceType, exports.getOsVersion = envUtils_1.envUtils.getOsVersion, exports.getSuiteVersion = envUtils_1.envUtils.getSuiteVersion, exports.isFirefox = envUtils_1.envUtils.isFirefox, exports.getPlatform = envUtils_1.envUtils.getPlatform, exports.getPlatformLanguages = envUtils_1.envUtils.getPlatformLanguages, exports.getScreenWidth = envUtils_1.envUtils.getScreenWidth, exports.getScreenHeight = envUtils_1.envUtils.getScreenHeight, exports.getWindowWidth = envUtils_1.envUtils.getWindowWidth, exports.getWindowHeight = envUtils_1.envUtils.getWindowHeight, exports.getLocationOrigin = envUtils_1.envUtils.getLocationOrigin, exports.getLocationHostname = envUtils_1.envUtils.getLocationHostname, exports.getProcessPlatform = envUtils_1.envUtils.getProcessPlatform, exports.isMacOs = envUtils_1.envUtils.isMacOs, exports.isWindows = envUtils_1.envUtils.isWindows, exports.isIOs = envUtils_1.envUtils.isIOs, exports.isLinux = envUtils_1.envUtils.isLinux, exports.isCodesignBuild = envUtils_1.envUtils.isCodesignBuild, exports.getOsName = envUtils_1.envUtils.getOsName, exports.getOsNameWeb = envUtils_1.envUtils.getOsNameWeb, exports.getOsFamily = envUtils_1.envUtils.getOsFamily;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9lbnYtdXRpbHMvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLG9CQUFvQixHQUFHLGlCQUFpQixHQUFHLHVCQUF1QixHQUFHLGVBQWUsR0FBRyxhQUFhLEdBQUcsaUJBQWlCLEdBQUcsZUFBZSxHQUFHLDBCQUEwQixHQUFHLDJCQUEyQixHQUFHLHlCQUF5QixHQUFHLHVCQUF1QixHQUFHLHNCQUFzQixHQUFHLHVCQUF1QixHQUFHLHNCQUFzQixHQUFHLDRCQUE0QixHQUFHLG1CQUFtQixHQUFHLGlCQUFpQixHQUFHLHVCQUF1QixHQUFHLG9CQUFvQixHQUFHLHFCQUFxQixHQUFHLHFCQUFxQixHQUFHLHNCQUFzQixHQUFHLHlCQUF5QixHQUFHLGtCQUFrQixHQUFHLGlCQUFpQixHQUFHLG9CQUFvQixHQUFHLHNCQUFzQixHQUFHLGdCQUFnQixHQUFHLGlCQUFpQixHQUFHLGFBQWE7QUFDNXNCLG1CQUFtQixtQkFBTyxDQUFDLG9FQUFZO0FBQ3ZDLGFBQWEsOEJBQThCLGlCQUFpQixrQ0FBa0MsZ0JBQWdCLGlDQUFpQyxzQkFBc0IsdUNBQXVDLG9CQUFvQixxQ0FBcUMsaUJBQWlCLGtDQUFrQyxrQkFBa0IsbUNBQW1DLHlCQUF5QiwwQ0FBMEMsc0JBQXNCLHVDQUF1QyxxQkFBcUIsc0NBQXNDLHFCQUFxQixzQ0FBc0Msb0JBQW9CLHFDQUFxQyx1QkFBdUIsd0NBQXdDLGlCQUFpQixrQ0FBa0MsbUJBQW1CLG9DQUFvQyw0QkFBNEIsNkNBQTZDLHNCQUFzQix1Q0FBdUMsdUJBQXVCLHdDQUF3QyxzQkFBc0IsdUNBQXVDLHVCQUF1Qix3Q0FBd0MseUJBQXlCLDBDQUEwQywyQkFBMkIsNENBQTRDLDBCQUEwQiwyQ0FBMkMsZUFBZSxnQ0FBZ0MsaUJBQWlCLGtDQUFrQyxhQUFhLDhCQUE4QixlQUFlLGdDQUFnQyx1QkFBdUIsd0NBQXdDLGlCQUFpQixrQ0FBa0Msb0JBQW9CLHFDQUFxQyxtQkFBbUI7QUFDL3NEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Vudi11dGlscy9saWIvaW5kZXguanM/OTI4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0T3NGYW1pbHkgPSBleHBvcnRzLmdldE9zTmFtZVdlYiA9IGV4cG9ydHMuZ2V0T3NOYW1lID0gZXhwb3J0cy5pc0NvZGVzaWduQnVpbGQgPSBleHBvcnRzLmlzTGludXggPSBleHBvcnRzLmlzSU9zID0gZXhwb3J0cy5pc1dpbmRvd3MgPSBleHBvcnRzLmlzTWFjT3MgPSBleHBvcnRzLmdldFByb2Nlc3NQbGF0Zm9ybSA9IGV4cG9ydHMuZ2V0TG9jYXRpb25Ib3N0bmFtZSA9IGV4cG9ydHMuZ2V0TG9jYXRpb25PcmlnaW4gPSBleHBvcnRzLmdldFdpbmRvd0hlaWdodCA9IGV4cG9ydHMuZ2V0V2luZG93V2lkdGggPSBleHBvcnRzLmdldFNjcmVlbkhlaWdodCA9IGV4cG9ydHMuZ2V0U2NyZWVuV2lkdGggPSBleHBvcnRzLmdldFBsYXRmb3JtTGFuZ3VhZ2VzID0gZXhwb3J0cy5nZXRQbGF0Zm9ybSA9IGV4cG9ydHMuaXNGaXJlZm94ID0gZXhwb3J0cy5nZXRTdWl0ZVZlcnNpb24gPSBleHBvcnRzLmdldE9zVmVyc2lvbiA9IGV4cG9ydHMuZ2V0RGV2aWNlVHlwZSA9IGV4cG9ydHMuZ2V0Q29tbWl0SGFzaCA9IGV4cG9ydHMuZ2V0QnJvd3Nlck5hbWUgPSBleHBvcnRzLmdldEJyb3dzZXJWZXJzaW9uID0gZXhwb3J0cy5pc0Nocm9tZU9zID0gZXhwb3J0cy5pc0FuZHJvaWQgPSBleHBvcnRzLmdldFVzZXJBZ2VudCA9IGV4cG9ydHMuZ2V0RW52aXJvbm1lbnQgPSBleHBvcnRzLmlzTmF0aXZlID0gZXhwb3J0cy5pc0Rlc2t0b3AgPSBleHBvcnRzLmlzV2ViID0gdm9pZCAwO1xuY29uc3QgZW52VXRpbHNfMSA9IHJlcXVpcmUoXCIuL2VudlV0aWxzXCIpO1xuZXhwb3J0cy5pc1dlYiA9IGVudlV0aWxzXzEuZW52VXRpbHMuaXNXZWIsIGV4cG9ydHMuaXNEZXNrdG9wID0gZW52VXRpbHNfMS5lbnZVdGlscy5pc0Rlc2t0b3AsIGV4cG9ydHMuaXNOYXRpdmUgPSBlbnZVdGlsc18xLmVudlV0aWxzLmlzTmF0aXZlLCBleHBvcnRzLmdldEVudmlyb25tZW50ID0gZW52VXRpbHNfMS5lbnZVdGlscy5nZXRFbnZpcm9ubWVudCwgZXhwb3J0cy5nZXRVc2VyQWdlbnQgPSBlbnZVdGlsc18xLmVudlV0aWxzLmdldFVzZXJBZ2VudCwgZXhwb3J0cy5pc0FuZHJvaWQgPSBlbnZVdGlsc18xLmVudlV0aWxzLmlzQW5kcm9pZCwgZXhwb3J0cy5pc0Nocm9tZU9zID0gZW52VXRpbHNfMS5lbnZVdGlscy5pc0Nocm9tZU9zLCBleHBvcnRzLmdldEJyb3dzZXJWZXJzaW9uID0gZW52VXRpbHNfMS5lbnZVdGlscy5nZXRCcm93c2VyVmVyc2lvbiwgZXhwb3J0cy5nZXRCcm93c2VyTmFtZSA9IGVudlV0aWxzXzEuZW52VXRpbHMuZ2V0QnJvd3Nlck5hbWUsIGV4cG9ydHMuZ2V0Q29tbWl0SGFzaCA9IGVudlV0aWxzXzEuZW52VXRpbHMuZ2V0Q29tbWl0SGFzaCwgZXhwb3J0cy5nZXREZXZpY2VUeXBlID0gZW52VXRpbHNfMS5lbnZVdGlscy5nZXREZXZpY2VUeXBlLCBleHBvcnRzLmdldE9zVmVyc2lvbiA9IGVudlV0aWxzXzEuZW52VXRpbHMuZ2V0T3NWZXJzaW9uLCBleHBvcnRzLmdldFN1aXRlVmVyc2lvbiA9IGVudlV0aWxzXzEuZW52VXRpbHMuZ2V0U3VpdGVWZXJzaW9uLCBleHBvcnRzLmlzRmlyZWZveCA9IGVudlV0aWxzXzEuZW52VXRpbHMuaXNGaXJlZm94LCBleHBvcnRzLmdldFBsYXRmb3JtID0gZW52VXRpbHNfMS5lbnZVdGlscy5nZXRQbGF0Zm9ybSwgZXhwb3J0cy5nZXRQbGF0Zm9ybUxhbmd1YWdlcyA9IGVudlV0aWxzXzEuZW52VXRpbHMuZ2V0UGxhdGZvcm1MYW5ndWFnZXMsIGV4cG9ydHMuZ2V0U2NyZWVuV2lkdGggPSBlbnZVdGlsc18xLmVudlV0aWxzLmdldFNjcmVlbldpZHRoLCBleHBvcnRzLmdldFNjcmVlbkhlaWdodCA9IGVudlV0aWxzXzEuZW52VXRpbHMuZ2V0U2NyZWVuSGVpZ2h0LCBleHBvcnRzLmdldFdpbmRvd1dpZHRoID0gZW52VXRpbHNfMS5lbnZVdGlscy5nZXRXaW5kb3dXaWR0aCwgZXhwb3J0cy5nZXRXaW5kb3dIZWlnaHQgPSBlbnZVdGlsc18xLmVudlV0aWxzLmdldFdpbmRvd0hlaWdodCwgZXhwb3J0cy5nZXRMb2NhdGlvbk9yaWdpbiA9IGVudlV0aWxzXzEuZW52VXRpbHMuZ2V0TG9jYXRpb25PcmlnaW4sIGV4cG9ydHMuZ2V0TG9jYXRpb25Ib3N0bmFtZSA9IGVudlV0aWxzXzEuZW52VXRpbHMuZ2V0TG9jYXRpb25Ib3N0bmFtZSwgZXhwb3J0cy5nZXRQcm9jZXNzUGxhdGZvcm0gPSBlbnZVdGlsc18xLmVudlV0aWxzLmdldFByb2Nlc3NQbGF0Zm9ybSwgZXhwb3J0cy5pc01hY09zID0gZW52VXRpbHNfMS5lbnZVdGlscy5pc01hY09zLCBleHBvcnRzLmlzV2luZG93cyA9IGVudlV0aWxzXzEuZW52VXRpbHMuaXNXaW5kb3dzLCBleHBvcnRzLmlzSU9zID0gZW52VXRpbHNfMS5lbnZVdGlscy5pc0lPcywgZXhwb3J0cy5pc0xpbnV4ID0gZW52VXRpbHNfMS5lbnZVdGlscy5pc0xpbnV4LCBleHBvcnRzLmlzQ29kZXNpZ25CdWlsZCA9IGVudlV0aWxzXzEuZW52VXRpbHMuaXNDb2Rlc2lnbkJ1aWxkLCBleHBvcnRzLmdldE9zTmFtZSA9IGVudlV0aWxzXzEuZW52VXRpbHMuZ2V0T3NOYW1lLCBleHBvcnRzLmdldE9zTmFtZVdlYiA9IGVudlV0aWxzXzEuZW52VXRpbHMuZ2V0T3NOYW1lV2ViLCBleHBvcnRzLmdldE9zRmFtaWx5ID0gZW52VXRpbHNfMS5lbnZVdGlscy5nZXRPc0ZhbWlseTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/env-utils/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/protobuf/lib/decode.js":
/*!*****************************************************!*\
  !*** ./node_modules/@trezor/protobuf/lib/decode.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decode = exports.messageToJSON = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@trezor/protobuf/lib/utils.js\");\nconst transform = (field, value) => {\n    if ((0, utils_1.isPrimitiveField)(field.type)) {\n        if (field.optional && typeof value === 'undefined') {\n            return null;\n        }\n        if (field.type === 'bytes') {\n            return Buffer.from(value).toString('hex');\n        }\n        if (field.long) {\n            if (Number.isSafeInteger(value.toNumber())) {\n                return value.toNumber();\n            }\n            return value.toString();\n        }\n        return value;\n    }\n    if ('valuesById' in field.resolvedType) {\n        return field.resolvedType.valuesById[value];\n    }\n    if (field.resolvedType.fields) {\n        return messageToJSON(value, field.resolvedType.fields);\n    }\n    throw new Error(`transport: decode: case not handled: ${field}`);\n};\nfunction messageToJSON(MessageParam, fields) {\n    if (!MessageParam) {\n        return {};\n    }\n    const message = tslib_1.__rest(MessageParam, []);\n    const res = {};\n    Object.keys(fields).forEach(key => {\n        const field = fields[key];\n        const value = message[key];\n        if (field.repeated) {\n            res[key] = value.map((v) => transform(field, v));\n        }\n        else {\n            res[key] = transform(field, value);\n        }\n    });\n    return res;\n}\nexports.messageToJSON = messageToJSON;\nconst decode = (MessageParam, data) => {\n    const decoded = MessageParam.decode(new Uint8Array(data));\n    return messageToJSON(decoded, decoded.$type.fields);\n};\nexports.decode = decode;\n//# sourceMappingURL=decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvZGVjb2RlLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcscUJBQXFCO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLGlEQUFPO0FBQy9CLGdCQUFnQixtQkFBTyxDQUFDLDZEQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixNQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxNQUFNO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvcHJvdG9idWYvbGliL2RlY29kZS5qcz9kOWJiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGUgPSBleHBvcnRzLm1lc3NhZ2VUb0pTT04gPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgdHJhbnNmb3JtID0gKGZpZWxkLCB2YWx1ZSkgPT4ge1xuICAgIGlmICgoMCwgdXRpbHNfMS5pc1ByaW1pdGl2ZUZpZWxkKShmaWVsZC50eXBlKSkge1xuICAgICAgICBpZiAoZmllbGQub3B0aW9uYWwgJiYgdHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZpZWxkLnR5cGUgPT09ICdieXRlcycpIHtcbiAgICAgICAgICAgIHJldHVybiBCdWZmZXIuZnJvbSh2YWx1ZSkudG9TdHJpbmcoJ2hleCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmaWVsZC5sb25nKSB7XG4gICAgICAgICAgICBpZiAoTnVtYmVyLmlzU2FmZUludGVnZXIodmFsdWUudG9OdW1iZXIoKSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUudG9OdW1iZXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgaWYgKCd2YWx1ZXNCeUlkJyBpbiBmaWVsZC5yZXNvbHZlZFR5cGUpIHtcbiAgICAgICAgcmV0dXJuIGZpZWxkLnJlc29sdmVkVHlwZS52YWx1ZXNCeUlkW3ZhbHVlXTtcbiAgICB9XG4gICAgaWYgKGZpZWxkLnJlc29sdmVkVHlwZS5maWVsZHMpIHtcbiAgICAgICAgcmV0dXJuIG1lc3NhZ2VUb0pTT04odmFsdWUsIGZpZWxkLnJlc29sdmVkVHlwZS5maWVsZHMpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoYHRyYW5zcG9ydDogZGVjb2RlOiBjYXNlIG5vdCBoYW5kbGVkOiAke2ZpZWxkfWApO1xufTtcbmZ1bmN0aW9uIG1lc3NhZ2VUb0pTT04oTWVzc2FnZVBhcmFtLCBmaWVsZHMpIHtcbiAgICBpZiAoIU1lc3NhZ2VQYXJhbSkge1xuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGNvbnN0IG1lc3NhZ2UgPSB0c2xpYl8xLl9fcmVzdChNZXNzYWdlUGFyYW0sIFtdKTtcbiAgICBjb25zdCByZXMgPSB7fTtcbiAgICBPYmplY3Qua2V5cyhmaWVsZHMpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNba2V5XTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBtZXNzYWdlW2tleV07XG4gICAgICAgIGlmIChmaWVsZC5yZXBlYXRlZCkge1xuICAgICAgICAgICAgcmVzW2tleV0gPSB2YWx1ZS5tYXAoKHYpID0+IHRyYW5zZm9ybShmaWVsZCwgdikpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmVzW2tleV0gPSB0cmFuc2Zvcm0oZmllbGQsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiByZXM7XG59XG5leHBvcnRzLm1lc3NhZ2VUb0pTT04gPSBtZXNzYWdlVG9KU09OO1xuY29uc3QgZGVjb2RlID0gKE1lc3NhZ2VQYXJhbSwgZGF0YSkgPT4ge1xuICAgIGNvbnN0IGRlY29kZWQgPSBNZXNzYWdlUGFyYW0uZGVjb2RlKG5ldyBVaW50OEFycmF5KGRhdGEpKTtcbiAgICByZXR1cm4gbWVzc2FnZVRvSlNPTihkZWNvZGVkLCBkZWNvZGVkLiR0eXBlLmZpZWxkcyk7XG59O1xuZXhwb3J0cy5kZWNvZGUgPSBkZWNvZGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/protobuf/lib/decode.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/protobuf/lib/encode.js":
/*!*****************************************************!*\
  !*** ./node_modules/@trezor/protobuf/lib/encode.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encode = exports.patch = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@trezor/protobuf/lib/utils.js\");\nconst transform = (fieldType, value) => {\n    if (fieldType === 'bytes') {\n        if (typeof value === 'string' && !value)\n            return value;\n        return Buffer.from(value, 'hex');\n    }\n    if (typeof value === 'number' && !Number.isSafeInteger(value)) {\n        throw new RangeError('field value is not within safe integer range');\n    }\n    return value;\n};\nfunction patch(Message, payload) {\n    const patched = {};\n    if (!Message.fields) {\n        return patched;\n    }\n    Object.keys(Message.fields).forEach(key => {\n        const field = Message.fields[key];\n        const value = payload[key];\n        if (typeof value === 'undefined') {\n            return;\n        }\n        if ((0, utils_1.isPrimitiveField)(field.type)) {\n            if (field.repeated) {\n                patched[key] = value.map((v) => transform(field.type, v));\n            }\n            else {\n                patched[key] = transform(field.type, value);\n            }\n            return;\n        }\n        if (field.repeated) {\n            const RefMessage = Message.lookupTypeOrEnum(field.type);\n            patched[key] = value.map((v) => patch(RefMessage, v));\n        }\n        else if (typeof value === 'object' && value !== null) {\n            const RefMessage = Message.lookupType(field.type);\n            patched[key] = patch(RefMessage, value);\n        }\n        else if (typeof value === 'number') {\n            const RefMessage = Message.lookupEnum(field.type);\n            patched[key] = RefMessage.values[value];\n        }\n        else {\n            patched[key] = value;\n        }\n    });\n    return patched;\n}\nexports.patch = patch;\nconst encode = (Message, data) => {\n    const payload = patch(Message, data);\n    const message = Message.fromObject(payload);\n    const bytes = Message.encode(message).finish();\n    return Buffer.from(bytes);\n};\nexports.encode = encode;\n//# sourceMappingURL=encode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvZW5jb2RlLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsYUFBYTtBQUM5QixnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsTUFBTTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakI7QUFDQSxjQUFjO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvcHJvdG9idWYvbGliL2VuY29kZS5qcz8yNjA3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5lbmNvZGUgPSBleHBvcnRzLnBhdGNoID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgdHJhbnNmb3JtID0gKGZpZWxkVHlwZSwgdmFsdWUpID0+IHtcbiAgICBpZiAoZmllbGRUeXBlID09PSAnYnl0ZXMnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmICF2YWx1ZSlcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHZhbHVlLCAnaGV4Jyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmICFOdW1iZXIuaXNTYWZlSW50ZWdlcih2YWx1ZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ2ZpZWxkIHZhbHVlIGlzIG5vdCB3aXRoaW4gc2FmZSBpbnRlZ2VyIHJhbmdlJyk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZTtcbn07XG5mdW5jdGlvbiBwYXRjaChNZXNzYWdlLCBwYXlsb2FkKSB7XG4gICAgY29uc3QgcGF0Y2hlZCA9IHt9O1xuICAgIGlmICghTWVzc2FnZS5maWVsZHMpIHtcbiAgICAgICAgcmV0dXJuIHBhdGNoZWQ7XG4gICAgfVxuICAgIE9iamVjdC5rZXlzKE1lc3NhZ2UuZmllbGRzKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGNvbnN0IGZpZWxkID0gTWVzc2FnZS5maWVsZHNba2V5XTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBwYXlsb2FkW2tleV07XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCgwLCB1dGlsc18xLmlzUHJpbWl0aXZlRmllbGQpKGZpZWxkLnR5cGUpKSB7XG4gICAgICAgICAgICBpZiAoZmllbGQucmVwZWF0ZWQpIHtcbiAgICAgICAgICAgICAgICBwYXRjaGVkW2tleV0gPSB2YWx1ZS5tYXAoKHYpID0+IHRyYW5zZm9ybShmaWVsZC50eXBlLCB2KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBwYXRjaGVkW2tleV0gPSB0cmFuc2Zvcm0oZmllbGQudHlwZSwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmaWVsZC5yZXBlYXRlZCkge1xuICAgICAgICAgICAgY29uc3QgUmVmTWVzc2FnZSA9IE1lc3NhZ2UubG9va3VwVHlwZU9yRW51bShmaWVsZC50eXBlKTtcbiAgICAgICAgICAgIHBhdGNoZWRba2V5XSA9IHZhbHVlLm1hcCgodikgPT4gcGF0Y2goUmVmTWVzc2FnZSwgdikpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IFJlZk1lc3NhZ2UgPSBNZXNzYWdlLmxvb2t1cFR5cGUoZmllbGQudHlwZSk7XG4gICAgICAgICAgICBwYXRjaGVkW2tleV0gPSBwYXRjaChSZWZNZXNzYWdlLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgY29uc3QgUmVmTWVzc2FnZSA9IE1lc3NhZ2UubG9va3VwRW51bShmaWVsZC50eXBlKTtcbiAgICAgICAgICAgIHBhdGNoZWRba2V5XSA9IFJlZk1lc3NhZ2UudmFsdWVzW3ZhbHVlXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHBhdGNoZWRba2V5XSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHBhdGNoZWQ7XG59XG5leHBvcnRzLnBhdGNoID0gcGF0Y2g7XG5jb25zdCBlbmNvZGUgPSAoTWVzc2FnZSwgZGF0YSkgPT4ge1xuICAgIGNvbnN0IHBheWxvYWQgPSBwYXRjaChNZXNzYWdlLCBkYXRhKTtcbiAgICBjb25zdCBtZXNzYWdlID0gTWVzc2FnZS5mcm9tT2JqZWN0KHBheWxvYWQpO1xuICAgIGNvbnN0IGJ5dGVzID0gTWVzc2FnZS5lbmNvZGUobWVzc2FnZSkuZmluaXNoKCk7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGJ5dGVzKTtcbn07XG5leHBvcnRzLmVuY29kZSA9IGVuY29kZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVuY29kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/protobuf/lib/encode.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/protobuf/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@trezor/protobuf/lib/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DeviceModelInternal = exports.MessagesSchema = exports.createMessageFromType = exports.createMessageFromName = exports.parseConfigure = exports.Messages = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./decode */ \"./node_modules/@trezor/protobuf/lib/decode.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./encode */ \"./node_modules/@trezor/protobuf/lib/encode.js\"), exports);\nexports.Messages = tslib_1.__importStar(__webpack_require__(/*! ./messages */ \"./node_modules/@trezor/protobuf/lib/messages.js\"));\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@trezor/protobuf/lib/types.js\"), exports);\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@trezor/protobuf/lib/utils.js\");\nObject.defineProperty(exports, \"parseConfigure\", ({ enumerable: true, get: function () { return utils_1.parseConfigure; } }));\nObject.defineProperty(exports, \"createMessageFromName\", ({ enumerable: true, get: function () { return utils_1.createMessageFromName; } }));\nObject.defineProperty(exports, \"createMessageFromType\", ({ enumerable: true, get: function () { return utils_1.createMessageFromType; } }));\nexports.MessagesSchema = tslib_1.__importStar(__webpack_require__(/*! ./messages-schema */ \"./node_modules/@trezor/protobuf/lib/messages-schema.js\"));\nvar messages_schema_1 = __webpack_require__(/*! ./messages-schema */ \"./node_modules/@trezor/protobuf/lib/messages-schema.js\");\nObject.defineProperty(exports, \"DeviceModelInternal\", ({ enumerable: true, get: function () { return messages_schema_1.DeviceModelInternal; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsc0JBQXNCLEdBQUcsNkJBQTZCLEdBQUcsNkJBQTZCLEdBQUcsc0JBQXNCLEdBQUcsZ0JBQWdCO0FBQ2hLLGdCQUFnQixtQkFBTyxDQUFDLGlEQUFPO0FBQy9CLHFCQUFxQixtQkFBTyxDQUFDLCtEQUFVO0FBQ3ZDLHFCQUFxQixtQkFBTyxDQUFDLCtEQUFVO0FBQ3ZDLGdCQUFnQix3QkFBd0IsbUJBQU8sQ0FBQyxtRUFBWTtBQUM1RCxxQkFBcUIsbUJBQU8sQ0FBQyw2REFBUztBQUN0QyxjQUFjLG1CQUFPLENBQUMsNkRBQVM7QUFDL0Isa0RBQWlELEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQzNILHlEQUF3RCxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUN6SSx5REFBd0QsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDekksc0JBQXNCLHdCQUF3QixtQkFBTyxDQUFDLGlGQUFtQjtBQUN6RSx3QkFBd0IsbUJBQU8sQ0FBQyxpRkFBbUI7QUFDbkQsdURBQXNELEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQy9JIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3Byb3RvYnVmL2xpYi9pbmRleC5qcz80ZTM2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZXZpY2VNb2RlbEludGVybmFsID0gZXhwb3J0cy5NZXNzYWdlc1NjaGVtYSA9IGV4cG9ydHMuY3JlYXRlTWVzc2FnZUZyb21UeXBlID0gZXhwb3J0cy5jcmVhdGVNZXNzYWdlRnJvbU5hbWUgPSBleHBvcnRzLnBhcnNlQ29uZmlndXJlID0gZXhwb3J0cy5NZXNzYWdlcyA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kZWNvZGVcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZW5jb2RlXCIpLCBleHBvcnRzKTtcbmV4cG9ydHMuTWVzc2FnZXMgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9tZXNzYWdlc1wiKSk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG52YXIgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VDb25maWd1cmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEucGFyc2VDb25maWd1cmU7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVNZXNzYWdlRnJvbU5hbWVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEuY3JlYXRlTWVzc2FnZUZyb21OYW1lOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlTWVzc2FnZUZyb21UeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLmNyZWF0ZU1lc3NhZ2VGcm9tVHlwZTsgfSB9KTtcbmV4cG9ydHMuTWVzc2FnZXNTY2hlbWEgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9tZXNzYWdlcy1zY2hlbWFcIikpO1xudmFyIG1lc3NhZ2VzX3NjaGVtYV8xID0gcmVxdWlyZShcIi4vbWVzc2FnZXMtc2NoZW1hXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRGV2aWNlTW9kZWxJbnRlcm5hbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbWVzc2FnZXNfc2NoZW1hXzEuRGV2aWNlTW9kZWxJbnRlcm5hbDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/protobuf/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/protobuf/lib/messages-schema.js":
/*!**************************************************************!*\
  !*** ./node_modules/@trezor/protobuf/lib/messages-schema.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TxRequest = exports.TxRequestSerializedType = exports.TxRequestDetailsType = exports.RequestType = exports.EnumEnum_RequestType = exports.Enum_RequestType = exports.SignTx = exports.CoinJoinRequest = exports.VerifyMessage = exports.MessageSignature = exports.SignMessage = exports.OwnershipId = exports.GetOwnershipId = exports.Address = exports.GetAddress = exports.PublicKey = exports.GetPublicKey = exports.MultisigRedeemScriptType = exports.HDNodePathType = exports.HDNodeType = exports.EnumAmountUnit = exports.AmountUnit = exports.EnumDecredStakingSpendType = exports.DecredStakingSpendType = exports.OutputScriptType = exports.EnumEnum_OutputScriptType = exports.Enum_OutputScriptType = exports.InputScriptType = exports.EnumEnum_InputScriptType = exports.Enum_InputScriptType = exports.BinanceSignedTx = exports.BinanceCancelMsg = exports.BinanceOrderMsg = exports.EnumBinanceTimeInForce = exports.BinanceTimeInForce = exports.EnumBinanceOrderSide = exports.BinanceOrderSide = exports.EnumBinanceOrderType = exports.BinanceOrderType = exports.BinanceTransferMsg = exports.BinanceInputOutput = exports.BinanceCoin = exports.BinanceTxRequest = exports.BinanceSignTx = exports.BinancePublicKey = exports.BinanceGetPublicKey = exports.BinanceAddress = exports.BinanceGetAddress = exports.EnumDeviceModelInternal = exports.DeviceModelInternal = void 0;\nexports.CardanoTxAuxiliaryDataSupplementType = exports.EnumCardanoPoolRelayType = exports.CardanoPoolRelayType = exports.EnumCardanoCertificateType = exports.CardanoCertificateType = exports.EnumCardanoTxOutputSerializationFormat = exports.CardanoTxOutputSerializationFormat = exports.EnumCardanoNativeScriptHashDisplayFormat = exports.CardanoNativeScriptHashDisplayFormat = exports.EnumCardanoNativeScriptType = exports.CardanoNativeScriptType = exports.EnumCardanoAddressType = exports.CardanoAddressType = exports.EnumCardanoDerivationType = exports.CardanoDerivationType = exports.ProdTestT1 = exports.FirmwareUpload = exports.FirmwareRequest = exports.FirmwareErase = exports.AuthorizeCoinJoin = exports.OwnershipProof = exports.GetOwnershipProof = exports.TxAckPrevExtraData = exports.TxAckPrevExtraDataWrapper = exports.TxAckPrevOutput = exports.TxAckPrevOutputWrapper = exports.TxAckPrevInput = exports.TxAckPrevInputWrapper = exports.TxAckPrevMeta = exports.TxAckOutput = exports.TxAckOutputWrapper = exports.TxAckInput = exports.TxAckInputWrapper = exports.TxAck = exports.TxAckResponse = exports.TxAckPaymentRequest = exports.PaymentRequestMemo = exports.CoinPurchaseMemo = exports.RefundMemo = exports.TextMemo = exports.PrevOutput = exports.PrevInput = exports.PrevTx = exports.TxOutput = exports.TxOutputType = exports.ChangeOutputScriptType = exports.TxOutputBinType = exports.TxInput = exports.TxInputType = exports.InternalInputScriptType = void 0;\nexports.ButtonRequestType = exports.EnumEnum_ButtonRequestType = exports.Enum_ButtonRequestType = exports.Failure = exports.EnumFailureType = exports.FailureType = exports.Success = exports.CardanoSignTxFinished = exports.CardanoTxBodyHash = exports.CardanoTxHostAck = exports.CardanoTxWitnessResponse = exports.CardanoTxWitnessRequest = exports.CardanoTxAuxiliaryDataSupplement = exports.CardanoTxItemAck = exports.CardanoTxReferenceInput = exports.CardanoTxRequiredSigner = exports.CardanoTxCollateralInput = exports.CardanoTxMint = exports.CardanoTxAuxiliaryData = exports.CardanoCVoteRegistrationParametersType = exports.CardanoCVoteRegistrationDelegation = exports.CardanoTxWithdrawal = exports.CardanoTxCertificate = exports.CardanoPoolParametersType = exports.CardanoPoolMetadataType = exports.CardanoPoolRelayParameters = exports.CardanoPoolOwner = exports.CardanoTxReferenceScriptChunk = exports.CardanoTxInlineDatumChunk = exports.CardanoToken = exports.CardanoAssetGroup = exports.CardanoTxOutput = exports.CardanoTxInput = exports.CardanoSignTxInit = exports.CardanoPublicKey = exports.CardanoGetPublicKey = exports.CardanoAddress = exports.CardanoGetAddress = exports.CardanoAddressParametersType = exports.CardanoNativeScriptHash = exports.CardanoGetNativeScriptHash = exports.CardanoNativeScript = exports.CardanoBlockchainPointerType = exports.EnumCardanoTxWitnessType = exports.CardanoTxWitnessType = exports.EnumCardanoTxSigningMode = exports.CardanoTxSigningMode = exports.EnumCardanoCVoteRegistrationFormat = exports.CardanoCVoteRegistrationFormat = exports.EnumCardanoTxAuxiliaryDataSupplementType = void 0;\nexports.EosTxActionAck = exports.EosActionUnknown = exports.EosActionNewAccount = exports.EosActionUnlinkAuth = exports.EosActionLinkAuth = exports.EosActionDeleteAuth = exports.EosActionUpdateAuth = exports.EosActionVoteProducer = exports.EosActionSellRam = exports.EosActionBuyRamBytes = exports.EosActionBuyRam = exports.EosActionRefund = exports.EosActionUndelegate = exports.EosActionDelegate = exports.EosActionTransfer = exports.EosActionCommon = exports.EosAuthorization = exports.EosAuthorizationWait = exports.EosAuthorizationAccount = exports.EosAuthorizationKey = exports.EosPermissionLevel = exports.EosAsset = exports.EosTxActionRequest = exports.EosSignTx = exports.EosTxHeader = exports.EosPublicKey = exports.EosGetPublicKey = exports.DebugLinkResetDebugEvents = exports.EnumDebugPhysicalButton = exports.DebugPhysicalButton = exports.EnumDebugButton = exports.DebugButton = exports.ECDHSessionKey = exports.GetECDHSessionKey = exports.SignedIdentity = exports.SignIdentity = exports.IdentityType = exports.CipheredKeyValue = exports.CipherKeyValue = exports.Deprecated_PassphraseStateAck = exports.Deprecated_PassphraseStateRequest = exports.PassphraseAck = exports.PassphraseRequest = exports.PinMatrixAck = exports.PinMatrixRequest = exports.PinMatrixRequestType = exports.EnumEnum_PinMatrixRequestType = exports.Enum_PinMatrixRequestType = exports.ButtonAck = exports.ButtonRequest = void 0;\nexports.TranslationDataRequest = exports.ChangeLanguage = exports.ApplySettings = exports.EndSession = exports.SetBusy = exports.LockDevice = exports.Features = exports.Capability = exports.EnumEnum_Capability = exports.Enum_Capability = exports.GetFeatures = exports.Initialize = exports.HomescreenFormat = exports.EnumEnum_HomescreenFormat = exports.Enum_HomescreenFormat = exports.SafetyCheckLevel = exports.EnumEnum_SafetyCheckLevel = exports.Enum_SafetyCheckLevel = exports.BackupType = exports.EnumEnum_BackupType = exports.Enum_BackupType = exports.EthereumTypedDataSignature = exports.EthereumSignTypedHash = exports.EthereumVerifyMessage = exports.EthereumMessageSignature = exports.EthereumSignMessage = exports.EthereumTxAck = exports.EthereumTxRequest = exports.EthereumSignTxEIP1559 = exports.EthereumAccessList = exports.EthereumSignTx = exports.EthereumAddress = exports.EthereumGetAddress = exports.EthereumPublicKey = exports.EthereumGetPublicKey = exports.EthereumTypedDataValueAck = exports.EthereumTypedDataValueRequest = exports.EthereumTypedDataStructAck = exports.EthereumStructMember = exports.EthereumFieldType = exports.EnumEthereumDataType = exports.EthereumDataType = exports.EthereumTypedDataStructRequest = exports.EthereumSignTypedData = exports.EthereumDefinitions = exports.EthereumTokenInfo = exports.EthereumNetworkInfo = exports.EnumEthereumDefinitionType = exports.EthereumDefinitionType = exports.EosSignedTx = void 0;\nexports.NEMTransfer = exports.NEMMosaic = exports.NEMTransactionCommon = exports.NEMAddress = exports.NEMGetAddress = exports.EnumMoneroNetworkType = exports.MoneroNetworkType = exports.UnlockBootloader = exports.ShowDeviceTutorial = exports.UnlockedPathRequest = exports.UnlockPath = exports.Nonce = exports.GetNonce = exports.RebootToBootloader = exports.EnumBootCommand = exports.BootCommand = exports.CancelAuthorization = exports.PreauthorizedRequest = exports.DoPreauthorized = exports.NextU2FCounter = exports.GetNextU2FCounter = exports.SetU2FCounter = exports.WordAck = exports.WordRequest = exports.WordRequestType = exports.EnumEnum_WordRequestType = exports.Enum_WordRequestType = exports.RecoveryDevice = exports.EnumRecoveryDeviceType = exports.RecoveryDeviceType = exports.EntropyAck = exports.EntropyRequest = exports.BackupDevice = exports.ResetDevice = exports.WipeDevice = exports.AuthenticityProof = exports.AuthenticateDevice = exports.FirmwareHash = exports.GetFirmwareHash = exports.Entropy = exports.GetEntropy = exports.Cancel = exports.Ping = exports.SdProtect = exports.EnumSdProtectOperationType = exports.SdProtectOperationType = exports.ChangeWipeCode = exports.ChangePin = exports.ApplyFlags = exports.TranslationDataAck = void 0;\nexports.StellarCreatePassiveSellOfferOp = exports.StellarManageBuyOfferOp = exports.StellarManageSellOfferOp = exports.StellarPathPaymentStrictSendOp = exports.StellarPathPaymentStrictReceiveOp = exports.StellarCreateAccountOp = exports.StellarPaymentOp = exports.StellarTxOpRequest = exports.StellarSignTx = exports.EnumStellarMemoType = exports.StellarMemoType = exports.StellarAddress = exports.StellarGetAddress = exports.StellarAsset = exports.EnumStellarAssetType = exports.StellarAssetType = exports.SolanaTxSignature = exports.SolanaSignTx = exports.SolanaTxAdditionalInfo = exports.SolanaTxTokenAccountInfo = exports.SolanaAddress = exports.SolanaGetAddress = exports.SolanaPublicKey = exports.SolanaGetPublicKey = exports.RippleSignedTx = exports.RippleSignTx = exports.RipplePayment = exports.RippleAddress = exports.RippleGetAddress = exports.experimental_field = exports.experimental_message = exports.NEMDecryptedMessage = exports.NEMDecryptMessage = exports.NEMSignedTx = exports.NEMSignTx = exports.NEMImportanceTransfer = exports.EnumNEMImportanceTransferMode = exports.NEMImportanceTransferMode = exports.NEMAggregateModification = exports.NEMCosignatoryModification = exports.EnumNEMModificationType = exports.NEMModificationType = exports.NEMMosaicSupplyChange = exports.EnumNEMSupplyChangeType = exports.NEMSupplyChangeType = exports.NEMMosaicCreation = exports.NEMMosaicDefinition = exports.EnumNEMMosaicLevy = exports.NEMMosaicLevy = exports.NEMProvisionNamespace = void 0;\nexports.MessageType = exports.TezosSignedTx = exports.TezosSignTx = exports.TezosBallotOp = exports.EnumTezosBallotType = exports.TezosBallotType = exports.TezosProposalOp = exports.TezosDelegationOp = exports.TezosOriginationOp = exports.TezosTransactionOp = exports.TezosParametersManager = exports.TezosManagerTransfer = exports.TezosRevealOp = exports.TezosContractID = exports.EnumTezosContractType = exports.TezosContractType = exports.TezosPublicKey = exports.TezosGetPublicKey = exports.TezosAddress = exports.TezosGetAddress = exports.StellarSignedTx = exports.StellarClaimClaimableBalanceOp = exports.StellarBumpSequenceOp = exports.StellarManageDataOp = exports.StellarAccountMergeOp = exports.StellarAllowTrustOp = exports.StellarChangeTrustOp = exports.StellarSetOptionsOp = exports.EnumStellarSignerType = exports.StellarSignerType = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nvar DeviceModelInternal;\n(function (DeviceModelInternal) {\n    DeviceModelInternal[\"T1B1\"] = \"T1B1\";\n    DeviceModelInternal[\"T2T1\"] = \"T2T1\";\n    DeviceModelInternal[\"T2B1\"] = \"T2B1\";\n})(DeviceModelInternal || (exports.DeviceModelInternal = DeviceModelInternal = {}));\nexports.EnumDeviceModelInternal = schema_utils_1.Type.Enum(DeviceModelInternal);\nexports.BinanceGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.BinanceAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nexports.BinanceGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.BinancePublicKey = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n});\nexports.BinanceSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    msg_count: schema_utils_1.Type.Number(),\n    account_number: schema_utils_1.Type.Number(),\n    chain_id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    memo: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sequence: schema_utils_1.Type.Number(),\n    source: schema_utils_1.Type.Number(),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.BinanceTxRequest = schema_utils_1.Type.Object({});\nexports.BinanceCoin = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    denom: schema_utils_1.Type.String(),\n});\nexports.BinanceInputOutput = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    coins: schema_utils_1.Type.Array(exports.BinanceCoin),\n});\nexports.BinanceTransferMsg = schema_utils_1.Type.Object({\n    inputs: schema_utils_1.Type.Array(exports.BinanceInputOutput),\n    outputs: schema_utils_1.Type.Array(exports.BinanceInputOutput),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nvar BinanceOrderType;\n(function (BinanceOrderType) {\n    BinanceOrderType[BinanceOrderType[\"OT_UNKNOWN\"] = 0] = \"OT_UNKNOWN\";\n    BinanceOrderType[BinanceOrderType[\"MARKET\"] = 1] = \"MARKET\";\n    BinanceOrderType[BinanceOrderType[\"LIMIT\"] = 2] = \"LIMIT\";\n    BinanceOrderType[BinanceOrderType[\"OT_RESERVED\"] = 3] = \"OT_RESERVED\";\n})(BinanceOrderType || (exports.BinanceOrderType = BinanceOrderType = {}));\nexports.EnumBinanceOrderType = schema_utils_1.Type.Enum(BinanceOrderType);\nvar BinanceOrderSide;\n(function (BinanceOrderSide) {\n    BinanceOrderSide[BinanceOrderSide[\"SIDE_UNKNOWN\"] = 0] = \"SIDE_UNKNOWN\";\n    BinanceOrderSide[BinanceOrderSide[\"BUY\"] = 1] = \"BUY\";\n    BinanceOrderSide[BinanceOrderSide[\"SELL\"] = 2] = \"SELL\";\n})(BinanceOrderSide || (exports.BinanceOrderSide = BinanceOrderSide = {}));\nexports.EnumBinanceOrderSide = schema_utils_1.Type.Enum(BinanceOrderSide);\nvar BinanceTimeInForce;\n(function (BinanceTimeInForce) {\n    BinanceTimeInForce[BinanceTimeInForce[\"TIF_UNKNOWN\"] = 0] = \"TIF_UNKNOWN\";\n    BinanceTimeInForce[BinanceTimeInForce[\"GTE\"] = 1] = \"GTE\";\n    BinanceTimeInForce[BinanceTimeInForce[\"TIF_RESERVED\"] = 2] = \"TIF_RESERVED\";\n    BinanceTimeInForce[BinanceTimeInForce[\"IOC\"] = 3] = \"IOC\";\n})(BinanceTimeInForce || (exports.BinanceTimeInForce = BinanceTimeInForce = {}));\nexports.EnumBinanceTimeInForce = schema_utils_1.Type.Enum(BinanceTimeInForce);\nexports.BinanceOrderMsg = schema_utils_1.Type.Object({\n    id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ordertype: exports.EnumBinanceOrderType,\n    price: schema_utils_1.Type.Number(),\n    quantity: schema_utils_1.Type.Number(),\n    sender: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    side: exports.EnumBinanceOrderSide,\n    symbol: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    timeinforce: exports.EnumBinanceTimeInForce,\n});\nexports.BinanceCancelMsg = schema_utils_1.Type.Object({\n    refid: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sender: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    symbol: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.BinanceSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    public_key: schema_utils_1.Type.String(),\n});\nvar Enum_InputScriptType;\n(function (Enum_InputScriptType) {\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDADDRESS\"] = 0] = \"SPENDADDRESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDMULTISIG\"] = 1] = \"SPENDMULTISIG\";\n    Enum_InputScriptType[Enum_InputScriptType[\"EXTERNAL\"] = 2] = \"EXTERNAL\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDWITNESS\"] = 3] = \"SPENDWITNESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDP2SHWITNESS\"] = 4] = \"SPENDP2SHWITNESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDTAPROOT\"] = 5] = \"SPENDTAPROOT\";\n})(Enum_InputScriptType || (exports.Enum_InputScriptType = Enum_InputScriptType = {}));\nexports.EnumEnum_InputScriptType = schema_utils_1.Type.Enum(Enum_InputScriptType);\nexports.InputScriptType = schema_utils_1.Type.KeyOfEnum(Enum_InputScriptType);\nvar Enum_OutputScriptType;\n(function (Enum_OutputScriptType) {\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOADDRESS\"] = 0] = \"PAYTOADDRESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOSCRIPTHASH\"] = 1] = \"PAYTOSCRIPTHASH\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOMULTISIG\"] = 2] = \"PAYTOMULTISIG\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOOPRETURN\"] = 3] = \"PAYTOOPRETURN\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOWITNESS\"] = 4] = \"PAYTOWITNESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOP2SHWITNESS\"] = 5] = \"PAYTOP2SHWITNESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOTAPROOT\"] = 6] = \"PAYTOTAPROOT\";\n})(Enum_OutputScriptType || (exports.Enum_OutputScriptType = Enum_OutputScriptType = {}));\nexports.EnumEnum_OutputScriptType = schema_utils_1.Type.Enum(Enum_OutputScriptType);\nexports.OutputScriptType = schema_utils_1.Type.KeyOfEnum(Enum_OutputScriptType);\nvar DecredStakingSpendType;\n(function (DecredStakingSpendType) {\n    DecredStakingSpendType[DecredStakingSpendType[\"SSGen\"] = 0] = \"SSGen\";\n    DecredStakingSpendType[DecredStakingSpendType[\"SSRTX\"] = 1] = \"SSRTX\";\n})(DecredStakingSpendType || (exports.DecredStakingSpendType = DecredStakingSpendType = {}));\nexports.EnumDecredStakingSpendType = schema_utils_1.Type.Enum(DecredStakingSpendType);\nvar AmountUnit;\n(function (AmountUnit) {\n    AmountUnit[AmountUnit[\"BITCOIN\"] = 0] = \"BITCOIN\";\n    AmountUnit[AmountUnit[\"MILLIBITCOIN\"] = 1] = \"MILLIBITCOIN\";\n    AmountUnit[AmountUnit[\"MICROBITCOIN\"] = 2] = \"MICROBITCOIN\";\n    AmountUnit[AmountUnit[\"SATOSHI\"] = 3] = \"SATOSHI\";\n})(AmountUnit || (exports.AmountUnit = AmountUnit = {}));\nexports.EnumAmountUnit = schema_utils_1.Type.Enum(AmountUnit);\nexports.HDNodeType = schema_utils_1.Type.Object({\n    depth: schema_utils_1.Type.Number(),\n    fingerprint: schema_utils_1.Type.Number(),\n    child_num: schema_utils_1.Type.Number(),\n    chain_code: schema_utils_1.Type.String(),\n    private_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    public_key: schema_utils_1.Type.String(),\n});\nexports.HDNodePathType = schema_utils_1.Type.Object({\n    node: schema_utils_1.Type.Union([exports.HDNodeType, schema_utils_1.Type.String()]),\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n});\nexports.MultisigRedeemScriptType = schema_utils_1.Type.Object({\n    pubkeys: schema_utils_1.Type.Array(exports.HDNodePathType),\n    signatures: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n    m: schema_utils_1.Type.Number(),\n    nodes: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.HDNodeType)),\n    address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n});\nexports.GetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    ignore_xpub_magic: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.PublicKey = schema_utils_1.Type.Object({\n    node: exports.HDNodeType,\n    xpub: schema_utils_1.Type.String(),\n    root_fingerprint: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    descriptor: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.GetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    ignore_xpub_magic: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.Address = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.GetOwnershipId = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n});\nexports.OwnershipId = schema_utils_1.Type.Object({\n    ownership_id: schema_utils_1.Type.String(),\n});\nexports.SignMessage = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    message: schema_utils_1.Type.String(),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    no_script_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.MessageSignature = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.VerifyMessage = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n    message: schema_utils_1.Type.String(),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.CoinJoinRequest = schema_utils_1.Type.Object({\n    fee_rate: schema_utils_1.Type.Number(),\n    no_fee_threshold: schema_utils_1.Type.Number(),\n    min_registrable_amount: schema_utils_1.Type.Number(),\n    mask_public_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.SignTx = schema_utils_1.Type.Object({\n    outputs_count: schema_utils_1.Type.Number(),\n    inputs_count: schema_utils_1.Type.Number(),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    lock_time: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    overwintered: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    amount_unit: schema_utils_1.Type.Optional(exports.EnumAmountUnit),\n    decred_staking_ticket: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    serialize: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    coinjoin_request: schema_utils_1.Type.Optional(exports.CoinJoinRequest),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nvar Enum_RequestType;\n(function (Enum_RequestType) {\n    Enum_RequestType[Enum_RequestType[\"TXINPUT\"] = 0] = \"TXINPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXOUTPUT\"] = 1] = \"TXOUTPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXMETA\"] = 2] = \"TXMETA\";\n    Enum_RequestType[Enum_RequestType[\"TXFINISHED\"] = 3] = \"TXFINISHED\";\n    Enum_RequestType[Enum_RequestType[\"TXEXTRADATA\"] = 4] = \"TXEXTRADATA\";\n    Enum_RequestType[Enum_RequestType[\"TXORIGINPUT\"] = 5] = \"TXORIGINPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXORIGOUTPUT\"] = 6] = \"TXORIGOUTPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXPAYMENTREQ\"] = 7] = \"TXPAYMENTREQ\";\n})(Enum_RequestType || (exports.Enum_RequestType = Enum_RequestType = {}));\nexports.EnumEnum_RequestType = schema_utils_1.Type.Enum(Enum_RequestType);\nexports.RequestType = schema_utils_1.Type.KeyOfEnum(Enum_RequestType);\nexports.TxRequestDetailsType = schema_utils_1.Type.Object({\n    request_index: schema_utils_1.Type.Number(),\n    tx_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    extra_data_offset: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.TxRequestSerializedType = schema_utils_1.Type.Object({\n    signature_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    serialized_tx: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.TxRequest = schema_utils_1.Type.Object({\n    request_type: exports.RequestType,\n    details: exports.TxRequestDetailsType,\n    serialized: schema_utils_1.Type.Optional(exports.TxRequestSerializedType),\n});\nexports.InternalInputScriptType = schema_utils_1.Type.Exclude(exports.InputScriptType, schema_utils_1.Type.Literal('EXTERNAL'));\nconst CommonTxInputType = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n    amount: schema_utils_1.Type.Uint(),\n    sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    decred_tree: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    decred_staking_spend: schema_utils_1.Type.Optional(exports.EnumDecredStakingSpendType),\n    script_pubkey: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    coinjoin_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    script_sig: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    witness: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ownership_proof: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    commitment_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.TxInputType = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Intersect([\n        CommonTxInputType,\n        schema_utils_1.Type.Object({\n            address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n            script_type: schema_utils_1.Type.Optional(exports.InternalInputScriptType),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        CommonTxInputType,\n        schema_utils_1.Type.Object({\n            address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n            script_type: schema_utils_1.Type.Literal('EXTERNAL'),\n            script_pubkey: schema_utils_1.Type.String(),\n        }),\n    ]),\n]);\nexports.TxInput = exports.TxInputType;\nexports.TxOutputBinType = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    script_pubkey: schema_utils_1.Type.String(),\n    decred_script_version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.ChangeOutputScriptType = schema_utils_1.Type.Exclude(exports.OutputScriptType, schema_utils_1.Type.Literal('PAYTOOPRETURN'));\nexports.TxOutputType = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.String(),\n        address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        script_type: schema_utils_1.Type.Literal('PAYTOADDRESS'),\n        amount: schema_utils_1.Type.Uint(),\n        multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n        script_type: schema_utils_1.Type.Optional(exports.ChangeOutputScriptType),\n        amount: schema_utils_1.Type.Uint(),\n        multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.String(),\n        address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        script_type: schema_utils_1.Type.Optional(exports.ChangeOutputScriptType),\n        amount: schema_utils_1.Type.Uint(),\n        multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        amount: schema_utils_1.Type.Union([schema_utils_1.Type.Literal('0'), schema_utils_1.Type.Literal(0)]),\n        op_return_data: schema_utils_1.Type.String(),\n        script_type: schema_utils_1.Type.Literal('PAYTOOPRETURN'),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n]);\nexports.TxOutput = exports.TxOutputType;\nexports.PrevTx = schema_utils_1.Type.Object({\n    version: schema_utils_1.Type.Number(),\n    lock_time: schema_utils_1.Type.Number(),\n    inputs_count: schema_utils_1.Type.Number(),\n    outputs_count: schema_utils_1.Type.Number(),\n    extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.PrevInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n    script_sig: schema_utils_1.Type.String(),\n    sequence: schema_utils_1.Type.Number(),\n    decred_tree: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.PrevOutput = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    script_pubkey: schema_utils_1.Type.String(),\n    decred_script_version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.TextMemo = schema_utils_1.Type.Object({\n    text: schema_utils_1.Type.String(),\n});\nexports.RefundMemo = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    mac: schema_utils_1.Type.String(),\n});\nexports.CoinPurchaseMemo = schema_utils_1.Type.Object({\n    coin_type: schema_utils_1.Type.Number(),\n    amount: schema_utils_1.Type.Uint(),\n    address: schema_utils_1.Type.String(),\n    mac: schema_utils_1.Type.String(),\n});\nexports.PaymentRequestMemo = schema_utils_1.Type.Object({\n    text_memo: schema_utils_1.Type.Optional(exports.TextMemo),\n    refund_memo: schema_utils_1.Type.Optional(exports.RefundMemo),\n    coin_purchase_memo: schema_utils_1.Type.Optional(exports.CoinPurchaseMemo),\n});\nexports.TxAckPaymentRequest = schema_utils_1.Type.Object({\n    nonce: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    recipient_name: schema_utils_1.Type.String(),\n    memos: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.PaymentRequestMemo)),\n    amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    signature: schema_utils_1.Type.String(),\n});\nexports.TxAckResponse = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Object({\n        inputs: schema_utils_1.Type.Array(schema_utils_1.Type.Union([exports.TxInputType, exports.PrevInput])),\n    }),\n    schema_utils_1.Type.Object({\n        bin_outputs: schema_utils_1.Type.Array(exports.TxOutputBinType),\n    }),\n    schema_utils_1.Type.Object({\n        outputs: schema_utils_1.Type.Array(exports.TxOutputType),\n    }),\n    schema_utils_1.Type.Object({\n        extra_data: schema_utils_1.Type.String(),\n    }),\n    schema_utils_1.Type.Object({\n        version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        lock_time: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        inputs_cnt: schema_utils_1.Type.Number(),\n        outputs_cnt: schema_utils_1.Type.Number(),\n        extra_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n]);\nexports.TxAck = schema_utils_1.Type.Object({\n    tx: exports.TxAckResponse,\n});\nexports.TxAckInputWrapper = schema_utils_1.Type.Object({\n    input: exports.TxInput,\n});\nexports.TxAckInput = schema_utils_1.Type.Object({\n    tx: exports.TxAckInputWrapper,\n});\nexports.TxAckOutputWrapper = schema_utils_1.Type.Object({\n    output: exports.TxOutput,\n});\nexports.TxAckOutput = schema_utils_1.Type.Object({\n    tx: exports.TxAckOutputWrapper,\n});\nexports.TxAckPrevMeta = schema_utils_1.Type.Object({\n    tx: exports.PrevTx,\n});\nexports.TxAckPrevInputWrapper = schema_utils_1.Type.Object({\n    input: exports.PrevInput,\n});\nexports.TxAckPrevInput = schema_utils_1.Type.Object({\n    tx: exports.TxAckPrevInputWrapper,\n});\nexports.TxAckPrevOutputWrapper = schema_utils_1.Type.Object({\n    output: exports.PrevOutput,\n});\nexports.TxAckPrevOutput = schema_utils_1.Type.Object({\n    tx: exports.TxAckPrevOutputWrapper,\n});\nexports.TxAckPrevExtraDataWrapper = schema_utils_1.Type.Object({\n    extra_data_chunk: schema_utils_1.Type.String(),\n});\nexports.TxAckPrevExtraData = schema_utils_1.Type.Object({\n    tx: exports.TxAckPrevExtraDataWrapper,\n});\nexports.GetOwnershipProof = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    user_confirmation: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    ownership_ids: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.String())),\n    commitment_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.OwnershipProof = schema_utils_1.Type.Object({\n    ownership_proof: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.AuthorizeCoinJoin = schema_utils_1.Type.Object({\n    coordinator: schema_utils_1.Type.String(),\n    max_rounds: schema_utils_1.Type.Number(),\n    max_coordinator_fee_rate: schema_utils_1.Type.Number(),\n    max_fee_per_kvbyte: schema_utils_1.Type.Number(),\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    amount_unit: schema_utils_1.Type.Optional(exports.EnumAmountUnit),\n});\nexports.FirmwareErase = schema_utils_1.Type.Object({\n    length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.FirmwareRequest = schema_utils_1.Type.Object({\n    offset: schema_utils_1.Type.Number(),\n    length: schema_utils_1.Type.Number(),\n});\nexports.FirmwareUpload = schema_utils_1.Type.Object({\n    payload: schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.ArrayBuffer()]),\n    hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.ProdTestT1 = schema_utils_1.Type.Object({\n    payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nvar CardanoDerivationType;\n(function (CardanoDerivationType) {\n    CardanoDerivationType[CardanoDerivationType[\"LEDGER\"] = 0] = \"LEDGER\";\n    CardanoDerivationType[CardanoDerivationType[\"ICARUS\"] = 1] = \"ICARUS\";\n    CardanoDerivationType[CardanoDerivationType[\"ICARUS_TREZOR\"] = 2] = \"ICARUS_TREZOR\";\n})(CardanoDerivationType || (exports.CardanoDerivationType = CardanoDerivationType = {}));\nexports.EnumCardanoDerivationType = schema_utils_1.Type.Enum(CardanoDerivationType);\nvar CardanoAddressType;\n(function (CardanoAddressType) {\n    CardanoAddressType[CardanoAddressType[\"BASE\"] = 0] = \"BASE\";\n    CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_KEY\"] = 1] = \"BASE_SCRIPT_KEY\";\n    CardanoAddressType[CardanoAddressType[\"BASE_KEY_SCRIPT\"] = 2] = \"BASE_KEY_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_SCRIPT\"] = 3] = \"BASE_SCRIPT_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"POINTER\"] = 4] = \"POINTER\";\n    CardanoAddressType[CardanoAddressType[\"POINTER_SCRIPT\"] = 5] = \"POINTER_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"ENTERPRISE\"] = 6] = \"ENTERPRISE\";\n    CardanoAddressType[CardanoAddressType[\"ENTERPRISE_SCRIPT\"] = 7] = \"ENTERPRISE_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"BYRON\"] = 8] = \"BYRON\";\n    CardanoAddressType[CardanoAddressType[\"REWARD\"] = 14] = \"REWARD\";\n    CardanoAddressType[CardanoAddressType[\"REWARD_SCRIPT\"] = 15] = \"REWARD_SCRIPT\";\n})(CardanoAddressType || (exports.CardanoAddressType = CardanoAddressType = {}));\nexports.EnumCardanoAddressType = schema_utils_1.Type.Enum(CardanoAddressType);\nvar CardanoNativeScriptType;\n(function (CardanoNativeScriptType) {\n    CardanoNativeScriptType[CardanoNativeScriptType[\"PUB_KEY\"] = 0] = \"PUB_KEY\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"ALL\"] = 1] = \"ALL\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"ANY\"] = 2] = \"ANY\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"N_OF_K\"] = 3] = \"N_OF_K\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_BEFORE\"] = 4] = \"INVALID_BEFORE\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_HEREAFTER\"] = 5] = \"INVALID_HEREAFTER\";\n})(CardanoNativeScriptType || (exports.CardanoNativeScriptType = CardanoNativeScriptType = {}));\nexports.EnumCardanoNativeScriptType = schema_utils_1.Type.Enum(CardanoNativeScriptType);\nvar CardanoNativeScriptHashDisplayFormat;\n(function (CardanoNativeScriptHashDisplayFormat) {\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"HIDE\"] = 0] = \"HIDE\";\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"BECH32\"] = 1] = \"BECH32\";\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"POLICY_ID\"] = 2] = \"POLICY_ID\";\n})(CardanoNativeScriptHashDisplayFormat || (exports.CardanoNativeScriptHashDisplayFormat = CardanoNativeScriptHashDisplayFormat = {}));\nexports.EnumCardanoNativeScriptHashDisplayFormat = schema_utils_1.Type.Enum(CardanoNativeScriptHashDisplayFormat);\nvar CardanoTxOutputSerializationFormat;\n(function (CardanoTxOutputSerializationFormat) {\n    CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"ARRAY_LEGACY\"] = 0] = \"ARRAY_LEGACY\";\n    CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"MAP_BABBAGE\"] = 1] = \"MAP_BABBAGE\";\n})(CardanoTxOutputSerializationFormat || (exports.CardanoTxOutputSerializationFormat = CardanoTxOutputSerializationFormat = {}));\nexports.EnumCardanoTxOutputSerializationFormat = schema_utils_1.Type.Enum(CardanoTxOutputSerializationFormat);\nvar CardanoCertificateType;\n(function (CardanoCertificateType) {\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_REGISTRATION\"] = 0] = \"STAKE_REGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DEREGISTRATION\"] = 1] = \"STAKE_DEREGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DELEGATION\"] = 2] = \"STAKE_DELEGATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_POOL_REGISTRATION\"] = 3] = \"STAKE_POOL_REGISTRATION\";\n})(CardanoCertificateType || (exports.CardanoCertificateType = CardanoCertificateType = {}));\nexports.EnumCardanoCertificateType = schema_utils_1.Type.Enum(CardanoCertificateType);\nvar CardanoPoolRelayType;\n(function (CardanoPoolRelayType) {\n    CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_IP\"] = 0] = \"SINGLE_HOST_IP\";\n    CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_NAME\"] = 1] = \"SINGLE_HOST_NAME\";\n    CardanoPoolRelayType[CardanoPoolRelayType[\"MULTIPLE_HOST_NAME\"] = 2] = \"MULTIPLE_HOST_NAME\";\n})(CardanoPoolRelayType || (exports.CardanoPoolRelayType = CardanoPoolRelayType = {}));\nexports.EnumCardanoPoolRelayType = schema_utils_1.Type.Enum(CardanoPoolRelayType);\nvar CardanoTxAuxiliaryDataSupplementType;\n(function (CardanoTxAuxiliaryDataSupplementType) {\n    CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"NONE\"] = 0] = \"NONE\";\n    CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"CVOTE_REGISTRATION_SIGNATURE\"] = 1] = \"CVOTE_REGISTRATION_SIGNATURE\";\n})(CardanoTxAuxiliaryDataSupplementType || (exports.CardanoTxAuxiliaryDataSupplementType = CardanoTxAuxiliaryDataSupplementType = {}));\nexports.EnumCardanoTxAuxiliaryDataSupplementType = schema_utils_1.Type.Enum(CardanoTxAuxiliaryDataSupplementType);\nvar CardanoCVoteRegistrationFormat;\n(function (CardanoCVoteRegistrationFormat) {\n    CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP15\"] = 0] = \"CIP15\";\n    CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP36\"] = 1] = \"CIP36\";\n})(CardanoCVoteRegistrationFormat || (exports.CardanoCVoteRegistrationFormat = CardanoCVoteRegistrationFormat = {}));\nexports.EnumCardanoCVoteRegistrationFormat = schema_utils_1.Type.Enum(CardanoCVoteRegistrationFormat);\nvar CardanoTxSigningMode;\n(function (CardanoTxSigningMode) {\n    CardanoTxSigningMode[CardanoTxSigningMode[\"ORDINARY_TRANSACTION\"] = 0] = \"ORDINARY_TRANSACTION\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"POOL_REGISTRATION_AS_OWNER\"] = 1] = \"POOL_REGISTRATION_AS_OWNER\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"MULTISIG_TRANSACTION\"] = 2] = \"MULTISIG_TRANSACTION\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"PLUTUS_TRANSACTION\"] = 3] = \"PLUTUS_TRANSACTION\";\n})(CardanoTxSigningMode || (exports.CardanoTxSigningMode = CardanoTxSigningMode = {}));\nexports.EnumCardanoTxSigningMode = schema_utils_1.Type.Enum(CardanoTxSigningMode);\nvar CardanoTxWitnessType;\n(function (CardanoTxWitnessType) {\n    CardanoTxWitnessType[CardanoTxWitnessType[\"BYRON_WITNESS\"] = 0] = \"BYRON_WITNESS\";\n    CardanoTxWitnessType[CardanoTxWitnessType[\"SHELLEY_WITNESS\"] = 1] = \"SHELLEY_WITNESS\";\n})(CardanoTxWitnessType || (exports.CardanoTxWitnessType = CardanoTxWitnessType = {}));\nexports.EnumCardanoTxWitnessType = schema_utils_1.Type.Enum(CardanoTxWitnessType);\nexports.CardanoBlockchainPointerType = schema_utils_1.Type.Object({\n    block_index: schema_utils_1.Type.Number(),\n    tx_index: schema_utils_1.Type.Number(),\n    certificate_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoNativeScript = schema_utils_1.Type.Recursive(This => schema_utils_1.Type.Object({\n    type: exports.EnumCardanoNativeScriptType,\n    scripts: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(This)),\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    required_signatures_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    invalid_before: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    invalid_hereafter: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n}));\nexports.CardanoGetNativeScriptHash = schema_utils_1.Type.Object({\n    script: exports.CardanoNativeScript,\n    display_format: exports.EnumCardanoNativeScriptHashDisplayFormat,\n    derivation_type: exports.EnumCardanoDerivationType,\n});\nexports.CardanoNativeScriptHash = schema_utils_1.Type.Object({\n    script_hash: schema_utils_1.Type.String(),\n});\nexports.CardanoAddressParametersType = schema_utils_1.Type.Object({\n    address_type: exports.EnumCardanoAddressType,\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    address_n_staking: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    staking_key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    certificate_pointer: schema_utils_1.Type.Optional(exports.CardanoBlockchainPointerType),\n    script_payment_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_staking_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoGetAddress = schema_utils_1.Type.Object({\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    protocol_magic: schema_utils_1.Type.Number(),\n    network_id: schema_utils_1.Type.Number(),\n    address_parameters: exports.CardanoAddressParametersType,\n    derivation_type: exports.EnumCardanoDerivationType,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.CardanoAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nexports.CardanoGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    derivation_type: exports.EnumCardanoDerivationType,\n});\nexports.CardanoPublicKey = schema_utils_1.Type.Object({\n    xpub: schema_utils_1.Type.String(),\n    node: exports.HDNodeType,\n});\nexports.CardanoSignTxInit = schema_utils_1.Type.Object({\n    signing_mode: exports.EnumCardanoTxSigningMode,\n    protocol_magic: schema_utils_1.Type.Number(),\n    network_id: schema_utils_1.Type.Number(),\n    inputs_count: schema_utils_1.Type.Number(),\n    outputs_count: schema_utils_1.Type.Number(),\n    fee: schema_utils_1.Type.Uint(),\n    ttl: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    certificates_count: schema_utils_1.Type.Number(),\n    withdrawals_count: schema_utils_1.Type.Number(),\n    has_auxiliary_data: schema_utils_1.Type.Boolean(),\n    validity_interval_start: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    witness_requests_count: schema_utils_1.Type.Number(),\n    minting_asset_groups_count: schema_utils_1.Type.Number(),\n    derivation_type: exports.EnumCardanoDerivationType,\n    include_network_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    script_data_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    collateral_inputs_count: schema_utils_1.Type.Number(),\n    required_signers_count: schema_utils_1.Type.Number(),\n    has_collateral_return: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    total_collateral: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    reference_inputs_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.CardanoTxInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoTxOutput = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    address_parameters: schema_utils_1.Type.Optional(exports.CardanoAddressParametersType),\n    amount: schema_utils_1.Type.Uint(),\n    asset_groups_count: schema_utils_1.Type.Number(),\n    datum_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    format: schema_utils_1.Type.Optional(exports.EnumCardanoTxOutputSerializationFormat),\n    inline_datum_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    reference_script_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.CardanoAssetGroup = schema_utils_1.Type.Object({\n    policy_id: schema_utils_1.Type.String(),\n    tokens_count: schema_utils_1.Type.Number(),\n});\nexports.CardanoToken = schema_utils_1.Type.Object({\n    asset_name_bytes: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    mint_amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint({ allowNegative: true })),\n});\nexports.CardanoTxInlineDatumChunk = schema_utils_1.Type.Object({\n    data: schema_utils_1.Type.String(),\n});\nexports.CardanoTxReferenceScriptChunk = schema_utils_1.Type.Object({\n    data: schema_utils_1.Type.String(),\n});\nexports.CardanoPoolOwner = schema_utils_1.Type.Object({\n    staking_key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    staking_key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoPoolRelayParameters = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoPoolRelayType,\n    ipv4_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ipv6_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    host_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    port: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.CardanoPoolMetadataType = schema_utils_1.Type.Object({\n    url: schema_utils_1.Type.String(),\n    hash: schema_utils_1.Type.String(),\n});\nexports.CardanoPoolParametersType = schema_utils_1.Type.Object({\n    pool_id: schema_utils_1.Type.String(),\n    vrf_key_hash: schema_utils_1.Type.String(),\n    pledge: schema_utils_1.Type.Uint(),\n    cost: schema_utils_1.Type.Uint(),\n    margin_numerator: schema_utils_1.Type.Uint(),\n    margin_denominator: schema_utils_1.Type.Uint(),\n    reward_account: schema_utils_1.Type.String(),\n    metadata: schema_utils_1.Type.Optional(exports.CardanoPoolMetadataType),\n    owners_count: schema_utils_1.Type.Number(),\n    relays_count: schema_utils_1.Type.Number(),\n});\nexports.CardanoTxCertificate = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoCertificateType,\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    pool: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    pool_parameters: schema_utils_1.Type.Optional(exports.CardanoPoolParametersType),\n    script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoTxWithdrawal = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    amount: schema_utils_1.Type.Uint(),\n    script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoCVoteRegistrationDelegation = schema_utils_1.Type.Object({\n    vote_public_key: schema_utils_1.Type.String(),\n    weight: schema_utils_1.Type.Uint(),\n});\nexports.CardanoCVoteRegistrationParametersType = schema_utils_1.Type.Object({\n    vote_public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    staking_path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    payment_address_parameters: schema_utils_1.Type.Optional(exports.CardanoAddressParametersType),\n    nonce: schema_utils_1.Type.Uint(),\n    format: schema_utils_1.Type.Optional(exports.EnumCardanoCVoteRegistrationFormat),\n    delegations: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoCVoteRegistrationDelegation)),\n    voting_purpose: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    payment_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoTxAuxiliaryData = schema_utils_1.Type.Object({\n    cvote_registration_parameters: schema_utils_1.Type.Optional(exports.CardanoCVoteRegistrationParametersType),\n    hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoTxMint = schema_utils_1.Type.Object({\n    asset_groups_count: schema_utils_1.Type.Number(),\n});\nexports.CardanoTxCollateralInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoTxRequiredSigner = schema_utils_1.Type.Object({\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n});\nexports.CardanoTxReferenceInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoTxItemAck = schema_utils_1.Type.Object({});\nexports.CardanoTxAuxiliaryDataSupplement = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoTxAuxiliaryDataSupplementType,\n    auxiliary_data_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    cvote_registration_signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoTxWitnessRequest = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n});\nexports.CardanoTxWitnessResponse = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoTxWitnessType,\n    pub_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n    chain_code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoTxHostAck = schema_utils_1.Type.Object({});\nexports.CardanoTxBodyHash = schema_utils_1.Type.Object({\n    tx_hash: schema_utils_1.Type.String(),\n});\nexports.CardanoSignTxFinished = schema_utils_1.Type.Object({});\nexports.Success = schema_utils_1.Type.Object({\n    message: schema_utils_1.Type.String(),\n});\nvar FailureType;\n(function (FailureType) {\n    FailureType[FailureType[\"Failure_UnexpectedMessage\"] = 1] = \"Failure_UnexpectedMessage\";\n    FailureType[FailureType[\"Failure_ButtonExpected\"] = 2] = \"Failure_ButtonExpected\";\n    FailureType[FailureType[\"Failure_DataError\"] = 3] = \"Failure_DataError\";\n    FailureType[FailureType[\"Failure_ActionCancelled\"] = 4] = \"Failure_ActionCancelled\";\n    FailureType[FailureType[\"Failure_PinExpected\"] = 5] = \"Failure_PinExpected\";\n    FailureType[FailureType[\"Failure_PinCancelled\"] = 6] = \"Failure_PinCancelled\";\n    FailureType[FailureType[\"Failure_PinInvalid\"] = 7] = \"Failure_PinInvalid\";\n    FailureType[FailureType[\"Failure_InvalidSignature\"] = 8] = \"Failure_InvalidSignature\";\n    FailureType[FailureType[\"Failure_ProcessError\"] = 9] = \"Failure_ProcessError\";\n    FailureType[FailureType[\"Failure_NotEnoughFunds\"] = 10] = \"Failure_NotEnoughFunds\";\n    FailureType[FailureType[\"Failure_NotInitialized\"] = 11] = \"Failure_NotInitialized\";\n    FailureType[FailureType[\"Failure_PinMismatch\"] = 12] = \"Failure_PinMismatch\";\n    FailureType[FailureType[\"Failure_WipeCodeMismatch\"] = 13] = \"Failure_WipeCodeMismatch\";\n    FailureType[FailureType[\"Failure_InvalidSession\"] = 14] = \"Failure_InvalidSession\";\n    FailureType[FailureType[\"Failure_FirmwareError\"] = 99] = \"Failure_FirmwareError\";\n})(FailureType || (exports.FailureType = FailureType = {}));\nexports.EnumFailureType = schema_utils_1.Type.Enum(FailureType);\nexports.Failure = schema_utils_1.Type.Object({\n    code: schema_utils_1.Type.Optional(exports.EnumFailureType),\n    message: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nvar Enum_ButtonRequestType;\n(function (Enum_ButtonRequestType) {\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Other\"] = 1] = \"ButtonRequest_Other\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FeeOverThreshold\"] = 2] = \"ButtonRequest_FeeOverThreshold\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmOutput\"] = 3] = \"ButtonRequest_ConfirmOutput\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ResetDevice\"] = 4] = \"ButtonRequest_ResetDevice\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmWord\"] = 5] = \"ButtonRequest_ConfirmWord\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_WipeDevice\"] = 6] = \"ButtonRequest_WipeDevice\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ProtectCall\"] = 7] = \"ButtonRequest_ProtectCall\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_SignTx\"] = 8] = \"ButtonRequest_SignTx\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FirmwareCheck\"] = 9] = \"ButtonRequest_FirmwareCheck\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Address\"] = 10] = \"ButtonRequest_Address\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PublicKey\"] = 11] = \"ButtonRequest_PublicKey\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicWordCount\"] = 12] = \"ButtonRequest_MnemonicWordCount\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicInput\"] = 13] = \"ButtonRequest_MnemonicInput\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"_Deprecated_ButtonRequest_PassphraseType\"] = 14] = \"_Deprecated_ButtonRequest_PassphraseType\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_UnknownDerivationPath\"] = 15] = \"ButtonRequest_UnknownDerivationPath\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_RecoveryHomepage\"] = 16] = \"ButtonRequest_RecoveryHomepage\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Success\"] = 17] = \"ButtonRequest_Success\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Warning\"] = 18] = \"ButtonRequest_Warning\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PassphraseEntry\"] = 19] = \"ButtonRequest_PassphraseEntry\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PinEntry\"] = 20] = \"ButtonRequest_PinEntry\";\n})(Enum_ButtonRequestType || (exports.Enum_ButtonRequestType = Enum_ButtonRequestType = {}));\nexports.EnumEnum_ButtonRequestType = schema_utils_1.Type.Enum(Enum_ButtonRequestType);\nexports.ButtonRequestType = schema_utils_1.Type.KeyOfEnum(Enum_ButtonRequestType);\nexports.ButtonRequest = schema_utils_1.Type.Object({\n    code: schema_utils_1.Type.Optional(exports.ButtonRequestType),\n    pages: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.ButtonAck = schema_utils_1.Type.Object({});\nvar Enum_PinMatrixRequestType;\n(function (Enum_PinMatrixRequestType) {\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_Current\"] = 1] = \"PinMatrixRequestType_Current\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewFirst\"] = 2] = \"PinMatrixRequestType_NewFirst\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewSecond\"] = 3] = \"PinMatrixRequestType_NewSecond\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeFirst\"] = 4] = \"PinMatrixRequestType_WipeCodeFirst\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeSecond\"] = 5] = \"PinMatrixRequestType_WipeCodeSecond\";\n})(Enum_PinMatrixRequestType || (exports.Enum_PinMatrixRequestType = Enum_PinMatrixRequestType = {}));\nexports.EnumEnum_PinMatrixRequestType = schema_utils_1.Type.Enum(Enum_PinMatrixRequestType);\nexports.PinMatrixRequestType = schema_utils_1.Type.KeyOfEnum(Enum_PinMatrixRequestType);\nexports.PinMatrixRequest = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Optional(exports.PinMatrixRequestType),\n});\nexports.PinMatrixAck = schema_utils_1.Type.Object({\n    pin: schema_utils_1.Type.String(),\n});\nexports.PassphraseRequest = schema_utils_1.Type.Object({\n    _on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.PassphraseAck = schema_utils_1.Type.Object({\n    passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    _state: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.Deprecated_PassphraseStateRequest = schema_utils_1.Type.Object({\n    state: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.Deprecated_PassphraseStateAck = schema_utils_1.Type.Object({});\nexports.CipherKeyValue = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    key: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.String(),\n    encrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    ask_on_encrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    ask_on_decrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    iv: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CipheredKeyValue = schema_utils_1.Type.Object({\n    value: schema_utils_1.Type.String(),\n});\nexports.IdentityType = schema_utils_1.Type.Object({\n    proto: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    user: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    host: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    port: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.SignIdentity = schema_utils_1.Type.Object({\n    identity: exports.IdentityType,\n    challenge_hidden: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    challenge_visual: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.SignedIdentity = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    public_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.GetECDHSessionKey = schema_utils_1.Type.Object({\n    identity: exports.IdentityType,\n    peer_public_key: schema_utils_1.Type.String(),\n    ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.ECDHSessionKey = schema_utils_1.Type.Object({\n    session_key: schema_utils_1.Type.String(),\n    public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nvar DebugButton;\n(function (DebugButton) {\n    DebugButton[DebugButton[\"NO\"] = 0] = \"NO\";\n    DebugButton[DebugButton[\"YES\"] = 1] = \"YES\";\n    DebugButton[DebugButton[\"INFO\"] = 2] = \"INFO\";\n})(DebugButton || (exports.DebugButton = DebugButton = {}));\nexports.EnumDebugButton = schema_utils_1.Type.Enum(DebugButton);\nvar DebugPhysicalButton;\n(function (DebugPhysicalButton) {\n    DebugPhysicalButton[DebugPhysicalButton[\"LEFT_BTN\"] = 0] = \"LEFT_BTN\";\n    DebugPhysicalButton[DebugPhysicalButton[\"MIDDLE_BTN\"] = 1] = \"MIDDLE_BTN\";\n    DebugPhysicalButton[DebugPhysicalButton[\"RIGHT_BTN\"] = 2] = \"RIGHT_BTN\";\n})(DebugPhysicalButton || (exports.DebugPhysicalButton = DebugPhysicalButton = {}));\nexports.EnumDebugPhysicalButton = schema_utils_1.Type.Enum(DebugPhysicalButton);\nexports.DebugLinkResetDebugEvents = schema_utils_1.Type.Object({});\nexports.EosGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EosPublicKey = schema_utils_1.Type.Object({\n    wif_public_key: schema_utils_1.Type.String(),\n    raw_public_key: schema_utils_1.Type.String(),\n});\nexports.EosTxHeader = schema_utils_1.Type.Object({\n    expiration: schema_utils_1.Type.Number(),\n    ref_block_num: schema_utils_1.Type.Number(),\n    ref_block_prefix: schema_utils_1.Type.Number(),\n    max_net_usage_words: schema_utils_1.Type.Number(),\n    max_cpu_usage_ms: schema_utils_1.Type.Number(),\n    delay_sec: schema_utils_1.Type.Number(),\n});\nexports.EosSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    chain_id: schema_utils_1.Type.String(),\n    header: exports.EosTxHeader,\n    num_actions: schema_utils_1.Type.Number(),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EosTxActionRequest = schema_utils_1.Type.Object({\n    data_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.EosAsset = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    symbol: schema_utils_1.Type.String(),\n});\nexports.EosPermissionLevel = schema_utils_1.Type.Object({\n    actor: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n});\nexports.EosAuthorizationKey = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    key: schema_utils_1.Type.String(),\n    address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    weight: schema_utils_1.Type.Number(),\n});\nexports.EosAuthorizationAccount = schema_utils_1.Type.Object({\n    account: exports.EosPermissionLevel,\n    weight: schema_utils_1.Type.Number(),\n});\nexports.EosAuthorizationWait = schema_utils_1.Type.Object({\n    wait_sec: schema_utils_1.Type.Number(),\n    weight: schema_utils_1.Type.Number(),\n});\nexports.EosAuthorization = schema_utils_1.Type.Object({\n    threshold: schema_utils_1.Type.Number(),\n    keys: schema_utils_1.Type.Array(exports.EosAuthorizationKey),\n    accounts: schema_utils_1.Type.Array(exports.EosAuthorizationAccount),\n    waits: schema_utils_1.Type.Array(exports.EosAuthorizationWait),\n});\nexports.EosActionCommon = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    name: schema_utils_1.Type.String(),\n    authorization: schema_utils_1.Type.Array(exports.EosPermissionLevel),\n});\nexports.EosActionTransfer = schema_utils_1.Type.Object({\n    sender: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    quantity: exports.EosAsset,\n    memo: schema_utils_1.Type.String(),\n});\nexports.EosActionDelegate = schema_utils_1.Type.Object({\n    sender: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    net_quantity: exports.EosAsset,\n    cpu_quantity: exports.EosAsset,\n    transfer: schema_utils_1.Type.Boolean(),\n});\nexports.EosActionUndelegate = schema_utils_1.Type.Object({\n    sender: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    net_quantity: exports.EosAsset,\n    cpu_quantity: exports.EosAsset,\n});\nexports.EosActionRefund = schema_utils_1.Type.Object({\n    owner: schema_utils_1.Type.String(),\n});\nexports.EosActionBuyRam = schema_utils_1.Type.Object({\n    payer: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    quantity: exports.EosAsset,\n});\nexports.EosActionBuyRamBytes = schema_utils_1.Type.Object({\n    payer: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    bytes: schema_utils_1.Type.Number(),\n});\nexports.EosActionSellRam = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    bytes: schema_utils_1.Type.Number(),\n});\nexports.EosActionVoteProducer = schema_utils_1.Type.Object({\n    voter: schema_utils_1.Type.String(),\n    proxy: schema_utils_1.Type.String(),\n    producers: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n});\nexports.EosActionUpdateAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n    parent: schema_utils_1.Type.String(),\n    auth: exports.EosAuthorization,\n});\nexports.EosActionDeleteAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n});\nexports.EosActionLinkAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    code: schema_utils_1.Type.String(),\n    type: schema_utils_1.Type.String(),\n    requirement: schema_utils_1.Type.String(),\n});\nexports.EosActionUnlinkAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    code: schema_utils_1.Type.String(),\n    type: schema_utils_1.Type.String(),\n});\nexports.EosActionNewAccount = schema_utils_1.Type.Object({\n    creator: schema_utils_1.Type.String(),\n    name: schema_utils_1.Type.String(),\n    owner: exports.EosAuthorization,\n    active: exports.EosAuthorization,\n});\nexports.EosActionUnknown = schema_utils_1.Type.Object({\n    data_size: schema_utils_1.Type.Number(),\n    data_chunk: schema_utils_1.Type.String(),\n});\nexports.EosTxActionAck = schema_utils_1.Type.Object({\n    common: exports.EosActionCommon,\n    transfer: schema_utils_1.Type.Optional(exports.EosActionTransfer),\n    delegate: schema_utils_1.Type.Optional(exports.EosActionDelegate),\n    undelegate: schema_utils_1.Type.Optional(exports.EosActionUndelegate),\n    refund: schema_utils_1.Type.Optional(exports.EosActionRefund),\n    buy_ram: schema_utils_1.Type.Optional(exports.EosActionBuyRam),\n    buy_ram_bytes: schema_utils_1.Type.Optional(exports.EosActionBuyRamBytes),\n    sell_ram: schema_utils_1.Type.Optional(exports.EosActionSellRam),\n    vote_producer: schema_utils_1.Type.Optional(exports.EosActionVoteProducer),\n    update_auth: schema_utils_1.Type.Optional(exports.EosActionUpdateAuth),\n    delete_auth: schema_utils_1.Type.Optional(exports.EosActionDeleteAuth),\n    link_auth: schema_utils_1.Type.Optional(exports.EosActionLinkAuth),\n    unlink_auth: schema_utils_1.Type.Optional(exports.EosActionUnlinkAuth),\n    new_account: schema_utils_1.Type.Optional(exports.EosActionNewAccount),\n    unknown: schema_utils_1.Type.Optional(exports.EosActionUnknown),\n});\nexports.EosSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n});\nvar EthereumDefinitionType;\n(function (EthereumDefinitionType) {\n    EthereumDefinitionType[EthereumDefinitionType[\"NETWORK\"] = 0] = \"NETWORK\";\n    EthereumDefinitionType[EthereumDefinitionType[\"TOKEN\"] = 1] = \"TOKEN\";\n})(EthereumDefinitionType || (exports.EthereumDefinitionType = EthereumDefinitionType = {}));\nexports.EnumEthereumDefinitionType = schema_utils_1.Type.Enum(EthereumDefinitionType);\nexports.EthereumNetworkInfo = schema_utils_1.Type.Object({\n    chain_id: schema_utils_1.Type.Number(),\n    symbol: schema_utils_1.Type.String(),\n    slip44: schema_utils_1.Type.Number(),\n    name: schema_utils_1.Type.String(),\n});\nexports.EthereumTokenInfo = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    chain_id: schema_utils_1.Type.Number(),\n    symbol: schema_utils_1.Type.String(),\n    decimals: schema_utils_1.Type.Number(),\n    name: schema_utils_1.Type.String(),\n});\nexports.EthereumDefinitions = schema_utils_1.Type.Object({\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n    encoded_token: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n});\nexports.EthereumSignTypedData = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    primary_type: schema_utils_1.Type.String(),\n    metamask_v4_compat: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n});\nexports.EthereumTypedDataStructRequest = schema_utils_1.Type.Object({\n    name: schema_utils_1.Type.String(),\n});\nvar EthereumDataType;\n(function (EthereumDataType) {\n    EthereumDataType[EthereumDataType[\"UINT\"] = 1] = \"UINT\";\n    EthereumDataType[EthereumDataType[\"INT\"] = 2] = \"INT\";\n    EthereumDataType[EthereumDataType[\"BYTES\"] = 3] = \"BYTES\";\n    EthereumDataType[EthereumDataType[\"STRING\"] = 4] = \"STRING\";\n    EthereumDataType[EthereumDataType[\"BOOL\"] = 5] = \"BOOL\";\n    EthereumDataType[EthereumDataType[\"ADDRESS\"] = 6] = \"ADDRESS\";\n    EthereumDataType[EthereumDataType[\"ARRAY\"] = 7] = \"ARRAY\";\n    EthereumDataType[EthereumDataType[\"STRUCT\"] = 8] = \"STRUCT\";\n})(EthereumDataType || (exports.EthereumDataType = EthereumDataType = {}));\nexports.EnumEthereumDataType = schema_utils_1.Type.Enum(EthereumDataType);\nexports.EthereumFieldType = schema_utils_1.Type.Recursive(This => schema_utils_1.Type.Object({\n    data_type: exports.EnumEthereumDataType,\n    size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    entry_type: schema_utils_1.Type.Optional(This),\n    struct_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}));\nexports.EthereumStructMember = schema_utils_1.Type.Object({\n    type: exports.EthereumFieldType,\n    name: schema_utils_1.Type.String(),\n});\nexports.EthereumTypedDataStructAck = schema_utils_1.Type.Object({\n    members: schema_utils_1.Type.Array(exports.EthereumStructMember),\n});\nexports.EthereumTypedDataValueRequest = schema_utils_1.Type.Object({\n    member_path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n});\nexports.EthereumTypedDataValueAck = schema_utils_1.Type.Object({\n    value: schema_utils_1.Type.String(),\n});\nexports.EthereumGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumPublicKey = schema_utils_1.Type.Object({\n    node: exports.HDNodeType,\n    xpub: schema_utils_1.Type.String(),\n});\nexports.EthereumGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumAddress = schema_utils_1.Type.Object({\n    _old_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    address: schema_utils_1.Type.String(),\n});\nexports.EthereumSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    nonce: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    gas_price: schema_utils_1.Type.String(),\n    gas_limit: schema_utils_1.Type.String(),\n    to: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    value: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    data_initial_chunk: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    chain_id: schema_utils_1.Type.Number(),\n    tx_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumAccessList = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    storage_keys: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n});\nexports.EthereumSignTxEIP1559 = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    nonce: schema_utils_1.Type.String(),\n    max_gas_fee: schema_utils_1.Type.String(),\n    max_priority_fee: schema_utils_1.Type.String(),\n    gas_limit: schema_utils_1.Type.String(),\n    to: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    value: schema_utils_1.Type.String(),\n    data_initial_chunk: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    data_length: schema_utils_1.Type.Number(),\n    chain_id: schema_utils_1.Type.Number(),\n    access_list: schema_utils_1.Type.Array(exports.EthereumAccessList),\n    definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumTxRequest = schema_utils_1.Type.Object({\n    data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    signature_v: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    signature_r: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    signature_s: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.EthereumTxAck = schema_utils_1.Type.Object({\n    data_chunk: schema_utils_1.Type.String(),\n});\nexports.EthereumSignMessage = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    message: schema_utils_1.Type.String(),\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumMessageSignature = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    address: schema_utils_1.Type.String(),\n});\nexports.EthereumVerifyMessage = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    message: schema_utils_1.Type.String(),\n    address: schema_utils_1.Type.String(),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumSignTypedHash = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    domain_separator_hash: schema_utils_1.Type.String(),\n    message_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n});\nexports.EthereumTypedDataSignature = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    address: schema_utils_1.Type.String(),\n});\nvar Enum_BackupType;\n(function (Enum_BackupType) {\n    Enum_BackupType[Enum_BackupType[\"Bip39\"] = 0] = \"Bip39\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Basic\"] = 1] = \"Slip39_Basic\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Advanced\"] = 2] = \"Slip39_Advanced\";\n})(Enum_BackupType || (exports.Enum_BackupType = Enum_BackupType = {}));\nexports.EnumEnum_BackupType = schema_utils_1.Type.Enum(Enum_BackupType);\nexports.BackupType = schema_utils_1.Type.KeyOfEnum(Enum_BackupType);\nvar Enum_SafetyCheckLevel;\n(function (Enum_SafetyCheckLevel) {\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"Strict\"] = 0] = \"Strict\";\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptAlways\"] = 1] = \"PromptAlways\";\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptTemporarily\"] = 2] = \"PromptTemporarily\";\n})(Enum_SafetyCheckLevel || (exports.Enum_SafetyCheckLevel = Enum_SafetyCheckLevel = {}));\nexports.EnumEnum_SafetyCheckLevel = schema_utils_1.Type.Enum(Enum_SafetyCheckLevel);\nexports.SafetyCheckLevel = schema_utils_1.Type.KeyOfEnum(Enum_SafetyCheckLevel);\nvar Enum_HomescreenFormat;\n(function (Enum_HomescreenFormat) {\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"Toif\"] = 1] = \"Toif\";\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"Jpeg\"] = 2] = \"Jpeg\";\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"ToiG\"] = 3] = \"ToiG\";\n})(Enum_HomescreenFormat || (exports.Enum_HomescreenFormat = Enum_HomescreenFormat = {}));\nexports.EnumEnum_HomescreenFormat = schema_utils_1.Type.Enum(Enum_HomescreenFormat);\nexports.HomescreenFormat = schema_utils_1.Type.KeyOfEnum(Enum_HomescreenFormat);\nexports.Initialize = schema_utils_1.Type.Object({\n    session_id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    _skip_passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    derive_cardano: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.GetFeatures = schema_utils_1.Type.Object({});\nvar Enum_Capability;\n(function (Enum_Capability) {\n    Enum_Capability[Enum_Capability[\"Capability_Bitcoin\"] = 1] = \"Capability_Bitcoin\";\n    Enum_Capability[Enum_Capability[\"Capability_Bitcoin_like\"] = 2] = \"Capability_Bitcoin_like\";\n    Enum_Capability[Enum_Capability[\"Capability_Binance\"] = 3] = \"Capability_Binance\";\n    Enum_Capability[Enum_Capability[\"Capability_Cardano\"] = 4] = \"Capability_Cardano\";\n    Enum_Capability[Enum_Capability[\"Capability_Crypto\"] = 5] = \"Capability_Crypto\";\n    Enum_Capability[Enum_Capability[\"Capability_EOS\"] = 6] = \"Capability_EOS\";\n    Enum_Capability[Enum_Capability[\"Capability_Ethereum\"] = 7] = \"Capability_Ethereum\";\n    Enum_Capability[Enum_Capability[\"Capability_Lisk\"] = 8] = \"Capability_Lisk\";\n    Enum_Capability[Enum_Capability[\"Capability_Monero\"] = 9] = \"Capability_Monero\";\n    Enum_Capability[Enum_Capability[\"Capability_NEM\"] = 10] = \"Capability_NEM\";\n    Enum_Capability[Enum_Capability[\"Capability_Ripple\"] = 11] = \"Capability_Ripple\";\n    Enum_Capability[Enum_Capability[\"Capability_Stellar\"] = 12] = \"Capability_Stellar\";\n    Enum_Capability[Enum_Capability[\"Capability_Tezos\"] = 13] = \"Capability_Tezos\";\n    Enum_Capability[Enum_Capability[\"Capability_U2F\"] = 14] = \"Capability_U2F\";\n    Enum_Capability[Enum_Capability[\"Capability_Shamir\"] = 15] = \"Capability_Shamir\";\n    Enum_Capability[Enum_Capability[\"Capability_ShamirGroups\"] = 16] = \"Capability_ShamirGroups\";\n    Enum_Capability[Enum_Capability[\"Capability_PassphraseEntry\"] = 17] = \"Capability_PassphraseEntry\";\n    Enum_Capability[Enum_Capability[\"Capability_Solana\"] = 18] = \"Capability_Solana\";\n    Enum_Capability[Enum_Capability[\"Capability_Translations\"] = 19] = \"Capability_Translations\";\n})(Enum_Capability || (exports.Enum_Capability = Enum_Capability = {}));\nexports.EnumEnum_Capability = schema_utils_1.Type.Enum(Enum_Capability);\nexports.Capability = schema_utils_1.Type.KeyOfEnum(Enum_Capability);\nexports.Features = schema_utils_1.Type.Object({\n    vendor: schema_utils_1.Type.String(),\n    major_version: schema_utils_1.Type.Number(),\n    minor_version: schema_utils_1.Type.Number(),\n    patch_version: schema_utils_1.Type.Number(),\n    bootloader_mode: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    device_id: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    pin_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    passphrase_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    language: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    label: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    initialized: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    revision: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    bootloader_hash: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    imported: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    unlocked: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    _passphrase_cached: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    firmware_present: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    needs_backup: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    flags: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    model: schema_utils_1.Type.String(),\n    fw_major: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    fw_minor: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    fw_patch: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    fw_vendor: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    unfinished_backup: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    no_backup: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    recovery_mode: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    capabilities: schema_utils_1.Type.Array(exports.Capability),\n    backup_type: schema_utils_1.Type.Union([exports.BackupType, schema_utils_1.Type.Null()]),\n    sd_card_present: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    sd_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    wipe_code_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    session_id: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    passphrase_always_on_device: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    safety_checks: schema_utils_1.Type.Union([exports.SafetyCheckLevel, schema_utils_1.Type.Null()]),\n    auto_lock_delay_ms: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    display_rotation: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    experimental_features: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    busy: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    homescreen_format: schema_utils_1.Type.Optional(exports.HomescreenFormat),\n    hide_passphrase_from_host: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    internal_model: exports.EnumDeviceModelInternal,\n    unit_color: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    unit_btconly: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    homescreen_width: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    homescreen_height: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    bootloader_locked: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language_version_matches: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.LockDevice = schema_utils_1.Type.Object({});\nexports.SetBusy = schema_utils_1.Type.Object({\n    expiry_ms: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.EndSession = schema_utils_1.Type.Object({});\nexports.ApplySettings = schema_utils_1.Type.Object({\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    use_passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    homescreen: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    _passphrase_source: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    auto_lock_delay_ms: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    display_rotation: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    passphrase_always_on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    safety_checks: schema_utils_1.Type.Optional(exports.SafetyCheckLevel),\n    experimental_features: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    hide_passphrase_from_host: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.ChangeLanguage = schema_utils_1.Type.Object({\n    data_length: schema_utils_1.Type.Number(),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.TranslationDataRequest = schema_utils_1.Type.Object({\n    data_length: schema_utils_1.Type.Number(),\n    data_offset: schema_utils_1.Type.Number(),\n});\nexports.TranslationDataAck = schema_utils_1.Type.Object({\n    data_chunk: schema_utils_1.Type.String(),\n});\nexports.ApplyFlags = schema_utils_1.Type.Object({\n    flags: schema_utils_1.Type.Number(),\n});\nexports.ChangePin = schema_utils_1.Type.Object({\n    remove: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.ChangeWipeCode = schema_utils_1.Type.Object({\n    remove: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nvar SdProtectOperationType;\n(function (SdProtectOperationType) {\n    SdProtectOperationType[SdProtectOperationType[\"DISABLE\"] = 0] = \"DISABLE\";\n    SdProtectOperationType[SdProtectOperationType[\"ENABLE\"] = 1] = \"ENABLE\";\n    SdProtectOperationType[SdProtectOperationType[\"REFRESH\"] = 2] = \"REFRESH\";\n})(SdProtectOperationType || (exports.SdProtectOperationType = SdProtectOperationType = {}));\nexports.EnumSdProtectOperationType = schema_utils_1.Type.Enum(SdProtectOperationType);\nexports.SdProtect = schema_utils_1.Type.Object({\n    operation: exports.EnumSdProtectOperationType,\n});\nexports.Ping = schema_utils_1.Type.Object({\n    message: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    button_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.Cancel = schema_utils_1.Type.Object({});\nexports.GetEntropy = schema_utils_1.Type.Object({\n    size: schema_utils_1.Type.Number(),\n});\nexports.Entropy = schema_utils_1.Type.Object({\n    entropy: schema_utils_1.Type.String(),\n});\nexports.GetFirmwareHash = schema_utils_1.Type.Object({\n    challenge: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.FirmwareHash = schema_utils_1.Type.Object({\n    hash: schema_utils_1.Type.String(),\n});\nexports.AuthenticateDevice = schema_utils_1.Type.Object({\n    challenge: schema_utils_1.Type.String(),\n});\nexports.AuthenticityProof = schema_utils_1.Type.Object({\n    certificates: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n    signature: schema_utils_1.Type.String(),\n});\nexports.WipeDevice = schema_utils_1.Type.Object({});\nexports.ResetDevice = schema_utils_1.Type.Object({\n    display_random: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    strength: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    pin_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    skip_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    no_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    backup_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Number()])),\n});\nexports.BackupDevice = schema_utils_1.Type.Object({});\nexports.EntropyRequest = schema_utils_1.Type.Object({});\nexports.EntropyAck = schema_utils_1.Type.Object({\n    entropy: schema_utils_1.Type.String(),\n});\nvar RecoveryDeviceType;\n(function (RecoveryDeviceType) {\n    RecoveryDeviceType[RecoveryDeviceType[\"RecoveryDeviceType_ScrambledWords\"] = 0] = \"RecoveryDeviceType_ScrambledWords\";\n    RecoveryDeviceType[RecoveryDeviceType[\"RecoveryDeviceType_Matrix\"] = 1] = \"RecoveryDeviceType_Matrix\";\n})(RecoveryDeviceType || (exports.RecoveryDeviceType = RecoveryDeviceType = {}));\nexports.EnumRecoveryDeviceType = schema_utils_1.Type.Enum(RecoveryDeviceType);\nexports.RecoveryDevice = schema_utils_1.Type.Object({\n    word_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    pin_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    enforce_wordlist: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    type: schema_utils_1.Type.Optional(exports.EnumRecoveryDeviceType),\n    u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    dry_run: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nvar Enum_WordRequestType;\n(function (Enum_WordRequestType) {\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Plain\"] = 0] = \"WordRequestType_Plain\";\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix9\"] = 1] = \"WordRequestType_Matrix9\";\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix6\"] = 2] = \"WordRequestType_Matrix6\";\n})(Enum_WordRequestType || (exports.Enum_WordRequestType = Enum_WordRequestType = {}));\nexports.EnumEnum_WordRequestType = schema_utils_1.Type.Enum(Enum_WordRequestType);\nexports.WordRequestType = schema_utils_1.Type.KeyOfEnum(Enum_WordRequestType);\nexports.WordRequest = schema_utils_1.Type.Object({\n    type: exports.WordRequestType,\n});\nexports.WordAck = schema_utils_1.Type.Object({\n    word: schema_utils_1.Type.String(),\n});\nexports.SetU2FCounter = schema_utils_1.Type.Object({\n    u2f_counter: schema_utils_1.Type.Number(),\n});\nexports.GetNextU2FCounter = schema_utils_1.Type.Object({});\nexports.NextU2FCounter = schema_utils_1.Type.Object({\n    u2f_counter: schema_utils_1.Type.Number(),\n});\nexports.DoPreauthorized = schema_utils_1.Type.Object({});\nexports.PreauthorizedRequest = schema_utils_1.Type.Object({});\nexports.CancelAuthorization = schema_utils_1.Type.Object({});\nvar BootCommand;\n(function (BootCommand) {\n    BootCommand[BootCommand[\"STOP_AND_WAIT\"] = 0] = \"STOP_AND_WAIT\";\n    BootCommand[BootCommand[\"INSTALL_UPGRADE\"] = 1] = \"INSTALL_UPGRADE\";\n})(BootCommand || (exports.BootCommand = BootCommand = {}));\nexports.EnumBootCommand = schema_utils_1.Type.Enum(BootCommand);\nexports.RebootToBootloader = schema_utils_1.Type.Object({\n    boot_command: schema_utils_1.Type.Optional(exports.EnumBootCommand),\n    firmware_header: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    language_data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.GetNonce = schema_utils_1.Type.Object({});\nexports.Nonce = schema_utils_1.Type.Object({\n    nonce: schema_utils_1.Type.String(),\n});\nexports.UnlockPath = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.UnlockedPathRequest = schema_utils_1.Type.Object({\n    mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.ShowDeviceTutorial = schema_utils_1.Type.Object({});\nexports.UnlockBootloader = schema_utils_1.Type.Object({});\nvar MoneroNetworkType;\n(function (MoneroNetworkType) {\n    MoneroNetworkType[MoneroNetworkType[\"MAINNET\"] = 0] = \"MAINNET\";\n    MoneroNetworkType[MoneroNetworkType[\"TESTNET\"] = 1] = \"TESTNET\";\n    MoneroNetworkType[MoneroNetworkType[\"STAGENET\"] = 2] = \"STAGENET\";\n    MoneroNetworkType[MoneroNetworkType[\"FAKECHAIN\"] = 3] = \"FAKECHAIN\";\n})(MoneroNetworkType || (exports.MoneroNetworkType = MoneroNetworkType = {}));\nexports.EnumMoneroNetworkType = schema_utils_1.Type.Enum(MoneroNetworkType);\nexports.NEMGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.NEMAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nexports.NEMTransactionCommon = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    timestamp: schema_utils_1.Type.Number(),\n    fee: schema_utils_1.Type.Uint(),\n    deadline: schema_utils_1.Type.Number(),\n    signer: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.NEMMosaic = schema_utils_1.Type.Object({\n    namespace: schema_utils_1.Type.String(),\n    mosaic: schema_utils_1.Type.String(),\n    quantity: schema_utils_1.Type.Number(),\n});\nexports.NEMTransfer = schema_utils_1.Type.Object({\n    recipient: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Uint(),\n    payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    mosaics: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.NEMMosaic)),\n});\nexports.NEMProvisionNamespace = schema_utils_1.Type.Object({\n    namespace: schema_utils_1.Type.String(),\n    parent: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sink: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Uint(),\n});\nvar NEMMosaicLevy;\n(function (NEMMosaicLevy) {\n    NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Absolute\"] = 1] = \"MosaicLevy_Absolute\";\n    NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Percentile\"] = 2] = \"MosaicLevy_Percentile\";\n})(NEMMosaicLevy || (exports.NEMMosaicLevy = NEMMosaicLevy = {}));\nexports.EnumNEMMosaicLevy = schema_utils_1.Type.Enum(NEMMosaicLevy);\nexports.NEMMosaicDefinition = schema_utils_1.Type.Object({\n    name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ticker: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    namespace: schema_utils_1.Type.String(),\n    mosaic: schema_utils_1.Type.String(),\n    divisibility: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    levy: schema_utils_1.Type.Optional(exports.EnumNEMMosaicLevy),\n    fee: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    levy_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    levy_namespace: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    levy_mosaic: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    supply: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    mutable_supply: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    transferable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    description: schema_utils_1.Type.String(),\n    networks: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n});\nexports.NEMMosaicCreation = schema_utils_1.Type.Object({\n    definition: exports.NEMMosaicDefinition,\n    sink: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Uint(),\n});\nvar NEMSupplyChangeType;\n(function (NEMSupplyChangeType) {\n    NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Increase\"] = 1] = \"SupplyChange_Increase\";\n    NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Decrease\"] = 2] = \"SupplyChange_Decrease\";\n})(NEMSupplyChangeType || (exports.NEMSupplyChangeType = NEMSupplyChangeType = {}));\nexports.EnumNEMSupplyChangeType = schema_utils_1.Type.Enum(NEMSupplyChangeType);\nexports.NEMMosaicSupplyChange = schema_utils_1.Type.Object({\n    namespace: schema_utils_1.Type.String(),\n    mosaic: schema_utils_1.Type.String(),\n    type: exports.EnumNEMSupplyChangeType,\n    delta: schema_utils_1.Type.Number(),\n});\nvar NEMModificationType;\n(function (NEMModificationType) {\n    NEMModificationType[NEMModificationType[\"CosignatoryModification_Add\"] = 1] = \"CosignatoryModification_Add\";\n    NEMModificationType[NEMModificationType[\"CosignatoryModification_Delete\"] = 2] = \"CosignatoryModification_Delete\";\n})(NEMModificationType || (exports.NEMModificationType = NEMModificationType = {}));\nexports.EnumNEMModificationType = schema_utils_1.Type.Enum(NEMModificationType);\nexports.NEMCosignatoryModification = schema_utils_1.Type.Object({\n    type: exports.EnumNEMModificationType,\n    public_key: schema_utils_1.Type.String(),\n});\nexports.NEMAggregateModification = schema_utils_1.Type.Object({\n    modifications: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.NEMCosignatoryModification)),\n    relative_change: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nvar NEMImportanceTransferMode;\n(function (NEMImportanceTransferMode) {\n    NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Activate\"] = 1] = \"ImportanceTransfer_Activate\";\n    NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Deactivate\"] = 2] = \"ImportanceTransfer_Deactivate\";\n})(NEMImportanceTransferMode || (exports.NEMImportanceTransferMode = NEMImportanceTransferMode = {}));\nexports.EnumNEMImportanceTransferMode = schema_utils_1.Type.Enum(NEMImportanceTransferMode);\nexports.NEMImportanceTransfer = schema_utils_1.Type.Object({\n    mode: exports.EnumNEMImportanceTransferMode,\n    public_key: schema_utils_1.Type.String(),\n});\nexports.NEMSignTx = schema_utils_1.Type.Object({\n    transaction: exports.NEMTransactionCommon,\n    multisig: schema_utils_1.Type.Optional(exports.NEMTransactionCommon),\n    transfer: schema_utils_1.Type.Optional(exports.NEMTransfer),\n    cosigning: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    provision_namespace: schema_utils_1.Type.Optional(exports.NEMProvisionNamespace),\n    mosaic_creation: schema_utils_1.Type.Optional(exports.NEMMosaicCreation),\n    supply_change: schema_utils_1.Type.Optional(exports.NEMMosaicSupplyChange),\n    aggregate_modification: schema_utils_1.Type.Optional(exports.NEMAggregateModification),\n    importance_transfer: schema_utils_1.Type.Optional(exports.NEMImportanceTransfer),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.NEMSignedTx = schema_utils_1.Type.Object({\n    data: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.NEMDecryptMessage = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.NEMDecryptedMessage = schema_utils_1.Type.Object({\n    payload: schema_utils_1.Type.String(),\n});\nexports.experimental_message = schema_utils_1.Type.Object({});\nexports.experimental_field = schema_utils_1.Type.Object({});\nexports.RippleGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.RippleAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nexports.RipplePayment = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    destination: schema_utils_1.Type.String(),\n    destination_tag: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.RippleSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    fee: schema_utils_1.Type.Uint(),\n    flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    sequence: schema_utils_1.Type.Number(),\n    last_ledger_sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    payment: exports.RipplePayment,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.RippleSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    serialized_tx: schema_utils_1.Type.String(),\n});\nexports.SolanaGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.SolanaPublicKey = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n});\nexports.SolanaGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.SolanaAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nexports.SolanaTxTokenAccountInfo = schema_utils_1.Type.Object({\n    base_address: schema_utils_1.Type.String(),\n    token_program: schema_utils_1.Type.String(),\n    token_mint: schema_utils_1.Type.String(),\n    token_account: schema_utils_1.Type.String(),\n});\nexports.SolanaTxAdditionalInfo = schema_utils_1.Type.Object({\n    token_accounts_infos: schema_utils_1.Type.Array(exports.SolanaTxTokenAccountInfo),\n});\nexports.SolanaSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    serialized_tx: schema_utils_1.Type.String(),\n    additional_info: schema_utils_1.Type.Optional(exports.SolanaTxAdditionalInfo),\n});\nexports.SolanaTxSignature = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n});\nvar StellarAssetType;\n(function (StellarAssetType) {\n    StellarAssetType[StellarAssetType[\"NATIVE\"] = 0] = \"NATIVE\";\n    StellarAssetType[StellarAssetType[\"ALPHANUM4\"] = 1] = \"ALPHANUM4\";\n    StellarAssetType[StellarAssetType[\"ALPHANUM12\"] = 2] = \"ALPHANUM12\";\n})(StellarAssetType || (exports.StellarAssetType = StellarAssetType = {}));\nexports.EnumStellarAssetType = schema_utils_1.Type.Enum(StellarAssetType);\nexports.StellarAsset = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Union([\n        schema_utils_1.Type.Literal(0),\n        schema_utils_1.Type.Literal(1),\n        schema_utils_1.Type.Literal(2),\n        schema_utils_1.Type.Literal('NATIVE'),\n        schema_utils_1.Type.Literal('ALPHANUM4'),\n        schema_utils_1.Type.Literal('ALPHANUM12'),\n    ]),\n    code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    issuer: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.StellarGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.StellarAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nvar StellarMemoType;\n(function (StellarMemoType) {\n    StellarMemoType[StellarMemoType[\"NONE\"] = 0] = \"NONE\";\n    StellarMemoType[StellarMemoType[\"TEXT\"] = 1] = \"TEXT\";\n    StellarMemoType[StellarMemoType[\"ID\"] = 2] = \"ID\";\n    StellarMemoType[StellarMemoType[\"HASH\"] = 3] = \"HASH\";\n    StellarMemoType[StellarMemoType[\"RETURN\"] = 4] = \"RETURN\";\n})(StellarMemoType || (exports.StellarMemoType = StellarMemoType = {}));\nexports.EnumStellarMemoType = schema_utils_1.Type.Enum(StellarMemoType);\nexports.StellarSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    network_passphrase: schema_utils_1.Type.String(),\n    source_account: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Uint(),\n    sequence_number: schema_utils_1.Type.Uint(),\n    timebounds_start: schema_utils_1.Type.Number(),\n    timebounds_end: schema_utils_1.Type.Number(),\n    memo_type: exports.EnumStellarMemoType,\n    memo_text: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    memo_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    memo_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n    num_operations: schema_utils_1.Type.Number(),\n});\nexports.StellarTxOpRequest = schema_utils_1.Type.Object({});\nexports.StellarPaymentOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination_account: schema_utils_1.Type.String(),\n    asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n});\nexports.StellarCreateAccountOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    new_account: schema_utils_1.Type.String(),\n    starting_balance: schema_utils_1.Type.Uint(),\n});\nexports.StellarPathPaymentStrictReceiveOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    send_asset: exports.StellarAsset,\n    send_max: schema_utils_1.Type.Uint(),\n    destination_account: schema_utils_1.Type.String(),\n    destination_asset: exports.StellarAsset,\n    destination_amount: schema_utils_1.Type.Uint(),\n    paths: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset)),\n});\nexports.StellarPathPaymentStrictSendOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    send_asset: exports.StellarAsset,\n    send_amount: schema_utils_1.Type.Uint(),\n    destination_account: schema_utils_1.Type.String(),\n    destination_asset: exports.StellarAsset,\n    destination_min: schema_utils_1.Type.Uint(),\n    paths: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset)),\n});\nexports.StellarManageSellOfferOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    selling_asset: exports.StellarAsset,\n    buying_asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price_n: schema_utils_1.Type.Number(),\n    price_d: schema_utils_1.Type.Number(),\n    offer_id: schema_utils_1.Type.Uint(),\n});\nexports.StellarManageBuyOfferOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    selling_asset: exports.StellarAsset,\n    buying_asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price_n: schema_utils_1.Type.Number(),\n    price_d: schema_utils_1.Type.Number(),\n    offer_id: schema_utils_1.Type.Uint(),\n});\nexports.StellarCreatePassiveSellOfferOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    selling_asset: exports.StellarAsset,\n    buying_asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price_n: schema_utils_1.Type.Number(),\n    price_d: schema_utils_1.Type.Number(),\n});\nvar StellarSignerType;\n(function (StellarSignerType) {\n    StellarSignerType[StellarSignerType[\"ACCOUNT\"] = 0] = \"ACCOUNT\";\n    StellarSignerType[StellarSignerType[\"PRE_AUTH\"] = 1] = \"PRE_AUTH\";\n    StellarSignerType[StellarSignerType[\"HASH\"] = 2] = \"HASH\";\n})(StellarSignerType || (exports.StellarSignerType = StellarSignerType = {}));\nexports.EnumStellarSignerType = schema_utils_1.Type.Enum(StellarSignerType);\nexports.StellarSetOptionsOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    inflation_destination_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    clear_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    set_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    master_weight: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    low_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    medium_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    high_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    home_domain: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    signer_type: schema_utils_1.Type.Optional(exports.EnumStellarSignerType),\n    signer_key: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n    signer_weight: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.StellarChangeTrustOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    asset: exports.StellarAsset,\n    limit: schema_utils_1.Type.Uint(),\n});\nexports.StellarAllowTrustOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    trusted_account: schema_utils_1.Type.String(),\n    asset_type: exports.EnumStellarAssetType,\n    asset_code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    is_authorized: schema_utils_1.Type.Boolean(),\n});\nexports.StellarAccountMergeOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination_account: schema_utils_1.Type.String(),\n});\nexports.StellarManageDataOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n});\nexports.StellarBumpSequenceOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    bump_to: schema_utils_1.Type.Uint(),\n});\nexports.StellarClaimClaimableBalanceOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    balance_id: schema_utils_1.Type.String(),\n});\nexports.StellarSignedTx = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.TezosGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.TezosAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nexports.TezosGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.TezosPublicKey = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n});\nvar TezosContractType;\n(function (TezosContractType) {\n    TezosContractType[TezosContractType[\"Implicit\"] = 0] = \"Implicit\";\n    TezosContractType[TezosContractType[\"Originated\"] = 1] = \"Originated\";\n})(TezosContractType || (exports.TezosContractType = TezosContractType = {}));\nexports.EnumTezosContractType = schema_utils_1.Type.Enum(TezosContractType);\nexports.TezosContractID = schema_utils_1.Type.Object({\n    tag: schema_utils_1.Type.Number(),\n    hash: schema_utils_1.Type.Uint8Array(),\n});\nexports.TezosRevealOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    public_key: schema_utils_1.Type.Uint8Array(),\n});\nexports.TezosManagerTransfer = schema_utils_1.Type.Object({\n    destination: exports.TezosContractID,\n    amount: schema_utils_1.Type.Uint(),\n});\nexports.TezosParametersManager = schema_utils_1.Type.Object({\n    set_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint8Array()),\n    cancel_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    transfer: schema_utils_1.Type.Optional(exports.TezosManagerTransfer),\n});\nexports.TezosTransactionOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    amount: schema_utils_1.Type.Uint(),\n    destination: exports.TezosContractID,\n    parameters: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    parameters_manager: schema_utils_1.Type.Optional(exports.TezosParametersManager),\n});\nexports.TezosOriginationOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    manager_pubkey: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    balance: schema_utils_1.Type.Number(),\n    spendable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    delegatable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint8Array()),\n    script: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())]),\n});\nexports.TezosDelegationOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    delegate: schema_utils_1.Type.Uint8Array(),\n});\nexports.TezosProposalOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    period: schema_utils_1.Type.Number(),\n    proposals: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n});\nvar TezosBallotType;\n(function (TezosBallotType) {\n    TezosBallotType[TezosBallotType[\"Yay\"] = 0] = \"Yay\";\n    TezosBallotType[TezosBallotType[\"Nay\"] = 1] = \"Nay\";\n    TezosBallotType[TezosBallotType[\"Pass\"] = 2] = \"Pass\";\n})(TezosBallotType || (exports.TezosBallotType = TezosBallotType = {}));\nexports.EnumTezosBallotType = schema_utils_1.Type.Enum(TezosBallotType);\nexports.TezosBallotOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    period: schema_utils_1.Type.Number(),\n    proposal: schema_utils_1.Type.String(),\n    ballot: exports.EnumTezosBallotType,\n});\nexports.TezosSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    branch: schema_utils_1.Type.Uint8Array(),\n    reveal: schema_utils_1.Type.Optional(exports.TezosRevealOp),\n    transaction: schema_utils_1.Type.Optional(exports.TezosTransactionOp),\n    origination: schema_utils_1.Type.Optional(exports.TezosOriginationOp),\n    delegation: schema_utils_1.Type.Optional(exports.TezosDelegationOp),\n    proposal: schema_utils_1.Type.Optional(exports.TezosProposalOp),\n    ballot: schema_utils_1.Type.Optional(exports.TezosBallotOp),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.TezosSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    sig_op_contents: schema_utils_1.Type.String(),\n    operation_hash: schema_utils_1.Type.String(),\n});\nexports.MessageType = schema_utils_1.Type.Object({\n    BinanceGetAddress: exports.BinanceGetAddress,\n    BinanceAddress: exports.BinanceAddress,\n    BinanceGetPublicKey: exports.BinanceGetPublicKey,\n    BinancePublicKey: exports.BinancePublicKey,\n    BinanceSignTx: exports.BinanceSignTx,\n    BinanceTxRequest: exports.BinanceTxRequest,\n    BinanceCoin: exports.BinanceCoin,\n    BinanceInputOutput: exports.BinanceInputOutput,\n    BinanceTransferMsg: exports.BinanceTransferMsg,\n    BinanceOrderMsg: exports.BinanceOrderMsg,\n    BinanceCancelMsg: exports.BinanceCancelMsg,\n    BinanceSignedTx: exports.BinanceSignedTx,\n    HDNodeType: exports.HDNodeType,\n    HDNodePathType: exports.HDNodePathType,\n    MultisigRedeemScriptType: exports.MultisigRedeemScriptType,\n    GetPublicKey: exports.GetPublicKey,\n    PublicKey: exports.PublicKey,\n    GetAddress: exports.GetAddress,\n    Address: exports.Address,\n    GetOwnershipId: exports.GetOwnershipId,\n    OwnershipId: exports.OwnershipId,\n    SignMessage: exports.SignMessage,\n    MessageSignature: exports.MessageSignature,\n    VerifyMessage: exports.VerifyMessage,\n    CoinJoinRequest: exports.CoinJoinRequest,\n    SignTx: exports.SignTx,\n    TxRequestDetailsType: exports.TxRequestDetailsType,\n    TxRequestSerializedType: exports.TxRequestSerializedType,\n    TxRequest: exports.TxRequest,\n    TxInputType: exports.TxInputType,\n    TxOutputBinType: exports.TxOutputBinType,\n    TxOutputType: exports.TxOutputType,\n    PrevTx: exports.PrevTx,\n    PrevInput: exports.PrevInput,\n    PrevOutput: exports.PrevOutput,\n    TextMemo: exports.TextMemo,\n    RefundMemo: exports.RefundMemo,\n    CoinPurchaseMemo: exports.CoinPurchaseMemo,\n    PaymentRequestMemo: exports.PaymentRequestMemo,\n    TxAckPaymentRequest: exports.TxAckPaymentRequest,\n    TxAck: exports.TxAck,\n    TxAckInputWrapper: exports.TxAckInputWrapper,\n    TxAckInput: exports.TxAckInput,\n    TxAckOutputWrapper: exports.TxAckOutputWrapper,\n    TxAckOutput: exports.TxAckOutput,\n    TxAckPrevMeta: exports.TxAckPrevMeta,\n    TxAckPrevInputWrapper: exports.TxAckPrevInputWrapper,\n    TxAckPrevInput: exports.TxAckPrevInput,\n    TxAckPrevOutputWrapper: exports.TxAckPrevOutputWrapper,\n    TxAckPrevOutput: exports.TxAckPrevOutput,\n    TxAckPrevExtraDataWrapper: exports.TxAckPrevExtraDataWrapper,\n    TxAckPrevExtraData: exports.TxAckPrevExtraData,\n    GetOwnershipProof: exports.GetOwnershipProof,\n    OwnershipProof: exports.OwnershipProof,\n    AuthorizeCoinJoin: exports.AuthorizeCoinJoin,\n    FirmwareErase: exports.FirmwareErase,\n    FirmwareRequest: exports.FirmwareRequest,\n    FirmwareUpload: exports.FirmwareUpload,\n    ProdTestT1: exports.ProdTestT1,\n    CardanoBlockchainPointerType: exports.CardanoBlockchainPointerType,\n    CardanoNativeScript: exports.CardanoNativeScript,\n    CardanoGetNativeScriptHash: exports.CardanoGetNativeScriptHash,\n    CardanoNativeScriptHash: exports.CardanoNativeScriptHash,\n    CardanoAddressParametersType: exports.CardanoAddressParametersType,\n    CardanoGetAddress: exports.CardanoGetAddress,\n    CardanoAddress: exports.CardanoAddress,\n    CardanoGetPublicKey: exports.CardanoGetPublicKey,\n    CardanoPublicKey: exports.CardanoPublicKey,\n    CardanoSignTxInit: exports.CardanoSignTxInit,\n    CardanoTxInput: exports.CardanoTxInput,\n    CardanoTxOutput: exports.CardanoTxOutput,\n    CardanoAssetGroup: exports.CardanoAssetGroup,\n    CardanoToken: exports.CardanoToken,\n    CardanoTxInlineDatumChunk: exports.CardanoTxInlineDatumChunk,\n    CardanoTxReferenceScriptChunk: exports.CardanoTxReferenceScriptChunk,\n    CardanoPoolOwner: exports.CardanoPoolOwner,\n    CardanoPoolRelayParameters: exports.CardanoPoolRelayParameters,\n    CardanoPoolMetadataType: exports.CardanoPoolMetadataType,\n    CardanoPoolParametersType: exports.CardanoPoolParametersType,\n    CardanoTxCertificate: exports.CardanoTxCertificate,\n    CardanoTxWithdrawal: exports.CardanoTxWithdrawal,\n    CardanoCVoteRegistrationDelegation: exports.CardanoCVoteRegistrationDelegation,\n    CardanoCVoteRegistrationParametersType: exports.CardanoCVoteRegistrationParametersType,\n    CardanoTxAuxiliaryData: exports.CardanoTxAuxiliaryData,\n    CardanoTxMint: exports.CardanoTxMint,\n    CardanoTxCollateralInput: exports.CardanoTxCollateralInput,\n    CardanoTxRequiredSigner: exports.CardanoTxRequiredSigner,\n    CardanoTxReferenceInput: exports.CardanoTxReferenceInput,\n    CardanoTxItemAck: exports.CardanoTxItemAck,\n    CardanoTxAuxiliaryDataSupplement: exports.CardanoTxAuxiliaryDataSupplement,\n    CardanoTxWitnessRequest: exports.CardanoTxWitnessRequest,\n    CardanoTxWitnessResponse: exports.CardanoTxWitnessResponse,\n    CardanoTxHostAck: exports.CardanoTxHostAck,\n    CardanoTxBodyHash: exports.CardanoTxBodyHash,\n    CardanoSignTxFinished: exports.CardanoSignTxFinished,\n    Success: exports.Success,\n    Failure: exports.Failure,\n    ButtonRequest: exports.ButtonRequest,\n    ButtonAck: exports.ButtonAck,\n    PinMatrixRequest: exports.PinMatrixRequest,\n    PinMatrixAck: exports.PinMatrixAck,\n    PassphraseRequest: exports.PassphraseRequest,\n    PassphraseAck: exports.PassphraseAck,\n    Deprecated_PassphraseStateRequest: exports.Deprecated_PassphraseStateRequest,\n    Deprecated_PassphraseStateAck: exports.Deprecated_PassphraseStateAck,\n    CipherKeyValue: exports.CipherKeyValue,\n    CipheredKeyValue: exports.CipheredKeyValue,\n    IdentityType: exports.IdentityType,\n    SignIdentity: exports.SignIdentity,\n    SignedIdentity: exports.SignedIdentity,\n    GetECDHSessionKey: exports.GetECDHSessionKey,\n    ECDHSessionKey: exports.ECDHSessionKey,\n    DebugLinkResetDebugEvents: exports.DebugLinkResetDebugEvents,\n    EosGetPublicKey: exports.EosGetPublicKey,\n    EosPublicKey: exports.EosPublicKey,\n    EosTxHeader: exports.EosTxHeader,\n    EosSignTx: exports.EosSignTx,\n    EosTxActionRequest: exports.EosTxActionRequest,\n    EosAsset: exports.EosAsset,\n    EosPermissionLevel: exports.EosPermissionLevel,\n    EosAuthorizationKey: exports.EosAuthorizationKey,\n    EosAuthorizationAccount: exports.EosAuthorizationAccount,\n    EosAuthorizationWait: exports.EosAuthorizationWait,\n    EosAuthorization: exports.EosAuthorization,\n    EosActionCommon: exports.EosActionCommon,\n    EosActionTransfer: exports.EosActionTransfer,\n    EosActionDelegate: exports.EosActionDelegate,\n    EosActionUndelegate: exports.EosActionUndelegate,\n    EosActionRefund: exports.EosActionRefund,\n    EosActionBuyRam: exports.EosActionBuyRam,\n    EosActionBuyRamBytes: exports.EosActionBuyRamBytes,\n    EosActionSellRam: exports.EosActionSellRam,\n    EosActionVoteProducer: exports.EosActionVoteProducer,\n    EosActionUpdateAuth: exports.EosActionUpdateAuth,\n    EosActionDeleteAuth: exports.EosActionDeleteAuth,\n    EosActionLinkAuth: exports.EosActionLinkAuth,\n    EosActionUnlinkAuth: exports.EosActionUnlinkAuth,\n    EosActionNewAccount: exports.EosActionNewAccount,\n    EosActionUnknown: exports.EosActionUnknown,\n    EosTxActionAck: exports.EosTxActionAck,\n    EosSignedTx: exports.EosSignedTx,\n    EthereumNetworkInfo: exports.EthereumNetworkInfo,\n    EthereumTokenInfo: exports.EthereumTokenInfo,\n    EthereumDefinitions: exports.EthereumDefinitions,\n    EthereumSignTypedData: exports.EthereumSignTypedData,\n    EthereumTypedDataStructRequest: exports.EthereumTypedDataStructRequest,\n    EthereumFieldType: exports.EthereumFieldType,\n    EthereumStructMember: exports.EthereumStructMember,\n    EthereumTypedDataStructAck: exports.EthereumTypedDataStructAck,\n    EthereumTypedDataValueRequest: exports.EthereumTypedDataValueRequest,\n    EthereumTypedDataValueAck: exports.EthereumTypedDataValueAck,\n    EthereumGetPublicKey: exports.EthereumGetPublicKey,\n    EthereumPublicKey: exports.EthereumPublicKey,\n    EthereumGetAddress: exports.EthereumGetAddress,\n    EthereumAddress: exports.EthereumAddress,\n    EthereumSignTx: exports.EthereumSignTx,\n    EthereumAccessList: exports.EthereumAccessList,\n    EthereumSignTxEIP1559: exports.EthereumSignTxEIP1559,\n    EthereumTxRequest: exports.EthereumTxRequest,\n    EthereumTxAck: exports.EthereumTxAck,\n    EthereumSignMessage: exports.EthereumSignMessage,\n    EthereumMessageSignature: exports.EthereumMessageSignature,\n    EthereumVerifyMessage: exports.EthereumVerifyMessage,\n    EthereumSignTypedHash: exports.EthereumSignTypedHash,\n    EthereumTypedDataSignature: exports.EthereumTypedDataSignature,\n    Initialize: exports.Initialize,\n    GetFeatures: exports.GetFeatures,\n    Features: exports.Features,\n    LockDevice: exports.LockDevice,\n    SetBusy: exports.SetBusy,\n    EndSession: exports.EndSession,\n    ApplySettings: exports.ApplySettings,\n    ChangeLanguage: exports.ChangeLanguage,\n    TranslationDataRequest: exports.TranslationDataRequest,\n    TranslationDataAck: exports.TranslationDataAck,\n    ApplyFlags: exports.ApplyFlags,\n    ChangePin: exports.ChangePin,\n    ChangeWipeCode: exports.ChangeWipeCode,\n    SdProtect: exports.SdProtect,\n    Ping: exports.Ping,\n    Cancel: exports.Cancel,\n    GetEntropy: exports.GetEntropy,\n    Entropy: exports.Entropy,\n    GetFirmwareHash: exports.GetFirmwareHash,\n    FirmwareHash: exports.FirmwareHash,\n    AuthenticateDevice: exports.AuthenticateDevice,\n    AuthenticityProof: exports.AuthenticityProof,\n    WipeDevice: exports.WipeDevice,\n    ResetDevice: exports.ResetDevice,\n    BackupDevice: exports.BackupDevice,\n    EntropyRequest: exports.EntropyRequest,\n    EntropyAck: exports.EntropyAck,\n    RecoveryDevice: exports.RecoveryDevice,\n    WordRequest: exports.WordRequest,\n    WordAck: exports.WordAck,\n    SetU2FCounter: exports.SetU2FCounter,\n    GetNextU2FCounter: exports.GetNextU2FCounter,\n    NextU2FCounter: exports.NextU2FCounter,\n    DoPreauthorized: exports.DoPreauthorized,\n    PreauthorizedRequest: exports.PreauthorizedRequest,\n    CancelAuthorization: exports.CancelAuthorization,\n    RebootToBootloader: exports.RebootToBootloader,\n    GetNonce: exports.GetNonce,\n    Nonce: exports.Nonce,\n    UnlockPath: exports.UnlockPath,\n    UnlockedPathRequest: exports.UnlockedPathRequest,\n    ShowDeviceTutorial: exports.ShowDeviceTutorial,\n    UnlockBootloader: exports.UnlockBootloader,\n    NEMGetAddress: exports.NEMGetAddress,\n    NEMAddress: exports.NEMAddress,\n    NEMTransactionCommon: exports.NEMTransactionCommon,\n    NEMMosaic: exports.NEMMosaic,\n    NEMTransfer: exports.NEMTransfer,\n    NEMProvisionNamespace: exports.NEMProvisionNamespace,\n    NEMMosaicDefinition: exports.NEMMosaicDefinition,\n    NEMMosaicCreation: exports.NEMMosaicCreation,\n    NEMMosaicSupplyChange: exports.NEMMosaicSupplyChange,\n    NEMCosignatoryModification: exports.NEMCosignatoryModification,\n    NEMAggregateModification: exports.NEMAggregateModification,\n    NEMImportanceTransfer: exports.NEMImportanceTransfer,\n    NEMSignTx: exports.NEMSignTx,\n    NEMSignedTx: exports.NEMSignedTx,\n    NEMDecryptMessage: exports.NEMDecryptMessage,\n    NEMDecryptedMessage: exports.NEMDecryptedMessage,\n    experimental_message: exports.experimental_message,\n    experimental_field: exports.experimental_field,\n    RippleGetAddress: exports.RippleGetAddress,\n    RippleAddress: exports.RippleAddress,\n    RipplePayment: exports.RipplePayment,\n    RippleSignTx: exports.RippleSignTx,\n    RippleSignedTx: exports.RippleSignedTx,\n    SolanaGetPublicKey: exports.SolanaGetPublicKey,\n    SolanaPublicKey: exports.SolanaPublicKey,\n    SolanaGetAddress: exports.SolanaGetAddress,\n    SolanaAddress: exports.SolanaAddress,\n    SolanaTxTokenAccountInfo: exports.SolanaTxTokenAccountInfo,\n    SolanaTxAdditionalInfo: exports.SolanaTxAdditionalInfo,\n    SolanaSignTx: exports.SolanaSignTx,\n    SolanaTxSignature: exports.SolanaTxSignature,\n    StellarAsset: exports.StellarAsset,\n    StellarGetAddress: exports.StellarGetAddress,\n    StellarAddress: exports.StellarAddress,\n    StellarSignTx: exports.StellarSignTx,\n    StellarTxOpRequest: exports.StellarTxOpRequest,\n    StellarPaymentOp: exports.StellarPaymentOp,\n    StellarCreateAccountOp: exports.StellarCreateAccountOp,\n    StellarPathPaymentStrictReceiveOp: exports.StellarPathPaymentStrictReceiveOp,\n    StellarPathPaymentStrictSendOp: exports.StellarPathPaymentStrictSendOp,\n    StellarManageSellOfferOp: exports.StellarManageSellOfferOp,\n    StellarManageBuyOfferOp: exports.StellarManageBuyOfferOp,\n    StellarCreatePassiveSellOfferOp: exports.StellarCreatePassiveSellOfferOp,\n    StellarSetOptionsOp: exports.StellarSetOptionsOp,\n    StellarChangeTrustOp: exports.StellarChangeTrustOp,\n    StellarAllowTrustOp: exports.StellarAllowTrustOp,\n    StellarAccountMergeOp: exports.StellarAccountMergeOp,\n    StellarManageDataOp: exports.StellarManageDataOp,\n    StellarBumpSequenceOp: exports.StellarBumpSequenceOp,\n    StellarClaimClaimableBalanceOp: exports.StellarClaimClaimableBalanceOp,\n    StellarSignedTx: exports.StellarSignedTx,\n    TezosGetAddress: exports.TezosGetAddress,\n    TezosAddress: exports.TezosAddress,\n    TezosGetPublicKey: exports.TezosGetPublicKey,\n    TezosPublicKey: exports.TezosPublicKey,\n    TezosContractID: exports.TezosContractID,\n    TezosRevealOp: exports.TezosRevealOp,\n    TezosManagerTransfer: exports.TezosManagerTransfer,\n    TezosParametersManager: exports.TezosParametersManager,\n    TezosTransactionOp: exports.TezosTransactionOp,\n    TezosOriginationOp: exports.TezosOriginationOp,\n    TezosDelegationOp: exports.TezosDelegationOp,\n    TezosProposalOp: exports.TezosProposalOp,\n    TezosBallotOp: exports.TezosBallotOp,\n    TezosSignTx: exports.TezosSignTx,\n    TezosSignedTx: exports.TezosSignedTx,\n});\n//# sourceMappingURL=messages-schema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/protobuf/lib/messages-schema.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/protobuf/lib/messages.js":
/*!*******************************************************!*\
  !*** ./node_modules/@trezor/protobuf/lib/messages.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TezosBallotType = exports.TezosContractType = exports.StellarSignerType = exports.StellarMemoType = exports.StellarAssetType = exports.NEMImportanceTransferMode = exports.NEMModificationType = exports.NEMSupplyChangeType = exports.NEMMosaicLevy = exports.MoneroNetworkType = exports.BootCommand = exports.Enum_WordRequestType = exports.RecoveryDeviceType = exports.SdProtectOperationType = exports.Enum_Capability = exports.Enum_HomescreenFormat = exports.Enum_SafetyCheckLevel = exports.Enum_BackupType = exports.EthereumDataType = exports.EthereumDefinitionType = exports.DebugPhysicalButton = exports.DebugButton = exports.Enum_PinMatrixRequestType = exports.Enum_ButtonRequestType = exports.FailureType = exports.CardanoTxWitnessType = exports.CardanoTxSigningMode = exports.CardanoCVoteRegistrationFormat = exports.CardanoTxAuxiliaryDataSupplementType = exports.CardanoPoolRelayType = exports.CardanoCertificateType = exports.CardanoTxOutputSerializationFormat = exports.CardanoNativeScriptHashDisplayFormat = exports.CardanoNativeScriptType = exports.CardanoAddressType = exports.CardanoDerivationType = exports.Enum_RequestType = exports.AmountUnit = exports.DecredStakingSpendType = exports.Enum_OutputScriptType = exports.Enum_InputScriptType = exports.BinanceTimeInForce = exports.BinanceOrderSide = exports.BinanceOrderType = exports.DeviceModelInternal = void 0;\nvar DeviceModelInternal;\n(function (DeviceModelInternal) {\n    DeviceModelInternal[\"T1B1\"] = \"T1B1\";\n    DeviceModelInternal[\"T2T1\"] = \"T2T1\";\n    DeviceModelInternal[\"T2B1\"] = \"T2B1\";\n})(DeviceModelInternal || (exports.DeviceModelInternal = DeviceModelInternal = {}));\nvar BinanceOrderType;\n(function (BinanceOrderType) {\n    BinanceOrderType[BinanceOrderType[\"OT_UNKNOWN\"] = 0] = \"OT_UNKNOWN\";\n    BinanceOrderType[BinanceOrderType[\"MARKET\"] = 1] = \"MARKET\";\n    BinanceOrderType[BinanceOrderType[\"LIMIT\"] = 2] = \"LIMIT\";\n    BinanceOrderType[BinanceOrderType[\"OT_RESERVED\"] = 3] = \"OT_RESERVED\";\n})(BinanceOrderType || (exports.BinanceOrderType = BinanceOrderType = {}));\nvar BinanceOrderSide;\n(function (BinanceOrderSide) {\n    BinanceOrderSide[BinanceOrderSide[\"SIDE_UNKNOWN\"] = 0] = \"SIDE_UNKNOWN\";\n    BinanceOrderSide[BinanceOrderSide[\"BUY\"] = 1] = \"BUY\";\n    BinanceOrderSide[BinanceOrderSide[\"SELL\"] = 2] = \"SELL\";\n})(BinanceOrderSide || (exports.BinanceOrderSide = BinanceOrderSide = {}));\nvar BinanceTimeInForce;\n(function (BinanceTimeInForce) {\n    BinanceTimeInForce[BinanceTimeInForce[\"TIF_UNKNOWN\"] = 0] = \"TIF_UNKNOWN\";\n    BinanceTimeInForce[BinanceTimeInForce[\"GTE\"] = 1] = \"GTE\";\n    BinanceTimeInForce[BinanceTimeInForce[\"TIF_RESERVED\"] = 2] = \"TIF_RESERVED\";\n    BinanceTimeInForce[BinanceTimeInForce[\"IOC\"] = 3] = \"IOC\";\n})(BinanceTimeInForce || (exports.BinanceTimeInForce = BinanceTimeInForce = {}));\nvar Enum_InputScriptType;\n(function (Enum_InputScriptType) {\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDADDRESS\"] = 0] = \"SPENDADDRESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDMULTISIG\"] = 1] = \"SPENDMULTISIG\";\n    Enum_InputScriptType[Enum_InputScriptType[\"EXTERNAL\"] = 2] = \"EXTERNAL\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDWITNESS\"] = 3] = \"SPENDWITNESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDP2SHWITNESS\"] = 4] = \"SPENDP2SHWITNESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDTAPROOT\"] = 5] = \"SPENDTAPROOT\";\n})(Enum_InputScriptType || (exports.Enum_InputScriptType = Enum_InputScriptType = {}));\nvar Enum_OutputScriptType;\n(function (Enum_OutputScriptType) {\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOADDRESS\"] = 0] = \"PAYTOADDRESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOSCRIPTHASH\"] = 1] = \"PAYTOSCRIPTHASH\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOMULTISIG\"] = 2] = \"PAYTOMULTISIG\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOOPRETURN\"] = 3] = \"PAYTOOPRETURN\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOWITNESS\"] = 4] = \"PAYTOWITNESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOP2SHWITNESS\"] = 5] = \"PAYTOP2SHWITNESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOTAPROOT\"] = 6] = \"PAYTOTAPROOT\";\n})(Enum_OutputScriptType || (exports.Enum_OutputScriptType = Enum_OutputScriptType = {}));\nvar DecredStakingSpendType;\n(function (DecredStakingSpendType) {\n    DecredStakingSpendType[DecredStakingSpendType[\"SSGen\"] = 0] = \"SSGen\";\n    DecredStakingSpendType[DecredStakingSpendType[\"SSRTX\"] = 1] = \"SSRTX\";\n})(DecredStakingSpendType || (exports.DecredStakingSpendType = DecredStakingSpendType = {}));\nvar AmountUnit;\n(function (AmountUnit) {\n    AmountUnit[AmountUnit[\"BITCOIN\"] = 0] = \"BITCOIN\";\n    AmountUnit[AmountUnit[\"MILLIBITCOIN\"] = 1] = \"MILLIBITCOIN\";\n    AmountUnit[AmountUnit[\"MICROBITCOIN\"] = 2] = \"MICROBITCOIN\";\n    AmountUnit[AmountUnit[\"SATOSHI\"] = 3] = \"SATOSHI\";\n})(AmountUnit || (exports.AmountUnit = AmountUnit = {}));\nvar Enum_RequestType;\n(function (Enum_RequestType) {\n    Enum_RequestType[Enum_RequestType[\"TXINPUT\"] = 0] = \"TXINPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXOUTPUT\"] = 1] = \"TXOUTPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXMETA\"] = 2] = \"TXMETA\";\n    Enum_RequestType[Enum_RequestType[\"TXFINISHED\"] = 3] = \"TXFINISHED\";\n    Enum_RequestType[Enum_RequestType[\"TXEXTRADATA\"] = 4] = \"TXEXTRADATA\";\n    Enum_RequestType[Enum_RequestType[\"TXORIGINPUT\"] = 5] = \"TXORIGINPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXORIGOUTPUT\"] = 6] = \"TXORIGOUTPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXPAYMENTREQ\"] = 7] = \"TXPAYMENTREQ\";\n})(Enum_RequestType || (exports.Enum_RequestType = Enum_RequestType = {}));\nvar CardanoDerivationType;\n(function (CardanoDerivationType) {\n    CardanoDerivationType[CardanoDerivationType[\"LEDGER\"] = 0] = \"LEDGER\";\n    CardanoDerivationType[CardanoDerivationType[\"ICARUS\"] = 1] = \"ICARUS\";\n    CardanoDerivationType[CardanoDerivationType[\"ICARUS_TREZOR\"] = 2] = \"ICARUS_TREZOR\";\n})(CardanoDerivationType || (exports.CardanoDerivationType = CardanoDerivationType = {}));\nvar CardanoAddressType;\n(function (CardanoAddressType) {\n    CardanoAddressType[CardanoAddressType[\"BASE\"] = 0] = \"BASE\";\n    CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_KEY\"] = 1] = \"BASE_SCRIPT_KEY\";\n    CardanoAddressType[CardanoAddressType[\"BASE_KEY_SCRIPT\"] = 2] = \"BASE_KEY_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_SCRIPT\"] = 3] = \"BASE_SCRIPT_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"POINTER\"] = 4] = \"POINTER\";\n    CardanoAddressType[CardanoAddressType[\"POINTER_SCRIPT\"] = 5] = \"POINTER_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"ENTERPRISE\"] = 6] = \"ENTERPRISE\";\n    CardanoAddressType[CardanoAddressType[\"ENTERPRISE_SCRIPT\"] = 7] = \"ENTERPRISE_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"BYRON\"] = 8] = \"BYRON\";\n    CardanoAddressType[CardanoAddressType[\"REWARD\"] = 14] = \"REWARD\";\n    CardanoAddressType[CardanoAddressType[\"REWARD_SCRIPT\"] = 15] = \"REWARD_SCRIPT\";\n})(CardanoAddressType || (exports.CardanoAddressType = CardanoAddressType = {}));\nvar CardanoNativeScriptType;\n(function (CardanoNativeScriptType) {\n    CardanoNativeScriptType[CardanoNativeScriptType[\"PUB_KEY\"] = 0] = \"PUB_KEY\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"ALL\"] = 1] = \"ALL\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"ANY\"] = 2] = \"ANY\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"N_OF_K\"] = 3] = \"N_OF_K\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_BEFORE\"] = 4] = \"INVALID_BEFORE\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_HEREAFTER\"] = 5] = \"INVALID_HEREAFTER\";\n})(CardanoNativeScriptType || (exports.CardanoNativeScriptType = CardanoNativeScriptType = {}));\nvar CardanoNativeScriptHashDisplayFormat;\n(function (CardanoNativeScriptHashDisplayFormat) {\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"HIDE\"] = 0] = \"HIDE\";\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"BECH32\"] = 1] = \"BECH32\";\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"POLICY_ID\"] = 2] = \"POLICY_ID\";\n})(CardanoNativeScriptHashDisplayFormat || (exports.CardanoNativeScriptHashDisplayFormat = CardanoNativeScriptHashDisplayFormat = {}));\nvar CardanoTxOutputSerializationFormat;\n(function (CardanoTxOutputSerializationFormat) {\n    CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"ARRAY_LEGACY\"] = 0] = \"ARRAY_LEGACY\";\n    CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"MAP_BABBAGE\"] = 1] = \"MAP_BABBAGE\";\n})(CardanoTxOutputSerializationFormat || (exports.CardanoTxOutputSerializationFormat = CardanoTxOutputSerializationFormat = {}));\nvar CardanoCertificateType;\n(function (CardanoCertificateType) {\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_REGISTRATION\"] = 0] = \"STAKE_REGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DEREGISTRATION\"] = 1] = \"STAKE_DEREGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DELEGATION\"] = 2] = \"STAKE_DELEGATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_POOL_REGISTRATION\"] = 3] = \"STAKE_POOL_REGISTRATION\";\n})(CardanoCertificateType || (exports.CardanoCertificateType = CardanoCertificateType = {}));\nvar CardanoPoolRelayType;\n(function (CardanoPoolRelayType) {\n    CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_IP\"] = 0] = \"SINGLE_HOST_IP\";\n    CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_NAME\"] = 1] = \"SINGLE_HOST_NAME\";\n    CardanoPoolRelayType[CardanoPoolRelayType[\"MULTIPLE_HOST_NAME\"] = 2] = \"MULTIPLE_HOST_NAME\";\n})(CardanoPoolRelayType || (exports.CardanoPoolRelayType = CardanoPoolRelayType = {}));\nvar CardanoTxAuxiliaryDataSupplementType;\n(function (CardanoTxAuxiliaryDataSupplementType) {\n    CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"NONE\"] = 0] = \"NONE\";\n    CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"CVOTE_REGISTRATION_SIGNATURE\"] = 1] = \"CVOTE_REGISTRATION_SIGNATURE\";\n})(CardanoTxAuxiliaryDataSupplementType || (exports.CardanoTxAuxiliaryDataSupplementType = CardanoTxAuxiliaryDataSupplementType = {}));\nvar CardanoCVoteRegistrationFormat;\n(function (CardanoCVoteRegistrationFormat) {\n    CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP15\"] = 0] = \"CIP15\";\n    CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP36\"] = 1] = \"CIP36\";\n})(CardanoCVoteRegistrationFormat || (exports.CardanoCVoteRegistrationFormat = CardanoCVoteRegistrationFormat = {}));\nvar CardanoTxSigningMode;\n(function (CardanoTxSigningMode) {\n    CardanoTxSigningMode[CardanoTxSigningMode[\"ORDINARY_TRANSACTION\"] = 0] = \"ORDINARY_TRANSACTION\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"POOL_REGISTRATION_AS_OWNER\"] = 1] = \"POOL_REGISTRATION_AS_OWNER\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"MULTISIG_TRANSACTION\"] = 2] = \"MULTISIG_TRANSACTION\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"PLUTUS_TRANSACTION\"] = 3] = \"PLUTUS_TRANSACTION\";\n})(CardanoTxSigningMode || (exports.CardanoTxSigningMode = CardanoTxSigningMode = {}));\nvar CardanoTxWitnessType;\n(function (CardanoTxWitnessType) {\n    CardanoTxWitnessType[CardanoTxWitnessType[\"BYRON_WITNESS\"] = 0] = \"BYRON_WITNESS\";\n    CardanoTxWitnessType[CardanoTxWitnessType[\"SHELLEY_WITNESS\"] = 1] = \"SHELLEY_WITNESS\";\n})(CardanoTxWitnessType || (exports.CardanoTxWitnessType = CardanoTxWitnessType = {}));\nvar FailureType;\n(function (FailureType) {\n    FailureType[FailureType[\"Failure_UnexpectedMessage\"] = 1] = \"Failure_UnexpectedMessage\";\n    FailureType[FailureType[\"Failure_ButtonExpected\"] = 2] = \"Failure_ButtonExpected\";\n    FailureType[FailureType[\"Failure_DataError\"] = 3] = \"Failure_DataError\";\n    FailureType[FailureType[\"Failure_ActionCancelled\"] = 4] = \"Failure_ActionCancelled\";\n    FailureType[FailureType[\"Failure_PinExpected\"] = 5] = \"Failure_PinExpected\";\n    FailureType[FailureType[\"Failure_PinCancelled\"] = 6] = \"Failure_PinCancelled\";\n    FailureType[FailureType[\"Failure_PinInvalid\"] = 7] = \"Failure_PinInvalid\";\n    FailureType[FailureType[\"Failure_InvalidSignature\"] = 8] = \"Failure_InvalidSignature\";\n    FailureType[FailureType[\"Failure_ProcessError\"] = 9] = \"Failure_ProcessError\";\n    FailureType[FailureType[\"Failure_NotEnoughFunds\"] = 10] = \"Failure_NotEnoughFunds\";\n    FailureType[FailureType[\"Failure_NotInitialized\"] = 11] = \"Failure_NotInitialized\";\n    FailureType[FailureType[\"Failure_PinMismatch\"] = 12] = \"Failure_PinMismatch\";\n    FailureType[FailureType[\"Failure_WipeCodeMismatch\"] = 13] = \"Failure_WipeCodeMismatch\";\n    FailureType[FailureType[\"Failure_InvalidSession\"] = 14] = \"Failure_InvalidSession\";\n    FailureType[FailureType[\"Failure_FirmwareError\"] = 99] = \"Failure_FirmwareError\";\n})(FailureType || (exports.FailureType = FailureType = {}));\nvar Enum_ButtonRequestType;\n(function (Enum_ButtonRequestType) {\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Other\"] = 1] = \"ButtonRequest_Other\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FeeOverThreshold\"] = 2] = \"ButtonRequest_FeeOverThreshold\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmOutput\"] = 3] = \"ButtonRequest_ConfirmOutput\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ResetDevice\"] = 4] = \"ButtonRequest_ResetDevice\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmWord\"] = 5] = \"ButtonRequest_ConfirmWord\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_WipeDevice\"] = 6] = \"ButtonRequest_WipeDevice\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ProtectCall\"] = 7] = \"ButtonRequest_ProtectCall\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_SignTx\"] = 8] = \"ButtonRequest_SignTx\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FirmwareCheck\"] = 9] = \"ButtonRequest_FirmwareCheck\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Address\"] = 10] = \"ButtonRequest_Address\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PublicKey\"] = 11] = \"ButtonRequest_PublicKey\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicWordCount\"] = 12] = \"ButtonRequest_MnemonicWordCount\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicInput\"] = 13] = \"ButtonRequest_MnemonicInput\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"_Deprecated_ButtonRequest_PassphraseType\"] = 14] = \"_Deprecated_ButtonRequest_PassphraseType\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_UnknownDerivationPath\"] = 15] = \"ButtonRequest_UnknownDerivationPath\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_RecoveryHomepage\"] = 16] = \"ButtonRequest_RecoveryHomepage\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Success\"] = 17] = \"ButtonRequest_Success\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Warning\"] = 18] = \"ButtonRequest_Warning\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PassphraseEntry\"] = 19] = \"ButtonRequest_PassphraseEntry\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PinEntry\"] = 20] = \"ButtonRequest_PinEntry\";\n})(Enum_ButtonRequestType || (exports.Enum_ButtonRequestType = Enum_ButtonRequestType = {}));\nvar Enum_PinMatrixRequestType;\n(function (Enum_PinMatrixRequestType) {\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_Current\"] = 1] = \"PinMatrixRequestType_Current\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewFirst\"] = 2] = \"PinMatrixRequestType_NewFirst\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewSecond\"] = 3] = \"PinMatrixRequestType_NewSecond\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeFirst\"] = 4] = \"PinMatrixRequestType_WipeCodeFirst\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeSecond\"] = 5] = \"PinMatrixRequestType_WipeCodeSecond\";\n})(Enum_PinMatrixRequestType || (exports.Enum_PinMatrixRequestType = Enum_PinMatrixRequestType = {}));\nvar DebugButton;\n(function (DebugButton) {\n    DebugButton[DebugButton[\"NO\"] = 0] = \"NO\";\n    DebugButton[DebugButton[\"YES\"] = 1] = \"YES\";\n    DebugButton[DebugButton[\"INFO\"] = 2] = \"INFO\";\n})(DebugButton || (exports.DebugButton = DebugButton = {}));\nvar DebugPhysicalButton;\n(function (DebugPhysicalButton) {\n    DebugPhysicalButton[DebugPhysicalButton[\"LEFT_BTN\"] = 0] = \"LEFT_BTN\";\n    DebugPhysicalButton[DebugPhysicalButton[\"MIDDLE_BTN\"] = 1] = \"MIDDLE_BTN\";\n    DebugPhysicalButton[DebugPhysicalButton[\"RIGHT_BTN\"] = 2] = \"RIGHT_BTN\";\n})(DebugPhysicalButton || (exports.DebugPhysicalButton = DebugPhysicalButton = {}));\nvar EthereumDefinitionType;\n(function (EthereumDefinitionType) {\n    EthereumDefinitionType[EthereumDefinitionType[\"NETWORK\"] = 0] = \"NETWORK\";\n    EthereumDefinitionType[EthereumDefinitionType[\"TOKEN\"] = 1] = \"TOKEN\";\n})(EthereumDefinitionType || (exports.EthereumDefinitionType = EthereumDefinitionType = {}));\nvar EthereumDataType;\n(function (EthereumDataType) {\n    EthereumDataType[EthereumDataType[\"UINT\"] = 1] = \"UINT\";\n    EthereumDataType[EthereumDataType[\"INT\"] = 2] = \"INT\";\n    EthereumDataType[EthereumDataType[\"BYTES\"] = 3] = \"BYTES\";\n    EthereumDataType[EthereumDataType[\"STRING\"] = 4] = \"STRING\";\n    EthereumDataType[EthereumDataType[\"BOOL\"] = 5] = \"BOOL\";\n    EthereumDataType[EthereumDataType[\"ADDRESS\"] = 6] = \"ADDRESS\";\n    EthereumDataType[EthereumDataType[\"ARRAY\"] = 7] = \"ARRAY\";\n    EthereumDataType[EthereumDataType[\"STRUCT\"] = 8] = \"STRUCT\";\n})(EthereumDataType || (exports.EthereumDataType = EthereumDataType = {}));\nvar Enum_BackupType;\n(function (Enum_BackupType) {\n    Enum_BackupType[Enum_BackupType[\"Bip39\"] = 0] = \"Bip39\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Basic\"] = 1] = \"Slip39_Basic\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Advanced\"] = 2] = \"Slip39_Advanced\";\n})(Enum_BackupType || (exports.Enum_BackupType = Enum_BackupType = {}));\nvar Enum_SafetyCheckLevel;\n(function (Enum_SafetyCheckLevel) {\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"Strict\"] = 0] = \"Strict\";\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptAlways\"] = 1] = \"PromptAlways\";\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptTemporarily\"] = 2] = \"PromptTemporarily\";\n})(Enum_SafetyCheckLevel || (exports.Enum_SafetyCheckLevel = Enum_SafetyCheckLevel = {}));\nvar Enum_HomescreenFormat;\n(function (Enum_HomescreenFormat) {\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"Toif\"] = 1] = \"Toif\";\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"Jpeg\"] = 2] = \"Jpeg\";\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"ToiG\"] = 3] = \"ToiG\";\n})(Enum_HomescreenFormat || (exports.Enum_HomescreenFormat = Enum_HomescreenFormat = {}));\nvar Enum_Capability;\n(function (Enum_Capability) {\n    Enum_Capability[Enum_Capability[\"Capability_Bitcoin\"] = 1] = \"Capability_Bitcoin\";\n    Enum_Capability[Enum_Capability[\"Capability_Bitcoin_like\"] = 2] = \"Capability_Bitcoin_like\";\n    Enum_Capability[Enum_Capability[\"Capability_Binance\"] = 3] = \"Capability_Binance\";\n    Enum_Capability[Enum_Capability[\"Capability_Cardano\"] = 4] = \"Capability_Cardano\";\n    Enum_Capability[Enum_Capability[\"Capability_Crypto\"] = 5] = \"Capability_Crypto\";\n    Enum_Capability[Enum_Capability[\"Capability_EOS\"] = 6] = \"Capability_EOS\";\n    Enum_Capability[Enum_Capability[\"Capability_Ethereum\"] = 7] = \"Capability_Ethereum\";\n    Enum_Capability[Enum_Capability[\"Capability_Lisk\"] = 8] = \"Capability_Lisk\";\n    Enum_Capability[Enum_Capability[\"Capability_Monero\"] = 9] = \"Capability_Monero\";\n    Enum_Capability[Enum_Capability[\"Capability_NEM\"] = 10] = \"Capability_NEM\";\n    Enum_Capability[Enum_Capability[\"Capability_Ripple\"] = 11] = \"Capability_Ripple\";\n    Enum_Capability[Enum_Capability[\"Capability_Stellar\"] = 12] = \"Capability_Stellar\";\n    Enum_Capability[Enum_Capability[\"Capability_Tezos\"] = 13] = \"Capability_Tezos\";\n    Enum_Capability[Enum_Capability[\"Capability_U2F\"] = 14] = \"Capability_U2F\";\n    Enum_Capability[Enum_Capability[\"Capability_Shamir\"] = 15] = \"Capability_Shamir\";\n    Enum_Capability[Enum_Capability[\"Capability_ShamirGroups\"] = 16] = \"Capability_ShamirGroups\";\n    Enum_Capability[Enum_Capability[\"Capability_PassphraseEntry\"] = 17] = \"Capability_PassphraseEntry\";\n    Enum_Capability[Enum_Capability[\"Capability_Solana\"] = 18] = \"Capability_Solana\";\n    Enum_Capability[Enum_Capability[\"Capability_Translations\"] = 19] = \"Capability_Translations\";\n})(Enum_Capability || (exports.Enum_Capability = Enum_Capability = {}));\nvar SdProtectOperationType;\n(function (SdProtectOperationType) {\n    SdProtectOperationType[SdProtectOperationType[\"DISABLE\"] = 0] = \"DISABLE\";\n    SdProtectOperationType[SdProtectOperationType[\"ENABLE\"] = 1] = \"ENABLE\";\n    SdProtectOperationType[SdProtectOperationType[\"REFRESH\"] = 2] = \"REFRESH\";\n})(SdProtectOperationType || (exports.SdProtectOperationType = SdProtectOperationType = {}));\nvar RecoveryDeviceType;\n(function (RecoveryDeviceType) {\n    RecoveryDeviceType[RecoveryDeviceType[\"RecoveryDeviceType_ScrambledWords\"] = 0] = \"RecoveryDeviceType_ScrambledWords\";\n    RecoveryDeviceType[RecoveryDeviceType[\"RecoveryDeviceType_Matrix\"] = 1] = \"RecoveryDeviceType_Matrix\";\n})(RecoveryDeviceType || (exports.RecoveryDeviceType = RecoveryDeviceType = {}));\nvar Enum_WordRequestType;\n(function (Enum_WordRequestType) {\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Plain\"] = 0] = \"WordRequestType_Plain\";\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix9\"] = 1] = \"WordRequestType_Matrix9\";\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix6\"] = 2] = \"WordRequestType_Matrix6\";\n})(Enum_WordRequestType || (exports.Enum_WordRequestType = Enum_WordRequestType = {}));\nvar BootCommand;\n(function (BootCommand) {\n    BootCommand[BootCommand[\"STOP_AND_WAIT\"] = 0] = \"STOP_AND_WAIT\";\n    BootCommand[BootCommand[\"INSTALL_UPGRADE\"] = 1] = \"INSTALL_UPGRADE\";\n})(BootCommand || (exports.BootCommand = BootCommand = {}));\nvar MoneroNetworkType;\n(function (MoneroNetworkType) {\n    MoneroNetworkType[MoneroNetworkType[\"MAINNET\"] = 0] = \"MAINNET\";\n    MoneroNetworkType[MoneroNetworkType[\"TESTNET\"] = 1] = \"TESTNET\";\n    MoneroNetworkType[MoneroNetworkType[\"STAGENET\"] = 2] = \"STAGENET\";\n    MoneroNetworkType[MoneroNetworkType[\"FAKECHAIN\"] = 3] = \"FAKECHAIN\";\n})(MoneroNetworkType || (exports.MoneroNetworkType = MoneroNetworkType = {}));\nvar NEMMosaicLevy;\n(function (NEMMosaicLevy) {\n    NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Absolute\"] = 1] = \"MosaicLevy_Absolute\";\n    NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Percentile\"] = 2] = \"MosaicLevy_Percentile\";\n})(NEMMosaicLevy || (exports.NEMMosaicLevy = NEMMosaicLevy = {}));\nvar NEMSupplyChangeType;\n(function (NEMSupplyChangeType) {\n    NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Increase\"] = 1] = \"SupplyChange_Increase\";\n    NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Decrease\"] = 2] = \"SupplyChange_Decrease\";\n})(NEMSupplyChangeType || (exports.NEMSupplyChangeType = NEMSupplyChangeType = {}));\nvar NEMModificationType;\n(function (NEMModificationType) {\n    NEMModificationType[NEMModificationType[\"CosignatoryModification_Add\"] = 1] = \"CosignatoryModification_Add\";\n    NEMModificationType[NEMModificationType[\"CosignatoryModification_Delete\"] = 2] = \"CosignatoryModification_Delete\";\n})(NEMModificationType || (exports.NEMModificationType = NEMModificationType = {}));\nvar NEMImportanceTransferMode;\n(function (NEMImportanceTransferMode) {\n    NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Activate\"] = 1] = \"ImportanceTransfer_Activate\";\n    NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Deactivate\"] = 2] = \"ImportanceTransfer_Deactivate\";\n})(NEMImportanceTransferMode || (exports.NEMImportanceTransferMode = NEMImportanceTransferMode = {}));\nvar StellarAssetType;\n(function (StellarAssetType) {\n    StellarAssetType[StellarAssetType[\"NATIVE\"] = 0] = \"NATIVE\";\n    StellarAssetType[StellarAssetType[\"ALPHANUM4\"] = 1] = \"ALPHANUM4\";\n    StellarAssetType[StellarAssetType[\"ALPHANUM12\"] = 2] = \"ALPHANUM12\";\n})(StellarAssetType || (exports.StellarAssetType = StellarAssetType = {}));\nvar StellarMemoType;\n(function (StellarMemoType) {\n    StellarMemoType[StellarMemoType[\"NONE\"] = 0] = \"NONE\";\n    StellarMemoType[StellarMemoType[\"TEXT\"] = 1] = \"TEXT\";\n    StellarMemoType[StellarMemoType[\"ID\"] = 2] = \"ID\";\n    StellarMemoType[StellarMemoType[\"HASH\"] = 3] = \"HASH\";\n    StellarMemoType[StellarMemoType[\"RETURN\"] = 4] = \"RETURN\";\n})(StellarMemoType || (exports.StellarMemoType = StellarMemoType = {}));\nvar StellarSignerType;\n(function (StellarSignerType) {\n    StellarSignerType[StellarSignerType[\"ACCOUNT\"] = 0] = \"ACCOUNT\";\n    StellarSignerType[StellarSignerType[\"PRE_AUTH\"] = 1] = \"PRE_AUTH\";\n    StellarSignerType[StellarSignerType[\"HASH\"] = 2] = \"HASH\";\n})(StellarSignerType || (exports.StellarSignerType = StellarSignerType = {}));\nvar TezosContractType;\n(function (TezosContractType) {\n    TezosContractType[TezosContractType[\"Implicit\"] = 0] = \"Implicit\";\n    TezosContractType[TezosContractType[\"Originated\"] = 1] = \"Originated\";\n})(TezosContractType || (exports.TezosContractType = TezosContractType = {}));\nvar TezosBallotType;\n(function (TezosBallotType) {\n    TezosBallotType[TezosBallotType[\"Yay\"] = 0] = \"Yay\";\n    TezosBallotType[TezosBallotType[\"Nay\"] = 1] = \"Nay\";\n    TezosBallotType[TezosBallotType[\"Pass\"] = 2] = \"Pass\";\n})(TezosBallotType || (exports.TezosBallotType = TezosBallotType = {}));\n//# sourceMappingURL=messages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvbWVzc2FnZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCLEdBQUcseUJBQXlCLEdBQUcseUJBQXlCLEdBQUcsdUJBQXVCLEdBQUcsd0JBQXdCLEdBQUcsaUNBQWlDLEdBQUcsMkJBQTJCLEdBQUcsMkJBQTJCLEdBQUcscUJBQXFCLEdBQUcseUJBQXlCLEdBQUcsbUJBQW1CLEdBQUcsNEJBQTRCLEdBQUcsMEJBQTBCLEdBQUcsOEJBQThCLEdBQUcsdUJBQXVCLEdBQUcsNkJBQTZCLEdBQUcsNkJBQTZCLEdBQUcsdUJBQXVCLEdBQUcsd0JBQXdCLEdBQUcsOEJBQThCLEdBQUcsMkJBQTJCLEdBQUcsbUJBQW1CLEdBQUcsaUNBQWlDLEdBQUcsOEJBQThCLEdBQUcsbUJBQW1CLEdBQUcsNEJBQTRCLEdBQUcsNEJBQTRCLEdBQUcsc0NBQXNDLEdBQUcsNENBQTRDLEdBQUcsNEJBQTRCLEdBQUcsOEJBQThCLEdBQUcsMENBQTBDLEdBQUcsNENBQTRDLEdBQUcsK0JBQStCLEdBQUcsMEJBQTBCLEdBQUcsNkJBQTZCLEdBQUcsd0JBQXdCLEdBQUcsa0JBQWtCLEdBQUcsOEJBQThCLEdBQUcsNkJBQTZCLEdBQUcsNEJBQTRCLEdBQUcsMEJBQTBCLEdBQUcsd0JBQXdCLEdBQUcsd0JBQXdCLEdBQUcsMkJBQTJCO0FBQzUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwQkFBMEIsMkJBQTJCLDJCQUEyQjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHVCQUF1Qix3QkFBd0Isd0JBQXdCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHVCQUF1Qix3QkFBd0Isd0JBQXdCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMseUJBQXlCLDBCQUEwQiwwQkFBMEI7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMkJBQTJCLDRCQUE0Qiw0QkFBNEI7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0QkFBNEIsNkJBQTZCLDZCQUE2QjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNkJBQTZCLDhCQUE4Qiw4QkFBOEI7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxpQkFBaUIsa0JBQWtCLGtCQUFrQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsdUJBQXVCLHdCQUF3Qix3QkFBd0I7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNEJBQTRCLDZCQUE2Qiw2QkFBNkI7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHlCQUF5QiwwQkFBMEIsMEJBQTBCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QiwrQkFBK0IsK0JBQStCO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDJDQUEyQyw0Q0FBNEMsNENBQTRDO0FBQ3BJO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx5Q0FBeUMsMENBQTBDLDBDQUEwQztBQUM5SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDZCQUE2Qiw4QkFBOEIsOEJBQThCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDJCQUEyQiw0QkFBNEIsNEJBQTRCO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywyQ0FBMkMsNENBQTRDLDRDQUE0QztBQUNwSTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMscUNBQXFDLHNDQUFzQyxzQ0FBc0M7QUFDbEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywyQkFBMkIsNEJBQTRCLDRCQUE0QjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMkJBQTJCLDRCQUE0Qiw0QkFBNEI7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0JBQWtCLG1CQUFtQixtQkFBbUI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDZCQUE2Qiw4QkFBOEIsOEJBQThCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQ0FBZ0MsaUNBQWlDLGlDQUFpQztBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrQkFBa0IsbUJBQW1CLG1CQUFtQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwQkFBMEIsMkJBQTJCLDJCQUEyQjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNkJBQTZCLDhCQUE4Qiw4QkFBOEI7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHVCQUF1Qix3QkFBd0Isd0JBQXdCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNCQUFzQix1QkFBdUIsdUJBQXVCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRCQUE0Qiw2QkFBNkIsNkJBQTZCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRCQUE0Qiw2QkFBNkIsNkJBQTZCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0JBQXNCLHVCQUF1Qix1QkFBdUI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNkJBQTZCLDhCQUE4Qiw4QkFBOEI7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHlCQUF5QiwwQkFBMEIsMEJBQTBCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDJCQUEyQiw0QkFBNEIsNEJBQTRCO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrQkFBa0IsbUJBQW1CLG1CQUFtQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdCQUF3Qix5QkFBeUIseUJBQXlCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvQkFBb0IscUJBQXFCLHFCQUFxQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEJBQTBCLDJCQUEyQiwyQkFBMkI7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBCQUEwQiwyQkFBMkIsMkJBQTJCO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQ0FBZ0MsaUNBQWlDLGlDQUFpQztBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx1QkFBdUIsd0JBQXdCLHdCQUF3QjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0JBQXNCLHVCQUF1Qix1QkFBdUI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0JBQXdCLHlCQUF5Qix5QkFBeUI7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdCQUF3Qix5QkFBeUIseUJBQXlCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNCQUFzQix1QkFBdUIsdUJBQXVCO0FBQ3JFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3Byb3RvYnVmL2xpYi9tZXNzYWdlcy5qcz83NmVjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UZXpvc0JhbGxvdFR5cGUgPSBleHBvcnRzLlRlem9zQ29udHJhY3RUeXBlID0gZXhwb3J0cy5TdGVsbGFyU2lnbmVyVHlwZSA9IGV4cG9ydHMuU3RlbGxhck1lbW9UeXBlID0gZXhwb3J0cy5TdGVsbGFyQXNzZXRUeXBlID0gZXhwb3J0cy5ORU1JbXBvcnRhbmNlVHJhbnNmZXJNb2RlID0gZXhwb3J0cy5ORU1Nb2RpZmljYXRpb25UeXBlID0gZXhwb3J0cy5ORU1TdXBwbHlDaGFuZ2VUeXBlID0gZXhwb3J0cy5ORU1Nb3NhaWNMZXZ5ID0gZXhwb3J0cy5Nb25lcm9OZXR3b3JrVHlwZSA9IGV4cG9ydHMuQm9vdENvbW1hbmQgPSBleHBvcnRzLkVudW1fV29yZFJlcXVlc3RUeXBlID0gZXhwb3J0cy5SZWNvdmVyeURldmljZVR5cGUgPSBleHBvcnRzLlNkUHJvdGVjdE9wZXJhdGlvblR5cGUgPSBleHBvcnRzLkVudW1fQ2FwYWJpbGl0eSA9IGV4cG9ydHMuRW51bV9Ib21lc2NyZWVuRm9ybWF0ID0gZXhwb3J0cy5FbnVtX1NhZmV0eUNoZWNrTGV2ZWwgPSBleHBvcnRzLkVudW1fQmFja3VwVHlwZSA9IGV4cG9ydHMuRXRoZXJldW1EYXRhVHlwZSA9IGV4cG9ydHMuRXRoZXJldW1EZWZpbml0aW9uVHlwZSA9IGV4cG9ydHMuRGVidWdQaHlzaWNhbEJ1dHRvbiA9IGV4cG9ydHMuRGVidWdCdXR0b24gPSBleHBvcnRzLkVudW1fUGluTWF0cml4UmVxdWVzdFR5cGUgPSBleHBvcnRzLkVudW1fQnV0dG9uUmVxdWVzdFR5cGUgPSBleHBvcnRzLkZhaWx1cmVUeXBlID0gZXhwb3J0cy5DYXJkYW5vVHhXaXRuZXNzVHlwZSA9IGV4cG9ydHMuQ2FyZGFub1R4U2lnbmluZ01vZGUgPSBleHBvcnRzLkNhcmRhbm9DVm90ZVJlZ2lzdHJhdGlvbkZvcm1hdCA9IGV4cG9ydHMuQ2FyZGFub1R4QXV4aWxpYXJ5RGF0YVN1cHBsZW1lbnRUeXBlID0gZXhwb3J0cy5DYXJkYW5vUG9vbFJlbGF5VHlwZSA9IGV4cG9ydHMuQ2FyZGFub0NlcnRpZmljYXRlVHlwZSA9IGV4cG9ydHMuQ2FyZGFub1R4T3V0cHV0U2VyaWFsaXphdGlvbkZvcm1hdCA9IGV4cG9ydHMuQ2FyZGFub05hdGl2ZVNjcmlwdEhhc2hEaXNwbGF5Rm9ybWF0ID0gZXhwb3J0cy5DYXJkYW5vTmF0aXZlU2NyaXB0VHlwZSA9IGV4cG9ydHMuQ2FyZGFub0FkZHJlc3NUeXBlID0gZXhwb3J0cy5DYXJkYW5vRGVyaXZhdGlvblR5cGUgPSBleHBvcnRzLkVudW1fUmVxdWVzdFR5cGUgPSBleHBvcnRzLkFtb3VudFVuaXQgPSBleHBvcnRzLkRlY3JlZFN0YWtpbmdTcGVuZFR5cGUgPSBleHBvcnRzLkVudW1fT3V0cHV0U2NyaXB0VHlwZSA9IGV4cG9ydHMuRW51bV9JbnB1dFNjcmlwdFR5cGUgPSBleHBvcnRzLkJpbmFuY2VUaW1lSW5Gb3JjZSA9IGV4cG9ydHMuQmluYW5jZU9yZGVyU2lkZSA9IGV4cG9ydHMuQmluYW5jZU9yZGVyVHlwZSA9IGV4cG9ydHMuRGV2aWNlTW9kZWxJbnRlcm5hbCA9IHZvaWQgMDtcbnZhciBEZXZpY2VNb2RlbEludGVybmFsO1xuKGZ1bmN0aW9uIChEZXZpY2VNb2RlbEludGVybmFsKSB7XG4gICAgRGV2aWNlTW9kZWxJbnRlcm5hbFtcIlQxQjFcIl0gPSBcIlQxQjFcIjtcbiAgICBEZXZpY2VNb2RlbEludGVybmFsW1wiVDJUMVwiXSA9IFwiVDJUMVwiO1xuICAgIERldmljZU1vZGVsSW50ZXJuYWxbXCJUMkIxXCJdID0gXCJUMkIxXCI7XG59KShEZXZpY2VNb2RlbEludGVybmFsIHx8IChleHBvcnRzLkRldmljZU1vZGVsSW50ZXJuYWwgPSBEZXZpY2VNb2RlbEludGVybmFsID0ge30pKTtcbnZhciBCaW5hbmNlT3JkZXJUeXBlO1xuKGZ1bmN0aW9uIChCaW5hbmNlT3JkZXJUeXBlKSB7XG4gICAgQmluYW5jZU9yZGVyVHlwZVtCaW5hbmNlT3JkZXJUeXBlW1wiT1RfVU5LTk9XTlwiXSA9IDBdID0gXCJPVF9VTktOT1dOXCI7XG4gICAgQmluYW5jZU9yZGVyVHlwZVtCaW5hbmNlT3JkZXJUeXBlW1wiTUFSS0VUXCJdID0gMV0gPSBcIk1BUktFVFwiO1xuICAgIEJpbmFuY2VPcmRlclR5cGVbQmluYW5jZU9yZGVyVHlwZVtcIkxJTUlUXCJdID0gMl0gPSBcIkxJTUlUXCI7XG4gICAgQmluYW5jZU9yZGVyVHlwZVtCaW5hbmNlT3JkZXJUeXBlW1wiT1RfUkVTRVJWRURcIl0gPSAzXSA9IFwiT1RfUkVTRVJWRURcIjtcbn0pKEJpbmFuY2VPcmRlclR5cGUgfHwgKGV4cG9ydHMuQmluYW5jZU9yZGVyVHlwZSA9IEJpbmFuY2VPcmRlclR5cGUgPSB7fSkpO1xudmFyIEJpbmFuY2VPcmRlclNpZGU7XG4oZnVuY3Rpb24gKEJpbmFuY2VPcmRlclNpZGUpIHtcbiAgICBCaW5hbmNlT3JkZXJTaWRlW0JpbmFuY2VPcmRlclNpZGVbXCJTSURFX1VOS05PV05cIl0gPSAwXSA9IFwiU0lERV9VTktOT1dOXCI7XG4gICAgQmluYW5jZU9yZGVyU2lkZVtCaW5hbmNlT3JkZXJTaWRlW1wiQlVZXCJdID0gMV0gPSBcIkJVWVwiO1xuICAgIEJpbmFuY2VPcmRlclNpZGVbQmluYW5jZU9yZGVyU2lkZVtcIlNFTExcIl0gPSAyXSA9IFwiU0VMTFwiO1xufSkoQmluYW5jZU9yZGVyU2lkZSB8fCAoZXhwb3J0cy5CaW5hbmNlT3JkZXJTaWRlID0gQmluYW5jZU9yZGVyU2lkZSA9IHt9KSk7XG52YXIgQmluYW5jZVRpbWVJbkZvcmNlO1xuKGZ1bmN0aW9uIChCaW5hbmNlVGltZUluRm9yY2UpIHtcbiAgICBCaW5hbmNlVGltZUluRm9yY2VbQmluYW5jZVRpbWVJbkZvcmNlW1wiVElGX1VOS05PV05cIl0gPSAwXSA9IFwiVElGX1VOS05PV05cIjtcbiAgICBCaW5hbmNlVGltZUluRm9yY2VbQmluYW5jZVRpbWVJbkZvcmNlW1wiR1RFXCJdID0gMV0gPSBcIkdURVwiO1xuICAgIEJpbmFuY2VUaW1lSW5Gb3JjZVtCaW5hbmNlVGltZUluRm9yY2VbXCJUSUZfUkVTRVJWRURcIl0gPSAyXSA9IFwiVElGX1JFU0VSVkVEXCI7XG4gICAgQmluYW5jZVRpbWVJbkZvcmNlW0JpbmFuY2VUaW1lSW5Gb3JjZVtcIklPQ1wiXSA9IDNdID0gXCJJT0NcIjtcbn0pKEJpbmFuY2VUaW1lSW5Gb3JjZSB8fCAoZXhwb3J0cy5CaW5hbmNlVGltZUluRm9yY2UgPSBCaW5hbmNlVGltZUluRm9yY2UgPSB7fSkpO1xudmFyIEVudW1fSW5wdXRTY3JpcHRUeXBlO1xuKGZ1bmN0aW9uIChFbnVtX0lucHV0U2NyaXB0VHlwZSkge1xuICAgIEVudW1fSW5wdXRTY3JpcHRUeXBlW0VudW1fSW5wdXRTY3JpcHRUeXBlW1wiU1BFTkRBRERSRVNTXCJdID0gMF0gPSBcIlNQRU5EQUREUkVTU1wiO1xuICAgIEVudW1fSW5wdXRTY3JpcHRUeXBlW0VudW1fSW5wdXRTY3JpcHRUeXBlW1wiU1BFTkRNVUxUSVNJR1wiXSA9IDFdID0gXCJTUEVORE1VTFRJU0lHXCI7XG4gICAgRW51bV9JbnB1dFNjcmlwdFR5cGVbRW51bV9JbnB1dFNjcmlwdFR5cGVbXCJFWFRFUk5BTFwiXSA9IDJdID0gXCJFWFRFUk5BTFwiO1xuICAgIEVudW1fSW5wdXRTY3JpcHRUeXBlW0VudW1fSW5wdXRTY3JpcHRUeXBlW1wiU1BFTkRXSVRORVNTXCJdID0gM10gPSBcIlNQRU5EV0lUTkVTU1wiO1xuICAgIEVudW1fSW5wdXRTY3JpcHRUeXBlW0VudW1fSW5wdXRTY3JpcHRUeXBlW1wiU1BFTkRQMlNIV0lUTkVTU1wiXSA9IDRdID0gXCJTUEVORFAyU0hXSVRORVNTXCI7XG4gICAgRW51bV9JbnB1dFNjcmlwdFR5cGVbRW51bV9JbnB1dFNjcmlwdFR5cGVbXCJTUEVORFRBUFJPT1RcIl0gPSA1XSA9IFwiU1BFTkRUQVBST09UXCI7XG59KShFbnVtX0lucHV0U2NyaXB0VHlwZSB8fCAoZXhwb3J0cy5FbnVtX0lucHV0U2NyaXB0VHlwZSA9IEVudW1fSW5wdXRTY3JpcHRUeXBlID0ge30pKTtcbnZhciBFbnVtX091dHB1dFNjcmlwdFR5cGU7XG4oZnVuY3Rpb24gKEVudW1fT3V0cHV0U2NyaXB0VHlwZSkge1xuICAgIEVudW1fT3V0cHV0U2NyaXB0VHlwZVtFbnVtX091dHB1dFNjcmlwdFR5cGVbXCJQQVlUT0FERFJFU1NcIl0gPSAwXSA9IFwiUEFZVE9BRERSRVNTXCI7XG4gICAgRW51bV9PdXRwdXRTY3JpcHRUeXBlW0VudW1fT3V0cHV0U2NyaXB0VHlwZVtcIlBBWVRPU0NSSVBUSEFTSFwiXSA9IDFdID0gXCJQQVlUT1NDUklQVEhBU0hcIjtcbiAgICBFbnVtX091dHB1dFNjcmlwdFR5cGVbRW51bV9PdXRwdXRTY3JpcHRUeXBlW1wiUEFZVE9NVUxUSVNJR1wiXSA9IDJdID0gXCJQQVlUT01VTFRJU0lHXCI7XG4gICAgRW51bV9PdXRwdXRTY3JpcHRUeXBlW0VudW1fT3V0cHV0U2NyaXB0VHlwZVtcIlBBWVRPT1BSRVRVUk5cIl0gPSAzXSA9IFwiUEFZVE9PUFJFVFVSTlwiO1xuICAgIEVudW1fT3V0cHV0U2NyaXB0VHlwZVtFbnVtX091dHB1dFNjcmlwdFR5cGVbXCJQQVlUT1dJVE5FU1NcIl0gPSA0XSA9IFwiUEFZVE9XSVRORVNTXCI7XG4gICAgRW51bV9PdXRwdXRTY3JpcHRUeXBlW0VudW1fT3V0cHV0U2NyaXB0VHlwZVtcIlBBWVRPUDJTSFdJVE5FU1NcIl0gPSA1XSA9IFwiUEFZVE9QMlNIV0lUTkVTU1wiO1xuICAgIEVudW1fT3V0cHV0U2NyaXB0VHlwZVtFbnVtX091dHB1dFNjcmlwdFR5cGVbXCJQQVlUT1RBUFJPT1RcIl0gPSA2XSA9IFwiUEFZVE9UQVBST09UXCI7XG59KShFbnVtX091dHB1dFNjcmlwdFR5cGUgfHwgKGV4cG9ydHMuRW51bV9PdXRwdXRTY3JpcHRUeXBlID0gRW51bV9PdXRwdXRTY3JpcHRUeXBlID0ge30pKTtcbnZhciBEZWNyZWRTdGFraW5nU3BlbmRUeXBlO1xuKGZ1bmN0aW9uIChEZWNyZWRTdGFraW5nU3BlbmRUeXBlKSB7XG4gICAgRGVjcmVkU3Rha2luZ1NwZW5kVHlwZVtEZWNyZWRTdGFraW5nU3BlbmRUeXBlW1wiU1NHZW5cIl0gPSAwXSA9IFwiU1NHZW5cIjtcbiAgICBEZWNyZWRTdGFraW5nU3BlbmRUeXBlW0RlY3JlZFN0YWtpbmdTcGVuZFR5cGVbXCJTU1JUWFwiXSA9IDFdID0gXCJTU1JUWFwiO1xufSkoRGVjcmVkU3Rha2luZ1NwZW5kVHlwZSB8fCAoZXhwb3J0cy5EZWNyZWRTdGFraW5nU3BlbmRUeXBlID0gRGVjcmVkU3Rha2luZ1NwZW5kVHlwZSA9IHt9KSk7XG52YXIgQW1vdW50VW5pdDtcbihmdW5jdGlvbiAoQW1vdW50VW5pdCkge1xuICAgIEFtb3VudFVuaXRbQW1vdW50VW5pdFtcIkJJVENPSU5cIl0gPSAwXSA9IFwiQklUQ09JTlwiO1xuICAgIEFtb3VudFVuaXRbQW1vdW50VW5pdFtcIk1JTExJQklUQ09JTlwiXSA9IDFdID0gXCJNSUxMSUJJVENPSU5cIjtcbiAgICBBbW91bnRVbml0W0Ftb3VudFVuaXRbXCJNSUNST0JJVENPSU5cIl0gPSAyXSA9IFwiTUlDUk9CSVRDT0lOXCI7XG4gICAgQW1vdW50VW5pdFtBbW91bnRVbml0W1wiU0FUT1NISVwiXSA9IDNdID0gXCJTQVRPU0hJXCI7XG59KShBbW91bnRVbml0IHx8IChleHBvcnRzLkFtb3VudFVuaXQgPSBBbW91bnRVbml0ID0ge30pKTtcbnZhciBFbnVtX1JlcXVlc3RUeXBlO1xuKGZ1bmN0aW9uIChFbnVtX1JlcXVlc3RUeXBlKSB7XG4gICAgRW51bV9SZXF1ZXN0VHlwZVtFbnVtX1JlcXVlc3RUeXBlW1wiVFhJTlBVVFwiXSA9IDBdID0gXCJUWElOUFVUXCI7XG4gICAgRW51bV9SZXF1ZXN0VHlwZVtFbnVtX1JlcXVlc3RUeXBlW1wiVFhPVVRQVVRcIl0gPSAxXSA9IFwiVFhPVVRQVVRcIjtcbiAgICBFbnVtX1JlcXVlc3RUeXBlW0VudW1fUmVxdWVzdFR5cGVbXCJUWE1FVEFcIl0gPSAyXSA9IFwiVFhNRVRBXCI7XG4gICAgRW51bV9SZXF1ZXN0VHlwZVtFbnVtX1JlcXVlc3RUeXBlW1wiVFhGSU5JU0hFRFwiXSA9IDNdID0gXCJUWEZJTklTSEVEXCI7XG4gICAgRW51bV9SZXF1ZXN0VHlwZVtFbnVtX1JlcXVlc3RUeXBlW1wiVFhFWFRSQURBVEFcIl0gPSA0XSA9IFwiVFhFWFRSQURBVEFcIjtcbiAgICBFbnVtX1JlcXVlc3RUeXBlW0VudW1fUmVxdWVzdFR5cGVbXCJUWE9SSUdJTlBVVFwiXSA9IDVdID0gXCJUWE9SSUdJTlBVVFwiO1xuICAgIEVudW1fUmVxdWVzdFR5cGVbRW51bV9SZXF1ZXN0VHlwZVtcIlRYT1JJR09VVFBVVFwiXSA9IDZdID0gXCJUWE9SSUdPVVRQVVRcIjtcbiAgICBFbnVtX1JlcXVlc3RUeXBlW0VudW1fUmVxdWVzdFR5cGVbXCJUWFBBWU1FTlRSRVFcIl0gPSA3XSA9IFwiVFhQQVlNRU5UUkVRXCI7XG59KShFbnVtX1JlcXVlc3RUeXBlIHx8IChleHBvcnRzLkVudW1fUmVxdWVzdFR5cGUgPSBFbnVtX1JlcXVlc3RUeXBlID0ge30pKTtcbnZhciBDYXJkYW5vRGVyaXZhdGlvblR5cGU7XG4oZnVuY3Rpb24gKENhcmRhbm9EZXJpdmF0aW9uVHlwZSkge1xuICAgIENhcmRhbm9EZXJpdmF0aW9uVHlwZVtDYXJkYW5vRGVyaXZhdGlvblR5cGVbXCJMRURHRVJcIl0gPSAwXSA9IFwiTEVER0VSXCI7XG4gICAgQ2FyZGFub0Rlcml2YXRpb25UeXBlW0NhcmRhbm9EZXJpdmF0aW9uVHlwZVtcIklDQVJVU1wiXSA9IDFdID0gXCJJQ0FSVVNcIjtcbiAgICBDYXJkYW5vRGVyaXZhdGlvblR5cGVbQ2FyZGFub0Rlcml2YXRpb25UeXBlW1wiSUNBUlVTX1RSRVpPUlwiXSA9IDJdID0gXCJJQ0FSVVNfVFJFWk9SXCI7XG59KShDYXJkYW5vRGVyaXZhdGlvblR5cGUgfHwgKGV4cG9ydHMuQ2FyZGFub0Rlcml2YXRpb25UeXBlID0gQ2FyZGFub0Rlcml2YXRpb25UeXBlID0ge30pKTtcbnZhciBDYXJkYW5vQWRkcmVzc1R5cGU7XG4oZnVuY3Rpb24gKENhcmRhbm9BZGRyZXNzVHlwZSkge1xuICAgIENhcmRhbm9BZGRyZXNzVHlwZVtDYXJkYW5vQWRkcmVzc1R5cGVbXCJCQVNFXCJdID0gMF0gPSBcIkJBU0VcIjtcbiAgICBDYXJkYW5vQWRkcmVzc1R5cGVbQ2FyZGFub0FkZHJlc3NUeXBlW1wiQkFTRV9TQ1JJUFRfS0VZXCJdID0gMV0gPSBcIkJBU0VfU0NSSVBUX0tFWVwiO1xuICAgIENhcmRhbm9BZGRyZXNzVHlwZVtDYXJkYW5vQWRkcmVzc1R5cGVbXCJCQVNFX0tFWV9TQ1JJUFRcIl0gPSAyXSA9IFwiQkFTRV9LRVlfU0NSSVBUXCI7XG4gICAgQ2FyZGFub0FkZHJlc3NUeXBlW0NhcmRhbm9BZGRyZXNzVHlwZVtcIkJBU0VfU0NSSVBUX1NDUklQVFwiXSA9IDNdID0gXCJCQVNFX1NDUklQVF9TQ1JJUFRcIjtcbiAgICBDYXJkYW5vQWRkcmVzc1R5cGVbQ2FyZGFub0FkZHJlc3NUeXBlW1wiUE9JTlRFUlwiXSA9IDRdID0gXCJQT0lOVEVSXCI7XG4gICAgQ2FyZGFub0FkZHJlc3NUeXBlW0NhcmRhbm9BZGRyZXNzVHlwZVtcIlBPSU5URVJfU0NSSVBUXCJdID0gNV0gPSBcIlBPSU5URVJfU0NSSVBUXCI7XG4gICAgQ2FyZGFub0FkZHJlc3NUeXBlW0NhcmRhbm9BZGRyZXNzVHlwZVtcIkVOVEVSUFJJU0VcIl0gPSA2XSA9IFwiRU5URVJQUklTRVwiO1xuICAgIENhcmRhbm9BZGRyZXNzVHlwZVtDYXJkYW5vQWRkcmVzc1R5cGVbXCJFTlRFUlBSSVNFX1NDUklQVFwiXSA9IDddID0gXCJFTlRFUlBSSVNFX1NDUklQVFwiO1xuICAgIENhcmRhbm9BZGRyZXNzVHlwZVtDYXJkYW5vQWRkcmVzc1R5cGVbXCJCWVJPTlwiXSA9IDhdID0gXCJCWVJPTlwiO1xuICAgIENhcmRhbm9BZGRyZXNzVHlwZVtDYXJkYW5vQWRkcmVzc1R5cGVbXCJSRVdBUkRcIl0gPSAxNF0gPSBcIlJFV0FSRFwiO1xuICAgIENhcmRhbm9BZGRyZXNzVHlwZVtDYXJkYW5vQWRkcmVzc1R5cGVbXCJSRVdBUkRfU0NSSVBUXCJdID0gMTVdID0gXCJSRVdBUkRfU0NSSVBUXCI7XG59KShDYXJkYW5vQWRkcmVzc1R5cGUgfHwgKGV4cG9ydHMuQ2FyZGFub0FkZHJlc3NUeXBlID0gQ2FyZGFub0FkZHJlc3NUeXBlID0ge30pKTtcbnZhciBDYXJkYW5vTmF0aXZlU2NyaXB0VHlwZTtcbihmdW5jdGlvbiAoQ2FyZGFub05hdGl2ZVNjcmlwdFR5cGUpIHtcbiAgICBDYXJkYW5vTmF0aXZlU2NyaXB0VHlwZVtDYXJkYW5vTmF0aXZlU2NyaXB0VHlwZVtcIlBVQl9LRVlcIl0gPSAwXSA9IFwiUFVCX0tFWVwiO1xuICAgIENhcmRhbm9OYXRpdmVTY3JpcHRUeXBlW0NhcmRhbm9OYXRpdmVTY3JpcHRUeXBlW1wiQUxMXCJdID0gMV0gPSBcIkFMTFwiO1xuICAgIENhcmRhbm9OYXRpdmVTY3JpcHRUeXBlW0NhcmRhbm9OYXRpdmVTY3JpcHRUeXBlW1wiQU5ZXCJdID0gMl0gPSBcIkFOWVwiO1xuICAgIENhcmRhbm9OYXRpdmVTY3JpcHRUeXBlW0NhcmRhbm9OYXRpdmVTY3JpcHRUeXBlW1wiTl9PRl9LXCJdID0gM10gPSBcIk5fT0ZfS1wiO1xuICAgIENhcmRhbm9OYXRpdmVTY3JpcHRUeXBlW0NhcmRhbm9OYXRpdmVTY3JpcHRUeXBlW1wiSU5WQUxJRF9CRUZPUkVcIl0gPSA0XSA9IFwiSU5WQUxJRF9CRUZPUkVcIjtcbiAgICBDYXJkYW5vTmF0aXZlU2NyaXB0VHlwZVtDYXJkYW5vTmF0aXZlU2NyaXB0VHlwZVtcIklOVkFMSURfSEVSRUFGVEVSXCJdID0gNV0gPSBcIklOVkFMSURfSEVSRUFGVEVSXCI7XG59KShDYXJkYW5vTmF0aXZlU2NyaXB0VHlwZSB8fCAoZXhwb3J0cy5DYXJkYW5vTmF0aXZlU2NyaXB0VHlwZSA9IENhcmRhbm9OYXRpdmVTY3JpcHRUeXBlID0ge30pKTtcbnZhciBDYXJkYW5vTmF0aXZlU2NyaXB0SGFzaERpc3BsYXlGb3JtYXQ7XG4oZnVuY3Rpb24gKENhcmRhbm9OYXRpdmVTY3JpcHRIYXNoRGlzcGxheUZvcm1hdCkge1xuICAgIENhcmRhbm9OYXRpdmVTY3JpcHRIYXNoRGlzcGxheUZvcm1hdFtDYXJkYW5vTmF0aXZlU2NyaXB0SGFzaERpc3BsYXlGb3JtYXRbXCJISURFXCJdID0gMF0gPSBcIkhJREVcIjtcbiAgICBDYXJkYW5vTmF0aXZlU2NyaXB0SGFzaERpc3BsYXlGb3JtYXRbQ2FyZGFub05hdGl2ZVNjcmlwdEhhc2hEaXNwbGF5Rm9ybWF0W1wiQkVDSDMyXCJdID0gMV0gPSBcIkJFQ0gzMlwiO1xuICAgIENhcmRhbm9OYXRpdmVTY3JpcHRIYXNoRGlzcGxheUZvcm1hdFtDYXJkYW5vTmF0aXZlU2NyaXB0SGFzaERpc3BsYXlGb3JtYXRbXCJQT0xJQ1lfSURcIl0gPSAyXSA9IFwiUE9MSUNZX0lEXCI7XG59KShDYXJkYW5vTmF0aXZlU2NyaXB0SGFzaERpc3BsYXlGb3JtYXQgfHwgKGV4cG9ydHMuQ2FyZGFub05hdGl2ZVNjcmlwdEhhc2hEaXNwbGF5Rm9ybWF0ID0gQ2FyZGFub05hdGl2ZVNjcmlwdEhhc2hEaXNwbGF5Rm9ybWF0ID0ge30pKTtcbnZhciBDYXJkYW5vVHhPdXRwdXRTZXJpYWxpemF0aW9uRm9ybWF0O1xuKGZ1bmN0aW9uIChDYXJkYW5vVHhPdXRwdXRTZXJpYWxpemF0aW9uRm9ybWF0KSB7XG4gICAgQ2FyZGFub1R4T3V0cHV0U2VyaWFsaXphdGlvbkZvcm1hdFtDYXJkYW5vVHhPdXRwdXRTZXJpYWxpemF0aW9uRm9ybWF0W1wiQVJSQVlfTEVHQUNZXCJdID0gMF0gPSBcIkFSUkFZX0xFR0FDWVwiO1xuICAgIENhcmRhbm9UeE91dHB1dFNlcmlhbGl6YXRpb25Gb3JtYXRbQ2FyZGFub1R4T3V0cHV0U2VyaWFsaXphdGlvbkZvcm1hdFtcIk1BUF9CQUJCQUdFXCJdID0gMV0gPSBcIk1BUF9CQUJCQUdFXCI7XG59KShDYXJkYW5vVHhPdXRwdXRTZXJpYWxpemF0aW9uRm9ybWF0IHx8IChleHBvcnRzLkNhcmRhbm9UeE91dHB1dFNlcmlhbGl6YXRpb25Gb3JtYXQgPSBDYXJkYW5vVHhPdXRwdXRTZXJpYWxpemF0aW9uRm9ybWF0ID0ge30pKTtcbnZhciBDYXJkYW5vQ2VydGlmaWNhdGVUeXBlO1xuKGZ1bmN0aW9uIChDYXJkYW5vQ2VydGlmaWNhdGVUeXBlKSB7XG4gICAgQ2FyZGFub0NlcnRpZmljYXRlVHlwZVtDYXJkYW5vQ2VydGlmaWNhdGVUeXBlW1wiU1RBS0VfUkVHSVNUUkFUSU9OXCJdID0gMF0gPSBcIlNUQUtFX1JFR0lTVFJBVElPTlwiO1xuICAgIENhcmRhbm9DZXJ0aWZpY2F0ZVR5cGVbQ2FyZGFub0NlcnRpZmljYXRlVHlwZVtcIlNUQUtFX0RFUkVHSVNUUkFUSU9OXCJdID0gMV0gPSBcIlNUQUtFX0RFUkVHSVNUUkFUSU9OXCI7XG4gICAgQ2FyZGFub0NlcnRpZmljYXRlVHlwZVtDYXJkYW5vQ2VydGlmaWNhdGVUeXBlW1wiU1RBS0VfREVMRUdBVElPTlwiXSA9IDJdID0gXCJTVEFLRV9ERUxFR0FUSU9OXCI7XG4gICAgQ2FyZGFub0NlcnRpZmljYXRlVHlwZVtDYXJkYW5vQ2VydGlmaWNhdGVUeXBlW1wiU1RBS0VfUE9PTF9SRUdJU1RSQVRJT05cIl0gPSAzXSA9IFwiU1RBS0VfUE9PTF9SRUdJU1RSQVRJT05cIjtcbn0pKENhcmRhbm9DZXJ0aWZpY2F0ZVR5cGUgfHwgKGV4cG9ydHMuQ2FyZGFub0NlcnRpZmljYXRlVHlwZSA9IENhcmRhbm9DZXJ0aWZpY2F0ZVR5cGUgPSB7fSkpO1xudmFyIENhcmRhbm9Qb29sUmVsYXlUeXBlO1xuKGZ1bmN0aW9uIChDYXJkYW5vUG9vbFJlbGF5VHlwZSkge1xuICAgIENhcmRhbm9Qb29sUmVsYXlUeXBlW0NhcmRhbm9Qb29sUmVsYXlUeXBlW1wiU0lOR0xFX0hPU1RfSVBcIl0gPSAwXSA9IFwiU0lOR0xFX0hPU1RfSVBcIjtcbiAgICBDYXJkYW5vUG9vbFJlbGF5VHlwZVtDYXJkYW5vUG9vbFJlbGF5VHlwZVtcIlNJTkdMRV9IT1NUX05BTUVcIl0gPSAxXSA9IFwiU0lOR0xFX0hPU1RfTkFNRVwiO1xuICAgIENhcmRhbm9Qb29sUmVsYXlUeXBlW0NhcmRhbm9Qb29sUmVsYXlUeXBlW1wiTVVMVElQTEVfSE9TVF9OQU1FXCJdID0gMl0gPSBcIk1VTFRJUExFX0hPU1RfTkFNRVwiO1xufSkoQ2FyZGFub1Bvb2xSZWxheVR5cGUgfHwgKGV4cG9ydHMuQ2FyZGFub1Bvb2xSZWxheVR5cGUgPSBDYXJkYW5vUG9vbFJlbGF5VHlwZSA9IHt9KSk7XG52YXIgQ2FyZGFub1R4QXV4aWxpYXJ5RGF0YVN1cHBsZW1lbnRUeXBlO1xuKGZ1bmN0aW9uIChDYXJkYW5vVHhBdXhpbGlhcnlEYXRhU3VwcGxlbWVudFR5cGUpIHtcbiAgICBDYXJkYW5vVHhBdXhpbGlhcnlEYXRhU3VwcGxlbWVudFR5cGVbQ2FyZGFub1R4QXV4aWxpYXJ5RGF0YVN1cHBsZW1lbnRUeXBlW1wiTk9ORVwiXSA9IDBdID0gXCJOT05FXCI7XG4gICAgQ2FyZGFub1R4QXV4aWxpYXJ5RGF0YVN1cHBsZW1lbnRUeXBlW0NhcmRhbm9UeEF1eGlsaWFyeURhdGFTdXBwbGVtZW50VHlwZVtcIkNWT1RFX1JFR0lTVFJBVElPTl9TSUdOQVRVUkVcIl0gPSAxXSA9IFwiQ1ZPVEVfUkVHSVNUUkFUSU9OX1NJR05BVFVSRVwiO1xufSkoQ2FyZGFub1R4QXV4aWxpYXJ5RGF0YVN1cHBsZW1lbnRUeXBlIHx8IChleHBvcnRzLkNhcmRhbm9UeEF1eGlsaWFyeURhdGFTdXBwbGVtZW50VHlwZSA9IENhcmRhbm9UeEF1eGlsaWFyeURhdGFTdXBwbGVtZW50VHlwZSA9IHt9KSk7XG52YXIgQ2FyZGFub0NWb3RlUmVnaXN0cmF0aW9uRm9ybWF0O1xuKGZ1bmN0aW9uIChDYXJkYW5vQ1ZvdGVSZWdpc3RyYXRpb25Gb3JtYXQpIHtcbiAgICBDYXJkYW5vQ1ZvdGVSZWdpc3RyYXRpb25Gb3JtYXRbQ2FyZGFub0NWb3RlUmVnaXN0cmF0aW9uRm9ybWF0W1wiQ0lQMTVcIl0gPSAwXSA9IFwiQ0lQMTVcIjtcbiAgICBDYXJkYW5vQ1ZvdGVSZWdpc3RyYXRpb25Gb3JtYXRbQ2FyZGFub0NWb3RlUmVnaXN0cmF0aW9uRm9ybWF0W1wiQ0lQMzZcIl0gPSAxXSA9IFwiQ0lQMzZcIjtcbn0pKENhcmRhbm9DVm90ZVJlZ2lzdHJhdGlvbkZvcm1hdCB8fCAoZXhwb3J0cy5DYXJkYW5vQ1ZvdGVSZWdpc3RyYXRpb25Gb3JtYXQgPSBDYXJkYW5vQ1ZvdGVSZWdpc3RyYXRpb25Gb3JtYXQgPSB7fSkpO1xudmFyIENhcmRhbm9UeFNpZ25pbmdNb2RlO1xuKGZ1bmN0aW9uIChDYXJkYW5vVHhTaWduaW5nTW9kZSkge1xuICAgIENhcmRhbm9UeFNpZ25pbmdNb2RlW0NhcmRhbm9UeFNpZ25pbmdNb2RlW1wiT1JESU5BUllfVFJBTlNBQ1RJT05cIl0gPSAwXSA9IFwiT1JESU5BUllfVFJBTlNBQ1RJT05cIjtcbiAgICBDYXJkYW5vVHhTaWduaW5nTW9kZVtDYXJkYW5vVHhTaWduaW5nTW9kZVtcIlBPT0xfUkVHSVNUUkFUSU9OX0FTX09XTkVSXCJdID0gMV0gPSBcIlBPT0xfUkVHSVNUUkFUSU9OX0FTX09XTkVSXCI7XG4gICAgQ2FyZGFub1R4U2lnbmluZ01vZGVbQ2FyZGFub1R4U2lnbmluZ01vZGVbXCJNVUxUSVNJR19UUkFOU0FDVElPTlwiXSA9IDJdID0gXCJNVUxUSVNJR19UUkFOU0FDVElPTlwiO1xuICAgIENhcmRhbm9UeFNpZ25pbmdNb2RlW0NhcmRhbm9UeFNpZ25pbmdNb2RlW1wiUExVVFVTX1RSQU5TQUNUSU9OXCJdID0gM10gPSBcIlBMVVRVU19UUkFOU0FDVElPTlwiO1xufSkoQ2FyZGFub1R4U2lnbmluZ01vZGUgfHwgKGV4cG9ydHMuQ2FyZGFub1R4U2lnbmluZ01vZGUgPSBDYXJkYW5vVHhTaWduaW5nTW9kZSA9IHt9KSk7XG52YXIgQ2FyZGFub1R4V2l0bmVzc1R5cGU7XG4oZnVuY3Rpb24gKENhcmRhbm9UeFdpdG5lc3NUeXBlKSB7XG4gICAgQ2FyZGFub1R4V2l0bmVzc1R5cGVbQ2FyZGFub1R4V2l0bmVzc1R5cGVbXCJCWVJPTl9XSVRORVNTXCJdID0gMF0gPSBcIkJZUk9OX1dJVE5FU1NcIjtcbiAgICBDYXJkYW5vVHhXaXRuZXNzVHlwZVtDYXJkYW5vVHhXaXRuZXNzVHlwZVtcIlNIRUxMRVlfV0lUTkVTU1wiXSA9IDFdID0gXCJTSEVMTEVZX1dJVE5FU1NcIjtcbn0pKENhcmRhbm9UeFdpdG5lc3NUeXBlIHx8IChleHBvcnRzLkNhcmRhbm9UeFdpdG5lc3NUeXBlID0gQ2FyZGFub1R4V2l0bmVzc1R5cGUgPSB7fSkpO1xudmFyIEZhaWx1cmVUeXBlO1xuKGZ1bmN0aW9uIChGYWlsdXJlVHlwZSkge1xuICAgIEZhaWx1cmVUeXBlW0ZhaWx1cmVUeXBlW1wiRmFpbHVyZV9VbmV4cGVjdGVkTWVzc2FnZVwiXSA9IDFdID0gXCJGYWlsdXJlX1VuZXhwZWN0ZWRNZXNzYWdlXCI7XG4gICAgRmFpbHVyZVR5cGVbRmFpbHVyZVR5cGVbXCJGYWlsdXJlX0J1dHRvbkV4cGVjdGVkXCJdID0gMl0gPSBcIkZhaWx1cmVfQnV0dG9uRXhwZWN0ZWRcIjtcbiAgICBGYWlsdXJlVHlwZVtGYWlsdXJlVHlwZVtcIkZhaWx1cmVfRGF0YUVycm9yXCJdID0gM10gPSBcIkZhaWx1cmVfRGF0YUVycm9yXCI7XG4gICAgRmFpbHVyZVR5cGVbRmFpbHVyZVR5cGVbXCJGYWlsdXJlX0FjdGlvbkNhbmNlbGxlZFwiXSA9IDRdID0gXCJGYWlsdXJlX0FjdGlvbkNhbmNlbGxlZFwiO1xuICAgIEZhaWx1cmVUeXBlW0ZhaWx1cmVUeXBlW1wiRmFpbHVyZV9QaW5FeHBlY3RlZFwiXSA9IDVdID0gXCJGYWlsdXJlX1BpbkV4cGVjdGVkXCI7XG4gICAgRmFpbHVyZVR5cGVbRmFpbHVyZVR5cGVbXCJGYWlsdXJlX1BpbkNhbmNlbGxlZFwiXSA9IDZdID0gXCJGYWlsdXJlX1BpbkNhbmNlbGxlZFwiO1xuICAgIEZhaWx1cmVUeXBlW0ZhaWx1cmVUeXBlW1wiRmFpbHVyZV9QaW5JbnZhbGlkXCJdID0gN10gPSBcIkZhaWx1cmVfUGluSW52YWxpZFwiO1xuICAgIEZhaWx1cmVUeXBlW0ZhaWx1cmVUeXBlW1wiRmFpbHVyZV9JbnZhbGlkU2lnbmF0dXJlXCJdID0gOF0gPSBcIkZhaWx1cmVfSW52YWxpZFNpZ25hdHVyZVwiO1xuICAgIEZhaWx1cmVUeXBlW0ZhaWx1cmVUeXBlW1wiRmFpbHVyZV9Qcm9jZXNzRXJyb3JcIl0gPSA5XSA9IFwiRmFpbHVyZV9Qcm9jZXNzRXJyb3JcIjtcbiAgICBGYWlsdXJlVHlwZVtGYWlsdXJlVHlwZVtcIkZhaWx1cmVfTm90RW5vdWdoRnVuZHNcIl0gPSAxMF0gPSBcIkZhaWx1cmVfTm90RW5vdWdoRnVuZHNcIjtcbiAgICBGYWlsdXJlVHlwZVtGYWlsdXJlVHlwZVtcIkZhaWx1cmVfTm90SW5pdGlhbGl6ZWRcIl0gPSAxMV0gPSBcIkZhaWx1cmVfTm90SW5pdGlhbGl6ZWRcIjtcbiAgICBGYWlsdXJlVHlwZVtGYWlsdXJlVHlwZVtcIkZhaWx1cmVfUGluTWlzbWF0Y2hcIl0gPSAxMl0gPSBcIkZhaWx1cmVfUGluTWlzbWF0Y2hcIjtcbiAgICBGYWlsdXJlVHlwZVtGYWlsdXJlVHlwZVtcIkZhaWx1cmVfV2lwZUNvZGVNaXNtYXRjaFwiXSA9IDEzXSA9IFwiRmFpbHVyZV9XaXBlQ29kZU1pc21hdGNoXCI7XG4gICAgRmFpbHVyZVR5cGVbRmFpbHVyZVR5cGVbXCJGYWlsdXJlX0ludmFsaWRTZXNzaW9uXCJdID0gMTRdID0gXCJGYWlsdXJlX0ludmFsaWRTZXNzaW9uXCI7XG4gICAgRmFpbHVyZVR5cGVbRmFpbHVyZVR5cGVbXCJGYWlsdXJlX0Zpcm13YXJlRXJyb3JcIl0gPSA5OV0gPSBcIkZhaWx1cmVfRmlybXdhcmVFcnJvclwiO1xufSkoRmFpbHVyZVR5cGUgfHwgKGV4cG9ydHMuRmFpbHVyZVR5cGUgPSBGYWlsdXJlVHlwZSA9IHt9KSk7XG52YXIgRW51bV9CdXR0b25SZXF1ZXN0VHlwZTtcbihmdW5jdGlvbiAoRW51bV9CdXR0b25SZXF1ZXN0VHlwZSkge1xuICAgIEVudW1fQnV0dG9uUmVxdWVzdFR5cGVbRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtcIkJ1dHRvblJlcXVlc3RfT3RoZXJcIl0gPSAxXSA9IFwiQnV0dG9uUmVxdWVzdF9PdGhlclwiO1xuICAgIEVudW1fQnV0dG9uUmVxdWVzdFR5cGVbRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtcIkJ1dHRvblJlcXVlc3RfRmVlT3ZlclRocmVzaG9sZFwiXSA9IDJdID0gXCJCdXR0b25SZXF1ZXN0X0ZlZU92ZXJUaHJlc2hvbGRcIjtcbiAgICBFbnVtX0J1dHRvblJlcXVlc3RUeXBlW0VudW1fQnV0dG9uUmVxdWVzdFR5cGVbXCJCdXR0b25SZXF1ZXN0X0NvbmZpcm1PdXRwdXRcIl0gPSAzXSA9IFwiQnV0dG9uUmVxdWVzdF9Db25maXJtT3V0cHV0XCI7XG4gICAgRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtFbnVtX0J1dHRvblJlcXVlc3RUeXBlW1wiQnV0dG9uUmVxdWVzdF9SZXNldERldmljZVwiXSA9IDRdID0gXCJCdXR0b25SZXF1ZXN0X1Jlc2V0RGV2aWNlXCI7XG4gICAgRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtFbnVtX0J1dHRvblJlcXVlc3RUeXBlW1wiQnV0dG9uUmVxdWVzdF9Db25maXJtV29yZFwiXSA9IDVdID0gXCJCdXR0b25SZXF1ZXN0X0NvbmZpcm1Xb3JkXCI7XG4gICAgRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtFbnVtX0J1dHRvblJlcXVlc3RUeXBlW1wiQnV0dG9uUmVxdWVzdF9XaXBlRGV2aWNlXCJdID0gNl0gPSBcIkJ1dHRvblJlcXVlc3RfV2lwZURldmljZVwiO1xuICAgIEVudW1fQnV0dG9uUmVxdWVzdFR5cGVbRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtcIkJ1dHRvblJlcXVlc3RfUHJvdGVjdENhbGxcIl0gPSA3XSA9IFwiQnV0dG9uUmVxdWVzdF9Qcm90ZWN0Q2FsbFwiO1xuICAgIEVudW1fQnV0dG9uUmVxdWVzdFR5cGVbRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtcIkJ1dHRvblJlcXVlc3RfU2lnblR4XCJdID0gOF0gPSBcIkJ1dHRvblJlcXVlc3RfU2lnblR4XCI7XG4gICAgRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtFbnVtX0J1dHRvblJlcXVlc3RUeXBlW1wiQnV0dG9uUmVxdWVzdF9GaXJtd2FyZUNoZWNrXCJdID0gOV0gPSBcIkJ1dHRvblJlcXVlc3RfRmlybXdhcmVDaGVja1wiO1xuICAgIEVudW1fQnV0dG9uUmVxdWVzdFR5cGVbRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtcIkJ1dHRvblJlcXVlc3RfQWRkcmVzc1wiXSA9IDEwXSA9IFwiQnV0dG9uUmVxdWVzdF9BZGRyZXNzXCI7XG4gICAgRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtFbnVtX0J1dHRvblJlcXVlc3RUeXBlW1wiQnV0dG9uUmVxdWVzdF9QdWJsaWNLZXlcIl0gPSAxMV0gPSBcIkJ1dHRvblJlcXVlc3RfUHVibGljS2V5XCI7XG4gICAgRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtFbnVtX0J1dHRvblJlcXVlc3RUeXBlW1wiQnV0dG9uUmVxdWVzdF9NbmVtb25pY1dvcmRDb3VudFwiXSA9IDEyXSA9IFwiQnV0dG9uUmVxdWVzdF9NbmVtb25pY1dvcmRDb3VudFwiO1xuICAgIEVudW1fQnV0dG9uUmVxdWVzdFR5cGVbRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtcIkJ1dHRvblJlcXVlc3RfTW5lbW9uaWNJbnB1dFwiXSA9IDEzXSA9IFwiQnV0dG9uUmVxdWVzdF9NbmVtb25pY0lucHV0XCI7XG4gICAgRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtFbnVtX0J1dHRvblJlcXVlc3RUeXBlW1wiX0RlcHJlY2F0ZWRfQnV0dG9uUmVxdWVzdF9QYXNzcGhyYXNlVHlwZVwiXSA9IDE0XSA9IFwiX0RlcHJlY2F0ZWRfQnV0dG9uUmVxdWVzdF9QYXNzcGhyYXNlVHlwZVwiO1xuICAgIEVudW1fQnV0dG9uUmVxdWVzdFR5cGVbRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtcIkJ1dHRvblJlcXVlc3RfVW5rbm93bkRlcml2YXRpb25QYXRoXCJdID0gMTVdID0gXCJCdXR0b25SZXF1ZXN0X1Vua25vd25EZXJpdmF0aW9uUGF0aFwiO1xuICAgIEVudW1fQnV0dG9uUmVxdWVzdFR5cGVbRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtcIkJ1dHRvblJlcXVlc3RfUmVjb3ZlcnlIb21lcGFnZVwiXSA9IDE2XSA9IFwiQnV0dG9uUmVxdWVzdF9SZWNvdmVyeUhvbWVwYWdlXCI7XG4gICAgRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtFbnVtX0J1dHRvblJlcXVlc3RUeXBlW1wiQnV0dG9uUmVxdWVzdF9TdWNjZXNzXCJdID0gMTddID0gXCJCdXR0b25SZXF1ZXN0X1N1Y2Nlc3NcIjtcbiAgICBFbnVtX0J1dHRvblJlcXVlc3RUeXBlW0VudW1fQnV0dG9uUmVxdWVzdFR5cGVbXCJCdXR0b25SZXF1ZXN0X1dhcm5pbmdcIl0gPSAxOF0gPSBcIkJ1dHRvblJlcXVlc3RfV2FybmluZ1wiO1xuICAgIEVudW1fQnV0dG9uUmVxdWVzdFR5cGVbRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtcIkJ1dHRvblJlcXVlc3RfUGFzc3BocmFzZUVudHJ5XCJdID0gMTldID0gXCJCdXR0b25SZXF1ZXN0X1Bhc3NwaHJhc2VFbnRyeVwiO1xuICAgIEVudW1fQnV0dG9uUmVxdWVzdFR5cGVbRW51bV9CdXR0b25SZXF1ZXN0VHlwZVtcIkJ1dHRvblJlcXVlc3RfUGluRW50cnlcIl0gPSAyMF0gPSBcIkJ1dHRvblJlcXVlc3RfUGluRW50cnlcIjtcbn0pKEVudW1fQnV0dG9uUmVxdWVzdFR5cGUgfHwgKGV4cG9ydHMuRW51bV9CdXR0b25SZXF1ZXN0VHlwZSA9IEVudW1fQnV0dG9uUmVxdWVzdFR5cGUgPSB7fSkpO1xudmFyIEVudW1fUGluTWF0cml4UmVxdWVzdFR5cGU7XG4oZnVuY3Rpb24gKEVudW1fUGluTWF0cml4UmVxdWVzdFR5cGUpIHtcbiAgICBFbnVtX1Bpbk1hdHJpeFJlcXVlc3RUeXBlW0VudW1fUGluTWF0cml4UmVxdWVzdFR5cGVbXCJQaW5NYXRyaXhSZXF1ZXN0VHlwZV9DdXJyZW50XCJdID0gMV0gPSBcIlBpbk1hdHJpeFJlcXVlc3RUeXBlX0N1cnJlbnRcIjtcbiAgICBFbnVtX1Bpbk1hdHJpeFJlcXVlc3RUeXBlW0VudW1fUGluTWF0cml4UmVxdWVzdFR5cGVbXCJQaW5NYXRyaXhSZXF1ZXN0VHlwZV9OZXdGaXJzdFwiXSA9IDJdID0gXCJQaW5NYXRyaXhSZXF1ZXN0VHlwZV9OZXdGaXJzdFwiO1xuICAgIEVudW1fUGluTWF0cml4UmVxdWVzdFR5cGVbRW51bV9QaW5NYXRyaXhSZXF1ZXN0VHlwZVtcIlBpbk1hdHJpeFJlcXVlc3RUeXBlX05ld1NlY29uZFwiXSA9IDNdID0gXCJQaW5NYXRyaXhSZXF1ZXN0VHlwZV9OZXdTZWNvbmRcIjtcbiAgICBFbnVtX1Bpbk1hdHJpeFJlcXVlc3RUeXBlW0VudW1fUGluTWF0cml4UmVxdWVzdFR5cGVbXCJQaW5NYXRyaXhSZXF1ZXN0VHlwZV9XaXBlQ29kZUZpcnN0XCJdID0gNF0gPSBcIlBpbk1hdHJpeFJlcXVlc3RUeXBlX1dpcGVDb2RlRmlyc3RcIjtcbiAgICBFbnVtX1Bpbk1hdHJpeFJlcXVlc3RUeXBlW0VudW1fUGluTWF0cml4UmVxdWVzdFR5cGVbXCJQaW5NYXRyaXhSZXF1ZXN0VHlwZV9XaXBlQ29kZVNlY29uZFwiXSA9IDVdID0gXCJQaW5NYXRyaXhSZXF1ZXN0VHlwZV9XaXBlQ29kZVNlY29uZFwiO1xufSkoRW51bV9QaW5NYXRyaXhSZXF1ZXN0VHlwZSB8fCAoZXhwb3J0cy5FbnVtX1Bpbk1hdHJpeFJlcXVlc3RUeXBlID0gRW51bV9QaW5NYXRyaXhSZXF1ZXN0VHlwZSA9IHt9KSk7XG52YXIgRGVidWdCdXR0b247XG4oZnVuY3Rpb24gKERlYnVnQnV0dG9uKSB7XG4gICAgRGVidWdCdXR0b25bRGVidWdCdXR0b25bXCJOT1wiXSA9IDBdID0gXCJOT1wiO1xuICAgIERlYnVnQnV0dG9uW0RlYnVnQnV0dG9uW1wiWUVTXCJdID0gMV0gPSBcIllFU1wiO1xuICAgIERlYnVnQnV0dG9uW0RlYnVnQnV0dG9uW1wiSU5GT1wiXSA9IDJdID0gXCJJTkZPXCI7XG59KShEZWJ1Z0J1dHRvbiB8fCAoZXhwb3J0cy5EZWJ1Z0J1dHRvbiA9IERlYnVnQnV0dG9uID0ge30pKTtcbnZhciBEZWJ1Z1BoeXNpY2FsQnV0dG9uO1xuKGZ1bmN0aW9uIChEZWJ1Z1BoeXNpY2FsQnV0dG9uKSB7XG4gICAgRGVidWdQaHlzaWNhbEJ1dHRvbltEZWJ1Z1BoeXNpY2FsQnV0dG9uW1wiTEVGVF9CVE5cIl0gPSAwXSA9IFwiTEVGVF9CVE5cIjtcbiAgICBEZWJ1Z1BoeXNpY2FsQnV0dG9uW0RlYnVnUGh5c2ljYWxCdXR0b25bXCJNSURETEVfQlROXCJdID0gMV0gPSBcIk1JRERMRV9CVE5cIjtcbiAgICBEZWJ1Z1BoeXNpY2FsQnV0dG9uW0RlYnVnUGh5c2ljYWxCdXR0b25bXCJSSUdIVF9CVE5cIl0gPSAyXSA9IFwiUklHSFRfQlROXCI7XG59KShEZWJ1Z1BoeXNpY2FsQnV0dG9uIHx8IChleHBvcnRzLkRlYnVnUGh5c2ljYWxCdXR0b24gPSBEZWJ1Z1BoeXNpY2FsQnV0dG9uID0ge30pKTtcbnZhciBFdGhlcmV1bURlZmluaXRpb25UeXBlO1xuKGZ1bmN0aW9uIChFdGhlcmV1bURlZmluaXRpb25UeXBlKSB7XG4gICAgRXRoZXJldW1EZWZpbml0aW9uVHlwZVtFdGhlcmV1bURlZmluaXRpb25UeXBlW1wiTkVUV09SS1wiXSA9IDBdID0gXCJORVRXT1JLXCI7XG4gICAgRXRoZXJldW1EZWZpbml0aW9uVHlwZVtFdGhlcmV1bURlZmluaXRpb25UeXBlW1wiVE9LRU5cIl0gPSAxXSA9IFwiVE9LRU5cIjtcbn0pKEV0aGVyZXVtRGVmaW5pdGlvblR5cGUgfHwgKGV4cG9ydHMuRXRoZXJldW1EZWZpbml0aW9uVHlwZSA9IEV0aGVyZXVtRGVmaW5pdGlvblR5cGUgPSB7fSkpO1xudmFyIEV0aGVyZXVtRGF0YVR5cGU7XG4oZnVuY3Rpb24gKEV0aGVyZXVtRGF0YVR5cGUpIHtcbiAgICBFdGhlcmV1bURhdGFUeXBlW0V0aGVyZXVtRGF0YVR5cGVbXCJVSU5UXCJdID0gMV0gPSBcIlVJTlRcIjtcbiAgICBFdGhlcmV1bURhdGFUeXBlW0V0aGVyZXVtRGF0YVR5cGVbXCJJTlRcIl0gPSAyXSA9IFwiSU5UXCI7XG4gICAgRXRoZXJldW1EYXRhVHlwZVtFdGhlcmV1bURhdGFUeXBlW1wiQllURVNcIl0gPSAzXSA9IFwiQllURVNcIjtcbiAgICBFdGhlcmV1bURhdGFUeXBlW0V0aGVyZXVtRGF0YVR5cGVbXCJTVFJJTkdcIl0gPSA0XSA9IFwiU1RSSU5HXCI7XG4gICAgRXRoZXJldW1EYXRhVHlwZVtFdGhlcmV1bURhdGFUeXBlW1wiQk9PTFwiXSA9IDVdID0gXCJCT09MXCI7XG4gICAgRXRoZXJldW1EYXRhVHlwZVtFdGhlcmV1bURhdGFUeXBlW1wiQUREUkVTU1wiXSA9IDZdID0gXCJBRERSRVNTXCI7XG4gICAgRXRoZXJldW1EYXRhVHlwZVtFdGhlcmV1bURhdGFUeXBlW1wiQVJSQVlcIl0gPSA3XSA9IFwiQVJSQVlcIjtcbiAgICBFdGhlcmV1bURhdGFUeXBlW0V0aGVyZXVtRGF0YVR5cGVbXCJTVFJVQ1RcIl0gPSA4XSA9IFwiU1RSVUNUXCI7XG59KShFdGhlcmV1bURhdGFUeXBlIHx8IChleHBvcnRzLkV0aGVyZXVtRGF0YVR5cGUgPSBFdGhlcmV1bURhdGFUeXBlID0ge30pKTtcbnZhciBFbnVtX0JhY2t1cFR5cGU7XG4oZnVuY3Rpb24gKEVudW1fQmFja3VwVHlwZSkge1xuICAgIEVudW1fQmFja3VwVHlwZVtFbnVtX0JhY2t1cFR5cGVbXCJCaXAzOVwiXSA9IDBdID0gXCJCaXAzOVwiO1xuICAgIEVudW1fQmFja3VwVHlwZVtFbnVtX0JhY2t1cFR5cGVbXCJTbGlwMzlfQmFzaWNcIl0gPSAxXSA9IFwiU2xpcDM5X0Jhc2ljXCI7XG4gICAgRW51bV9CYWNrdXBUeXBlW0VudW1fQmFja3VwVHlwZVtcIlNsaXAzOV9BZHZhbmNlZFwiXSA9IDJdID0gXCJTbGlwMzlfQWR2YW5jZWRcIjtcbn0pKEVudW1fQmFja3VwVHlwZSB8fCAoZXhwb3J0cy5FbnVtX0JhY2t1cFR5cGUgPSBFbnVtX0JhY2t1cFR5cGUgPSB7fSkpO1xudmFyIEVudW1fU2FmZXR5Q2hlY2tMZXZlbDtcbihmdW5jdGlvbiAoRW51bV9TYWZldHlDaGVja0xldmVsKSB7XG4gICAgRW51bV9TYWZldHlDaGVja0xldmVsW0VudW1fU2FmZXR5Q2hlY2tMZXZlbFtcIlN0cmljdFwiXSA9IDBdID0gXCJTdHJpY3RcIjtcbiAgICBFbnVtX1NhZmV0eUNoZWNrTGV2ZWxbRW51bV9TYWZldHlDaGVja0xldmVsW1wiUHJvbXB0QWx3YXlzXCJdID0gMV0gPSBcIlByb21wdEFsd2F5c1wiO1xuICAgIEVudW1fU2FmZXR5Q2hlY2tMZXZlbFtFbnVtX1NhZmV0eUNoZWNrTGV2ZWxbXCJQcm9tcHRUZW1wb3JhcmlseVwiXSA9IDJdID0gXCJQcm9tcHRUZW1wb3JhcmlseVwiO1xufSkoRW51bV9TYWZldHlDaGVja0xldmVsIHx8IChleHBvcnRzLkVudW1fU2FmZXR5Q2hlY2tMZXZlbCA9IEVudW1fU2FmZXR5Q2hlY2tMZXZlbCA9IHt9KSk7XG52YXIgRW51bV9Ib21lc2NyZWVuRm9ybWF0O1xuKGZ1bmN0aW9uIChFbnVtX0hvbWVzY3JlZW5Gb3JtYXQpIHtcbiAgICBFbnVtX0hvbWVzY3JlZW5Gb3JtYXRbRW51bV9Ib21lc2NyZWVuRm9ybWF0W1wiVG9pZlwiXSA9IDFdID0gXCJUb2lmXCI7XG4gICAgRW51bV9Ib21lc2NyZWVuRm9ybWF0W0VudW1fSG9tZXNjcmVlbkZvcm1hdFtcIkpwZWdcIl0gPSAyXSA9IFwiSnBlZ1wiO1xuICAgIEVudW1fSG9tZXNjcmVlbkZvcm1hdFtFbnVtX0hvbWVzY3JlZW5Gb3JtYXRbXCJUb2lHXCJdID0gM10gPSBcIlRvaUdcIjtcbn0pKEVudW1fSG9tZXNjcmVlbkZvcm1hdCB8fCAoZXhwb3J0cy5FbnVtX0hvbWVzY3JlZW5Gb3JtYXQgPSBFbnVtX0hvbWVzY3JlZW5Gb3JtYXQgPSB7fSkpO1xudmFyIEVudW1fQ2FwYWJpbGl0eTtcbihmdW5jdGlvbiAoRW51bV9DYXBhYmlsaXR5KSB7XG4gICAgRW51bV9DYXBhYmlsaXR5W0VudW1fQ2FwYWJpbGl0eVtcIkNhcGFiaWxpdHlfQml0Y29pblwiXSA9IDFdID0gXCJDYXBhYmlsaXR5X0JpdGNvaW5cIjtcbiAgICBFbnVtX0NhcGFiaWxpdHlbRW51bV9DYXBhYmlsaXR5W1wiQ2FwYWJpbGl0eV9CaXRjb2luX2xpa2VcIl0gPSAyXSA9IFwiQ2FwYWJpbGl0eV9CaXRjb2luX2xpa2VcIjtcbiAgICBFbnVtX0NhcGFiaWxpdHlbRW51bV9DYXBhYmlsaXR5W1wiQ2FwYWJpbGl0eV9CaW5hbmNlXCJdID0gM10gPSBcIkNhcGFiaWxpdHlfQmluYW5jZVwiO1xuICAgIEVudW1fQ2FwYWJpbGl0eVtFbnVtX0NhcGFiaWxpdHlbXCJDYXBhYmlsaXR5X0NhcmRhbm9cIl0gPSA0XSA9IFwiQ2FwYWJpbGl0eV9DYXJkYW5vXCI7XG4gICAgRW51bV9DYXBhYmlsaXR5W0VudW1fQ2FwYWJpbGl0eVtcIkNhcGFiaWxpdHlfQ3J5cHRvXCJdID0gNV0gPSBcIkNhcGFiaWxpdHlfQ3J5cHRvXCI7XG4gICAgRW51bV9DYXBhYmlsaXR5W0VudW1fQ2FwYWJpbGl0eVtcIkNhcGFiaWxpdHlfRU9TXCJdID0gNl0gPSBcIkNhcGFiaWxpdHlfRU9TXCI7XG4gICAgRW51bV9DYXBhYmlsaXR5W0VudW1fQ2FwYWJpbGl0eVtcIkNhcGFiaWxpdHlfRXRoZXJldW1cIl0gPSA3XSA9IFwiQ2FwYWJpbGl0eV9FdGhlcmV1bVwiO1xuICAgIEVudW1fQ2FwYWJpbGl0eVtFbnVtX0NhcGFiaWxpdHlbXCJDYXBhYmlsaXR5X0xpc2tcIl0gPSA4XSA9IFwiQ2FwYWJpbGl0eV9MaXNrXCI7XG4gICAgRW51bV9DYXBhYmlsaXR5W0VudW1fQ2FwYWJpbGl0eVtcIkNhcGFiaWxpdHlfTW9uZXJvXCJdID0gOV0gPSBcIkNhcGFiaWxpdHlfTW9uZXJvXCI7XG4gICAgRW51bV9DYXBhYmlsaXR5W0VudW1fQ2FwYWJpbGl0eVtcIkNhcGFiaWxpdHlfTkVNXCJdID0gMTBdID0gXCJDYXBhYmlsaXR5X05FTVwiO1xuICAgIEVudW1fQ2FwYWJpbGl0eVtFbnVtX0NhcGFiaWxpdHlbXCJDYXBhYmlsaXR5X1JpcHBsZVwiXSA9IDExXSA9IFwiQ2FwYWJpbGl0eV9SaXBwbGVcIjtcbiAgICBFbnVtX0NhcGFiaWxpdHlbRW51bV9DYXBhYmlsaXR5W1wiQ2FwYWJpbGl0eV9TdGVsbGFyXCJdID0gMTJdID0gXCJDYXBhYmlsaXR5X1N0ZWxsYXJcIjtcbiAgICBFbnVtX0NhcGFiaWxpdHlbRW51bV9DYXBhYmlsaXR5W1wiQ2FwYWJpbGl0eV9UZXpvc1wiXSA9IDEzXSA9IFwiQ2FwYWJpbGl0eV9UZXpvc1wiO1xuICAgIEVudW1fQ2FwYWJpbGl0eVtFbnVtX0NhcGFiaWxpdHlbXCJDYXBhYmlsaXR5X1UyRlwiXSA9IDE0XSA9IFwiQ2FwYWJpbGl0eV9VMkZcIjtcbiAgICBFbnVtX0NhcGFiaWxpdHlbRW51bV9DYXBhYmlsaXR5W1wiQ2FwYWJpbGl0eV9TaGFtaXJcIl0gPSAxNV0gPSBcIkNhcGFiaWxpdHlfU2hhbWlyXCI7XG4gICAgRW51bV9DYXBhYmlsaXR5W0VudW1fQ2FwYWJpbGl0eVtcIkNhcGFiaWxpdHlfU2hhbWlyR3JvdXBzXCJdID0gMTZdID0gXCJDYXBhYmlsaXR5X1NoYW1pckdyb3Vwc1wiO1xuICAgIEVudW1fQ2FwYWJpbGl0eVtFbnVtX0NhcGFiaWxpdHlbXCJDYXBhYmlsaXR5X1Bhc3NwaHJhc2VFbnRyeVwiXSA9IDE3XSA9IFwiQ2FwYWJpbGl0eV9QYXNzcGhyYXNlRW50cnlcIjtcbiAgICBFbnVtX0NhcGFiaWxpdHlbRW51bV9DYXBhYmlsaXR5W1wiQ2FwYWJpbGl0eV9Tb2xhbmFcIl0gPSAxOF0gPSBcIkNhcGFiaWxpdHlfU29sYW5hXCI7XG4gICAgRW51bV9DYXBhYmlsaXR5W0VudW1fQ2FwYWJpbGl0eVtcIkNhcGFiaWxpdHlfVHJhbnNsYXRpb25zXCJdID0gMTldID0gXCJDYXBhYmlsaXR5X1RyYW5zbGF0aW9uc1wiO1xufSkoRW51bV9DYXBhYmlsaXR5IHx8IChleHBvcnRzLkVudW1fQ2FwYWJpbGl0eSA9IEVudW1fQ2FwYWJpbGl0eSA9IHt9KSk7XG52YXIgU2RQcm90ZWN0T3BlcmF0aW9uVHlwZTtcbihmdW5jdGlvbiAoU2RQcm90ZWN0T3BlcmF0aW9uVHlwZSkge1xuICAgIFNkUHJvdGVjdE9wZXJhdGlvblR5cGVbU2RQcm90ZWN0T3BlcmF0aW9uVHlwZVtcIkRJU0FCTEVcIl0gPSAwXSA9IFwiRElTQUJMRVwiO1xuICAgIFNkUHJvdGVjdE9wZXJhdGlvblR5cGVbU2RQcm90ZWN0T3BlcmF0aW9uVHlwZVtcIkVOQUJMRVwiXSA9IDFdID0gXCJFTkFCTEVcIjtcbiAgICBTZFByb3RlY3RPcGVyYXRpb25UeXBlW1NkUHJvdGVjdE9wZXJhdGlvblR5cGVbXCJSRUZSRVNIXCJdID0gMl0gPSBcIlJFRlJFU0hcIjtcbn0pKFNkUHJvdGVjdE9wZXJhdGlvblR5cGUgfHwgKGV4cG9ydHMuU2RQcm90ZWN0T3BlcmF0aW9uVHlwZSA9IFNkUHJvdGVjdE9wZXJhdGlvblR5cGUgPSB7fSkpO1xudmFyIFJlY292ZXJ5RGV2aWNlVHlwZTtcbihmdW5jdGlvbiAoUmVjb3ZlcnlEZXZpY2VUeXBlKSB7XG4gICAgUmVjb3ZlcnlEZXZpY2VUeXBlW1JlY292ZXJ5RGV2aWNlVHlwZVtcIlJlY292ZXJ5RGV2aWNlVHlwZV9TY3JhbWJsZWRXb3Jkc1wiXSA9IDBdID0gXCJSZWNvdmVyeURldmljZVR5cGVfU2NyYW1ibGVkV29yZHNcIjtcbiAgICBSZWNvdmVyeURldmljZVR5cGVbUmVjb3ZlcnlEZXZpY2VUeXBlW1wiUmVjb3ZlcnlEZXZpY2VUeXBlX01hdHJpeFwiXSA9IDFdID0gXCJSZWNvdmVyeURldmljZVR5cGVfTWF0cml4XCI7XG59KShSZWNvdmVyeURldmljZVR5cGUgfHwgKGV4cG9ydHMuUmVjb3ZlcnlEZXZpY2VUeXBlID0gUmVjb3ZlcnlEZXZpY2VUeXBlID0ge30pKTtcbnZhciBFbnVtX1dvcmRSZXF1ZXN0VHlwZTtcbihmdW5jdGlvbiAoRW51bV9Xb3JkUmVxdWVzdFR5cGUpIHtcbiAgICBFbnVtX1dvcmRSZXF1ZXN0VHlwZVtFbnVtX1dvcmRSZXF1ZXN0VHlwZVtcIldvcmRSZXF1ZXN0VHlwZV9QbGFpblwiXSA9IDBdID0gXCJXb3JkUmVxdWVzdFR5cGVfUGxhaW5cIjtcbiAgICBFbnVtX1dvcmRSZXF1ZXN0VHlwZVtFbnVtX1dvcmRSZXF1ZXN0VHlwZVtcIldvcmRSZXF1ZXN0VHlwZV9NYXRyaXg5XCJdID0gMV0gPSBcIldvcmRSZXF1ZXN0VHlwZV9NYXRyaXg5XCI7XG4gICAgRW51bV9Xb3JkUmVxdWVzdFR5cGVbRW51bV9Xb3JkUmVxdWVzdFR5cGVbXCJXb3JkUmVxdWVzdFR5cGVfTWF0cml4NlwiXSA9IDJdID0gXCJXb3JkUmVxdWVzdFR5cGVfTWF0cml4NlwiO1xufSkoRW51bV9Xb3JkUmVxdWVzdFR5cGUgfHwgKGV4cG9ydHMuRW51bV9Xb3JkUmVxdWVzdFR5cGUgPSBFbnVtX1dvcmRSZXF1ZXN0VHlwZSA9IHt9KSk7XG52YXIgQm9vdENvbW1hbmQ7XG4oZnVuY3Rpb24gKEJvb3RDb21tYW5kKSB7XG4gICAgQm9vdENvbW1hbmRbQm9vdENvbW1hbmRbXCJTVE9QX0FORF9XQUlUXCJdID0gMF0gPSBcIlNUT1BfQU5EX1dBSVRcIjtcbiAgICBCb290Q29tbWFuZFtCb290Q29tbWFuZFtcIklOU1RBTExfVVBHUkFERVwiXSA9IDFdID0gXCJJTlNUQUxMX1VQR1JBREVcIjtcbn0pKEJvb3RDb21tYW5kIHx8IChleHBvcnRzLkJvb3RDb21tYW5kID0gQm9vdENvbW1hbmQgPSB7fSkpO1xudmFyIE1vbmVyb05ldHdvcmtUeXBlO1xuKGZ1bmN0aW9uIChNb25lcm9OZXR3b3JrVHlwZSkge1xuICAgIE1vbmVyb05ldHdvcmtUeXBlW01vbmVyb05ldHdvcmtUeXBlW1wiTUFJTk5FVFwiXSA9IDBdID0gXCJNQUlOTkVUXCI7XG4gICAgTW9uZXJvTmV0d29ya1R5cGVbTW9uZXJvTmV0d29ya1R5cGVbXCJURVNUTkVUXCJdID0gMV0gPSBcIlRFU1RORVRcIjtcbiAgICBNb25lcm9OZXR3b3JrVHlwZVtNb25lcm9OZXR3b3JrVHlwZVtcIlNUQUdFTkVUXCJdID0gMl0gPSBcIlNUQUdFTkVUXCI7XG4gICAgTW9uZXJvTmV0d29ya1R5cGVbTW9uZXJvTmV0d29ya1R5cGVbXCJGQUtFQ0hBSU5cIl0gPSAzXSA9IFwiRkFLRUNIQUlOXCI7XG59KShNb25lcm9OZXR3b3JrVHlwZSB8fCAoZXhwb3J0cy5Nb25lcm9OZXR3b3JrVHlwZSA9IE1vbmVyb05ldHdvcmtUeXBlID0ge30pKTtcbnZhciBORU1Nb3NhaWNMZXZ5O1xuKGZ1bmN0aW9uIChORU1Nb3NhaWNMZXZ5KSB7XG4gICAgTkVNTW9zYWljTGV2eVtORU1Nb3NhaWNMZXZ5W1wiTW9zYWljTGV2eV9BYnNvbHV0ZVwiXSA9IDFdID0gXCJNb3NhaWNMZXZ5X0Fic29sdXRlXCI7XG4gICAgTkVNTW9zYWljTGV2eVtORU1Nb3NhaWNMZXZ5W1wiTW9zYWljTGV2eV9QZXJjZW50aWxlXCJdID0gMl0gPSBcIk1vc2FpY0xldnlfUGVyY2VudGlsZVwiO1xufSkoTkVNTW9zYWljTGV2eSB8fCAoZXhwb3J0cy5ORU1Nb3NhaWNMZXZ5ID0gTkVNTW9zYWljTGV2eSA9IHt9KSk7XG52YXIgTkVNU3VwcGx5Q2hhbmdlVHlwZTtcbihmdW5jdGlvbiAoTkVNU3VwcGx5Q2hhbmdlVHlwZSkge1xuICAgIE5FTVN1cHBseUNoYW5nZVR5cGVbTkVNU3VwcGx5Q2hhbmdlVHlwZVtcIlN1cHBseUNoYW5nZV9JbmNyZWFzZVwiXSA9IDFdID0gXCJTdXBwbHlDaGFuZ2VfSW5jcmVhc2VcIjtcbiAgICBORU1TdXBwbHlDaGFuZ2VUeXBlW05FTVN1cHBseUNoYW5nZVR5cGVbXCJTdXBwbHlDaGFuZ2VfRGVjcmVhc2VcIl0gPSAyXSA9IFwiU3VwcGx5Q2hhbmdlX0RlY3JlYXNlXCI7XG59KShORU1TdXBwbHlDaGFuZ2VUeXBlIHx8IChleHBvcnRzLk5FTVN1cHBseUNoYW5nZVR5cGUgPSBORU1TdXBwbHlDaGFuZ2VUeXBlID0ge30pKTtcbnZhciBORU1Nb2RpZmljYXRpb25UeXBlO1xuKGZ1bmN0aW9uIChORU1Nb2RpZmljYXRpb25UeXBlKSB7XG4gICAgTkVNTW9kaWZpY2F0aW9uVHlwZVtORU1Nb2RpZmljYXRpb25UeXBlW1wiQ29zaWduYXRvcnlNb2RpZmljYXRpb25fQWRkXCJdID0gMV0gPSBcIkNvc2lnbmF0b3J5TW9kaWZpY2F0aW9uX0FkZFwiO1xuICAgIE5FTU1vZGlmaWNhdGlvblR5cGVbTkVNTW9kaWZpY2F0aW9uVHlwZVtcIkNvc2lnbmF0b3J5TW9kaWZpY2F0aW9uX0RlbGV0ZVwiXSA9IDJdID0gXCJDb3NpZ25hdG9yeU1vZGlmaWNhdGlvbl9EZWxldGVcIjtcbn0pKE5FTU1vZGlmaWNhdGlvblR5cGUgfHwgKGV4cG9ydHMuTkVNTW9kaWZpY2F0aW9uVHlwZSA9IE5FTU1vZGlmaWNhdGlvblR5cGUgPSB7fSkpO1xudmFyIE5FTUltcG9ydGFuY2VUcmFuc2Zlck1vZGU7XG4oZnVuY3Rpb24gKE5FTUltcG9ydGFuY2VUcmFuc2Zlck1vZGUpIHtcbiAgICBORU1JbXBvcnRhbmNlVHJhbnNmZXJNb2RlW05FTUltcG9ydGFuY2VUcmFuc2Zlck1vZGVbXCJJbXBvcnRhbmNlVHJhbnNmZXJfQWN0aXZhdGVcIl0gPSAxXSA9IFwiSW1wb3J0YW5jZVRyYW5zZmVyX0FjdGl2YXRlXCI7XG4gICAgTkVNSW1wb3J0YW5jZVRyYW5zZmVyTW9kZVtORU1JbXBvcnRhbmNlVHJhbnNmZXJNb2RlW1wiSW1wb3J0YW5jZVRyYW5zZmVyX0RlYWN0aXZhdGVcIl0gPSAyXSA9IFwiSW1wb3J0YW5jZVRyYW5zZmVyX0RlYWN0aXZhdGVcIjtcbn0pKE5FTUltcG9ydGFuY2VUcmFuc2Zlck1vZGUgfHwgKGV4cG9ydHMuTkVNSW1wb3J0YW5jZVRyYW5zZmVyTW9kZSA9IE5FTUltcG9ydGFuY2VUcmFuc2Zlck1vZGUgPSB7fSkpO1xudmFyIFN0ZWxsYXJBc3NldFR5cGU7XG4oZnVuY3Rpb24gKFN0ZWxsYXJBc3NldFR5cGUpIHtcbiAgICBTdGVsbGFyQXNzZXRUeXBlW1N0ZWxsYXJBc3NldFR5cGVbXCJOQVRJVkVcIl0gPSAwXSA9IFwiTkFUSVZFXCI7XG4gICAgU3RlbGxhckFzc2V0VHlwZVtTdGVsbGFyQXNzZXRUeXBlW1wiQUxQSEFOVU00XCJdID0gMV0gPSBcIkFMUEhBTlVNNFwiO1xuICAgIFN0ZWxsYXJBc3NldFR5cGVbU3RlbGxhckFzc2V0VHlwZVtcIkFMUEhBTlVNMTJcIl0gPSAyXSA9IFwiQUxQSEFOVU0xMlwiO1xufSkoU3RlbGxhckFzc2V0VHlwZSB8fCAoZXhwb3J0cy5TdGVsbGFyQXNzZXRUeXBlID0gU3RlbGxhckFzc2V0VHlwZSA9IHt9KSk7XG52YXIgU3RlbGxhck1lbW9UeXBlO1xuKGZ1bmN0aW9uIChTdGVsbGFyTWVtb1R5cGUpIHtcbiAgICBTdGVsbGFyTWVtb1R5cGVbU3RlbGxhck1lbW9UeXBlW1wiTk9ORVwiXSA9IDBdID0gXCJOT05FXCI7XG4gICAgU3RlbGxhck1lbW9UeXBlW1N0ZWxsYXJNZW1vVHlwZVtcIlRFWFRcIl0gPSAxXSA9IFwiVEVYVFwiO1xuICAgIFN0ZWxsYXJNZW1vVHlwZVtTdGVsbGFyTWVtb1R5cGVbXCJJRFwiXSA9IDJdID0gXCJJRFwiO1xuICAgIFN0ZWxsYXJNZW1vVHlwZVtTdGVsbGFyTWVtb1R5cGVbXCJIQVNIXCJdID0gM10gPSBcIkhBU0hcIjtcbiAgICBTdGVsbGFyTWVtb1R5cGVbU3RlbGxhck1lbW9UeXBlW1wiUkVUVVJOXCJdID0gNF0gPSBcIlJFVFVSTlwiO1xufSkoU3RlbGxhck1lbW9UeXBlIHx8IChleHBvcnRzLlN0ZWxsYXJNZW1vVHlwZSA9IFN0ZWxsYXJNZW1vVHlwZSA9IHt9KSk7XG52YXIgU3RlbGxhclNpZ25lclR5cGU7XG4oZnVuY3Rpb24gKFN0ZWxsYXJTaWduZXJUeXBlKSB7XG4gICAgU3RlbGxhclNpZ25lclR5cGVbU3RlbGxhclNpZ25lclR5cGVbXCJBQ0NPVU5UXCJdID0gMF0gPSBcIkFDQ09VTlRcIjtcbiAgICBTdGVsbGFyU2lnbmVyVHlwZVtTdGVsbGFyU2lnbmVyVHlwZVtcIlBSRV9BVVRIXCJdID0gMV0gPSBcIlBSRV9BVVRIXCI7XG4gICAgU3RlbGxhclNpZ25lclR5cGVbU3RlbGxhclNpZ25lclR5cGVbXCJIQVNIXCJdID0gMl0gPSBcIkhBU0hcIjtcbn0pKFN0ZWxsYXJTaWduZXJUeXBlIHx8IChleHBvcnRzLlN0ZWxsYXJTaWduZXJUeXBlID0gU3RlbGxhclNpZ25lclR5cGUgPSB7fSkpO1xudmFyIFRlem9zQ29udHJhY3RUeXBlO1xuKGZ1bmN0aW9uIChUZXpvc0NvbnRyYWN0VHlwZSkge1xuICAgIFRlem9zQ29udHJhY3RUeXBlW1Rlem9zQ29udHJhY3RUeXBlW1wiSW1wbGljaXRcIl0gPSAwXSA9IFwiSW1wbGljaXRcIjtcbiAgICBUZXpvc0NvbnRyYWN0VHlwZVtUZXpvc0NvbnRyYWN0VHlwZVtcIk9yaWdpbmF0ZWRcIl0gPSAxXSA9IFwiT3JpZ2luYXRlZFwiO1xufSkoVGV6b3NDb250cmFjdFR5cGUgfHwgKGV4cG9ydHMuVGV6b3NDb250cmFjdFR5cGUgPSBUZXpvc0NvbnRyYWN0VHlwZSA9IHt9KSk7XG52YXIgVGV6b3NCYWxsb3RUeXBlO1xuKGZ1bmN0aW9uIChUZXpvc0JhbGxvdFR5cGUpIHtcbiAgICBUZXpvc0JhbGxvdFR5cGVbVGV6b3NCYWxsb3RUeXBlW1wiWWF5XCJdID0gMF0gPSBcIllheVwiO1xuICAgIFRlem9zQmFsbG90VHlwZVtUZXpvc0JhbGxvdFR5cGVbXCJOYXlcIl0gPSAxXSA9IFwiTmF5XCI7XG4gICAgVGV6b3NCYWxsb3RUeXBlW1Rlem9zQmFsbG90VHlwZVtcIlBhc3NcIl0gPSAyXSA9IFwiUGFzc1wiO1xufSkoVGV6b3NCYWxsb3RUeXBlIHx8IChleHBvcnRzLlRlem9zQmFsbG90VHlwZSA9IFRlem9zQmFsbG90VHlwZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXNzYWdlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/protobuf/lib/messages.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/protobuf/lib/types.js":
/*!****************************************************!*\
  !*** ./node_modules/@trezor/protobuf/lib/types.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvcHJvdG9idWYvbGliL3R5cGVzLmpzPzU1NzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/protobuf/lib/types.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/protobuf/lib/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/@trezor/protobuf/lib/utils.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createMessageFromType = exports.createMessageFromName = exports.parseConfigure = exports.isPrimitiveField = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst protobuf = tslib_1.__importStar(__webpack_require__(/*! protobufjs/light */ \"./node_modules/protobufjs/light.js\"));\nconst primitiveTypes = [\n    'bool',\n    'string',\n    'bytes',\n    'int32',\n    'int64',\n    'uint32',\n    'uint64',\n    'sint32',\n    'sint64',\n    'fixed32',\n    'fixed64',\n    'sfixed32',\n    'sfixed64',\n    'double',\n    'float',\n];\nconst isPrimitiveField = (field) => primitiveTypes.includes(field);\nexports.isPrimitiveField = isPrimitiveField;\nfunction parseConfigure(data) {\n    if (typeof data === 'string') {\n        return protobuf.Root.fromJSON(JSON.parse(data));\n    }\n    return protobuf.Root.fromJSON(data);\n}\nexports.parseConfigure = parseConfigure;\nconst createMessageFromName = (messages, name) => {\n    const Message = messages.lookupType(name);\n    const MessageType = messages.lookupEnum('MessageType');\n    let messageType = MessageType.values[`MessageType_${name}`];\n    if (!messageType && Message.options) {\n        messageType = Message.options['(wire_type)'];\n    }\n    return {\n        Message,\n        messageType,\n    };\n};\nexports.createMessageFromName = createMessageFromName;\nconst createMessageFromType = (messages, typeId) => {\n    const MessageType = messages.lookupEnum('MessageType');\n    const messageName = MessageType.valuesById[typeId].replace('MessageType_', '');\n    const Message = messages.lookupType(messageName);\n    return {\n        Message,\n        messageName,\n    };\n};\nexports.createMessageFromType = createMessageFromType;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcsNkJBQTZCLEdBQUcsc0JBQXNCLEdBQUcsd0JBQXdCO0FBQ2pILGdCQUFnQixtQkFBTyxDQUFDLGlEQUFPO0FBQy9CLHNDQUFzQyxtQkFBTyxDQUFDLDREQUFrQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxLQUFLO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3Byb3RvYnVmL2xpYi91dGlscy5qcz84OTc2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVNZXNzYWdlRnJvbVR5cGUgPSBleHBvcnRzLmNyZWF0ZU1lc3NhZ2VGcm9tTmFtZSA9IGV4cG9ydHMucGFyc2VDb25maWd1cmUgPSBleHBvcnRzLmlzUHJpbWl0aXZlRmllbGQgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgcHJvdG9idWYgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwicHJvdG9idWZqcy9saWdodFwiKSk7XG5jb25zdCBwcmltaXRpdmVUeXBlcyA9IFtcbiAgICAnYm9vbCcsXG4gICAgJ3N0cmluZycsXG4gICAgJ2J5dGVzJyxcbiAgICAnaW50MzInLFxuICAgICdpbnQ2NCcsXG4gICAgJ3VpbnQzMicsXG4gICAgJ3VpbnQ2NCcsXG4gICAgJ3NpbnQzMicsXG4gICAgJ3NpbnQ2NCcsXG4gICAgJ2ZpeGVkMzInLFxuICAgICdmaXhlZDY0JyxcbiAgICAnc2ZpeGVkMzInLFxuICAgICdzZml4ZWQ2NCcsXG4gICAgJ2RvdWJsZScsXG4gICAgJ2Zsb2F0Jyxcbl07XG5jb25zdCBpc1ByaW1pdGl2ZUZpZWxkID0gKGZpZWxkKSA9PiBwcmltaXRpdmVUeXBlcy5pbmNsdWRlcyhmaWVsZCk7XG5leHBvcnRzLmlzUHJpbWl0aXZlRmllbGQgPSBpc1ByaW1pdGl2ZUZpZWxkO1xuZnVuY3Rpb24gcGFyc2VDb25maWd1cmUoZGF0YSkge1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHByb3RvYnVmLlJvb3QuZnJvbUpTT04oSlNPTi5wYXJzZShkYXRhKSk7XG4gICAgfVxuICAgIHJldHVybiBwcm90b2J1Zi5Sb290LmZyb21KU09OKGRhdGEpO1xufVxuZXhwb3J0cy5wYXJzZUNvbmZpZ3VyZSA9IHBhcnNlQ29uZmlndXJlO1xuY29uc3QgY3JlYXRlTWVzc2FnZUZyb21OYW1lID0gKG1lc3NhZ2VzLCBuYW1lKSA9PiB7XG4gICAgY29uc3QgTWVzc2FnZSA9IG1lc3NhZ2VzLmxvb2t1cFR5cGUobmFtZSk7XG4gICAgY29uc3QgTWVzc2FnZVR5cGUgPSBtZXNzYWdlcy5sb29rdXBFbnVtKCdNZXNzYWdlVHlwZScpO1xuICAgIGxldCBtZXNzYWdlVHlwZSA9IE1lc3NhZ2VUeXBlLnZhbHVlc1tgTWVzc2FnZVR5cGVfJHtuYW1lfWBdO1xuICAgIGlmICghbWVzc2FnZVR5cGUgJiYgTWVzc2FnZS5vcHRpb25zKSB7XG4gICAgICAgIG1lc3NhZ2VUeXBlID0gTWVzc2FnZS5vcHRpb25zWycod2lyZV90eXBlKSddO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBNZXNzYWdlLFxuICAgICAgICBtZXNzYWdlVHlwZSxcbiAgICB9O1xufTtcbmV4cG9ydHMuY3JlYXRlTWVzc2FnZUZyb21OYW1lID0gY3JlYXRlTWVzc2FnZUZyb21OYW1lO1xuY29uc3QgY3JlYXRlTWVzc2FnZUZyb21UeXBlID0gKG1lc3NhZ2VzLCB0eXBlSWQpID0+IHtcbiAgICBjb25zdCBNZXNzYWdlVHlwZSA9IG1lc3NhZ2VzLmxvb2t1cEVudW0oJ01lc3NhZ2VUeXBlJyk7XG4gICAgY29uc3QgbWVzc2FnZU5hbWUgPSBNZXNzYWdlVHlwZS52YWx1ZXNCeUlkW3R5cGVJZF0ucmVwbGFjZSgnTWVzc2FnZVR5cGVfJywgJycpO1xuICAgIGNvbnN0IE1lc3NhZ2UgPSBtZXNzYWdlcy5sb29rdXBUeXBlKG1lc3NhZ2VOYW1lKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBNZXNzYWdlLFxuICAgICAgICBtZXNzYWdlTmFtZSxcbiAgICB9O1xufTtcbmV4cG9ydHMuY3JlYXRlTWVzc2FnZUZyb21UeXBlID0gY3JlYXRlTWVzc2FnZUZyb21UeXBlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/protobuf/lib/utils.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/custom-types/array-buffer.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/custom-types/array-buffer.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ArrayBufferBuilder = void 0;\nconst typebox_1 = __webpack_require__(/*! @sinclair/typebox */ \"./node_modules/@sinclair/typebox/typebox.js\");\ntypebox_1.TypeRegistry.Set('ArrayBuffer', (_, value) => value instanceof ArrayBuffer);\nclass ArrayBufferBuilder extends typebox_1.JavaScriptTypeBuilder {\n    ArrayBuffer(options) {\n        return this.Create(Object.assign(Object.assign({}, options), { [typebox_1.Kind]: 'ArrayBuffer', type: 'ArrayBuffer' }));\n    }\n}\nexports.ArrayBufferBuilder = ArrayBufferBuilder;\n//# sourceMappingURL=array-buffer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy9hcnJheS1idWZmZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLGtCQUFrQixtQkFBTyxDQUFDLHNFQUFtQjtBQUM3QztBQUNBO0FBQ0E7QUFDQSx5REFBeUQsY0FBYyxzREFBc0Q7QUFDN0g7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy9hcnJheS1idWZmZXIuanM/MTE1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXJyYXlCdWZmZXJCdWlsZGVyID0gdm9pZCAwO1xuY29uc3QgdHlwZWJveF8xID0gcmVxdWlyZShcIkBzaW5jbGFpci90eXBlYm94XCIpO1xudHlwZWJveF8xLlR5cGVSZWdpc3RyeS5TZXQoJ0FycmF5QnVmZmVyJywgKF8sIHZhbHVlKSA9PiB2YWx1ZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKTtcbmNsYXNzIEFycmF5QnVmZmVyQnVpbGRlciBleHRlbmRzIHR5cGVib3hfMS5KYXZhU2NyaXB0VHlwZUJ1aWxkZXIge1xuICAgIEFycmF5QnVmZmVyKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgW3R5cGVib3hfMS5LaW5kXTogJ0FycmF5QnVmZmVyJywgdHlwZTogJ0FycmF5QnVmZmVyJyB9KSk7XG4gICAgfVxufVxuZXhwb3J0cy5BcnJheUJ1ZmZlckJ1aWxkZXIgPSBBcnJheUJ1ZmZlckJ1aWxkZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcnJheS1idWZmZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/custom-types/array-buffer.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/custom-types/buffer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/custom-types/buffer.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BufferBuilder = void 0;\nconst typebox_1 = __webpack_require__(/*! @sinclair/typebox */ \"./node_modules/@sinclair/typebox/typebox.js\");\ntypebox_1.TypeRegistry.Set('Buffer', (_, value) => value instanceof Buffer);\nclass BufferBuilder extends typebox_1.JavaScriptTypeBuilder {\n    Buffer(options) {\n        return this.Create(Object.assign(Object.assign({}, options), { [typebox_1.Kind]: 'Buffer', type: 'Buffer' }));\n    }\n}\nexports.BufferBuilder = BufferBuilder;\n//# sourceMappingURL=buffer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy9idWZmZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixrQkFBa0IsbUJBQU8sQ0FBQyxzRUFBbUI7QUFDN0Msb0VBQW9FLE1BQU07QUFDMUU7QUFDQTtBQUNBLHlEQUF5RCxjQUFjLDRDQUE0QztBQUNuSDtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3NjaGVtYS11dGlscy9saWIvY3VzdG9tLXR5cGVzL2J1ZmZlci5qcz82ZDBiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CdWZmZXJCdWlsZGVyID0gdm9pZCAwO1xuY29uc3QgdHlwZWJveF8xID0gcmVxdWlyZShcIkBzaW5jbGFpci90eXBlYm94XCIpO1xudHlwZWJveF8xLlR5cGVSZWdpc3RyeS5TZXQoJ0J1ZmZlcicsIChfLCB2YWx1ZSkgPT4gdmFsdWUgaW5zdGFuY2VvZiBCdWZmZXIpO1xuY2xhc3MgQnVmZmVyQnVpbGRlciBleHRlbmRzIHR5cGVib3hfMS5KYXZhU2NyaXB0VHlwZUJ1aWxkZXIge1xuICAgIEJ1ZmZlcihvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLkNyZWF0ZShPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IFt0eXBlYm94XzEuS2luZF06ICdCdWZmZXInLCB0eXBlOiAnQnVmZmVyJyB9KSk7XG4gICAgfVxufVxuZXhwb3J0cy5CdWZmZXJCdWlsZGVyID0gQnVmZmVyQnVpbGRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1ZmZlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/custom-types/buffer.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/custom-types/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/custom-types/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UintBuilder = exports.KeyofEnumBuilder = exports.BufferBuilder = exports.ArrayBufferBuilder = void 0;\nvar array_buffer_1 = __webpack_require__(/*! ./array-buffer */ \"./node_modules/@trezor/schema-utils/lib/custom-types/array-buffer.js\");\nObject.defineProperty(exports, \"ArrayBufferBuilder\", ({ enumerable: true, get: function () { return array_buffer_1.ArrayBufferBuilder; } }));\nvar buffer_1 = __webpack_require__(/*! ./buffer */ \"./node_modules/@trezor/schema-utils/lib/custom-types/buffer.js\");\nObject.defineProperty(exports, \"BufferBuilder\", ({ enumerable: true, get: function () { return buffer_1.BufferBuilder; } }));\nvar keyof_enum_1 = __webpack_require__(/*! ./keyof-enum */ \"./node_modules/@trezor/schema-utils/lib/custom-types/keyof-enum.js\");\nObject.defineProperty(exports, \"KeyofEnumBuilder\", ({ enumerable: true, get: function () { return keyof_enum_1.KeyofEnumBuilder; } }));\nvar uint_1 = __webpack_require__(/*! ./uint */ \"./node_modules/@trezor/schema-utils/lib/custom-types/uint.js\");\nObject.defineProperty(exports, \"UintBuilder\", ({ enumerable: true, get: function () { return uint_1.UintBuilder; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyx3QkFBd0IsR0FBRyxxQkFBcUIsR0FBRywwQkFBMEI7QUFDbkcscUJBQXFCLG1CQUFPLENBQUMsNEZBQWdCO0FBQzdDLHNEQUFxRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUMxSSxlQUFlLG1CQUFPLENBQUMsZ0ZBQVU7QUFDakMsaURBQWdELEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQzFILG1CQUFtQixtQkFBTyxDQUFDLHdGQUFjO0FBQ3pDLG9EQUFtRCxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUNwSSxhQUFhLG1CQUFPLENBQUMsNEVBQVE7QUFDN0IsK0NBQThDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ3BIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3NjaGVtYS11dGlscy9saWIvY3VzdG9tLXR5cGVzL2luZGV4LmpzP2MzZWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVpbnRCdWlsZGVyID0gZXhwb3J0cy5LZXlvZkVudW1CdWlsZGVyID0gZXhwb3J0cy5CdWZmZXJCdWlsZGVyID0gZXhwb3J0cy5BcnJheUJ1ZmZlckJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgYXJyYXlfYnVmZmVyXzEgPSByZXF1aXJlKFwiLi9hcnJheS1idWZmZXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBcnJheUJ1ZmZlckJ1aWxkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFycmF5X2J1ZmZlcl8xLkFycmF5QnVmZmVyQnVpbGRlcjsgfSB9KTtcbnZhciBidWZmZXJfMSA9IHJlcXVpcmUoXCIuL2J1ZmZlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJ1ZmZlckJ1aWxkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJ1ZmZlcl8xLkJ1ZmZlckJ1aWxkZXI7IH0gfSk7XG52YXIga2V5b2ZfZW51bV8xID0gcmVxdWlyZShcIi4va2V5b2YtZW51bVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleW9mRW51bUJ1aWxkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtleW9mX2VudW1fMS5LZXlvZkVudW1CdWlsZGVyOyB9IH0pO1xudmFyIHVpbnRfMSA9IHJlcXVpcmUoXCIuL3VpbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVaW50QnVpbGRlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdWludF8xLlVpbnRCdWlsZGVyOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/custom-types/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/custom-types/keyof-enum.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/custom-types/keyof-enum.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyofEnumBuilder = void 0;\nconst typebox_1 = __webpack_require__(/*! @sinclair/typebox */ \"./node_modules/@sinclair/typebox/typebox.js\");\nclass KeyofEnumBuilder extends typebox_1.JavaScriptTypeBuilder {\n    KeyOfEnum(schema, options) {\n        const keys = Object.keys(schema).map(key => this.Literal(key));\n        return this.Union(keys, Object.assign(Object.assign({}, options), { [typebox_1.Hint]: 'KeyOfEnum' }));\n    }\n}\nexports.KeyofEnumBuilder = KeyofEnumBuilder;\n//# sourceMappingURL=keyof-enum.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy9rZXlvZi1lbnVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixrQkFBa0IsbUJBQU8sQ0FBQyxzRUFBbUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsOERBQThELGNBQWMsK0JBQStCO0FBQzNHO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3Ivc2NoZW1hLXV0aWxzL2xpYi9jdXN0b20tdHlwZXMva2V5b2YtZW51bS5qcz83NDVmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LZXlvZkVudW1CdWlsZGVyID0gdm9pZCAwO1xuY29uc3QgdHlwZWJveF8xID0gcmVxdWlyZShcIkBzaW5jbGFpci90eXBlYm94XCIpO1xuY2xhc3MgS2V5b2ZFbnVtQnVpbGRlciBleHRlbmRzIHR5cGVib3hfMS5KYXZhU2NyaXB0VHlwZUJ1aWxkZXIge1xuICAgIEtleU9mRW51bShzY2hlbWEsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHNjaGVtYSkubWFwKGtleSA9PiB0aGlzLkxpdGVyYWwoa2V5KSk7XG4gICAgICAgIHJldHVybiB0aGlzLlVuaW9uKGtleXMsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgW3R5cGVib3hfMS5IaW50XTogJ0tleU9mRW51bScgfSkpO1xuICAgIH1cbn1cbmV4cG9ydHMuS2V5b2ZFbnVtQnVpbGRlciA9IEtleW9mRW51bUJ1aWxkZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1rZXlvZi1lbnVtLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/custom-types/keyof-enum.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/custom-types/uint.js":
/*!********************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/custom-types/uint.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UintBuilder = void 0;\nconst typebox_1 = __webpack_require__(/*! @sinclair/typebox */ \"./node_modules/@sinclair/typebox/typebox.js\");\ntypebox_1.TypeRegistry.Set('Uint', (schema, value) => {\n    if (typeof value !== 'string' && typeof value !== 'number') {\n        return false;\n    }\n    if ((typeof value === 'number' && !Number.isSafeInteger(value)) ||\n        !/^(?:[1-9]\\d*|\\d)$/.test(value.toString().replace(/^-/, schema.allowNegative ? '' : '-'))) {\n        return false;\n    }\n    return true;\n});\nclass UintBuilder extends typebox_1.JavaScriptTypeBuilder {\n    Uint(options) {\n        return this.Create(Object.assign(Object.assign({}, options), { [typebox_1.Kind]: 'Uint', type: 'Uint' }));\n    }\n}\nexports.UintBuilder = UintBuilder;\n//# sourceMappingURL=uint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy91aW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixrQkFBa0IsbUJBQU8sQ0FBQyxzRUFBbUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSx5REFBeUQsY0FBYyx3Q0FBd0M7QUFDL0c7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy91aW50LmpzP2QxMWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVpbnRCdWlsZGVyID0gdm9pZCAwO1xuY29uc3QgdHlwZWJveF8xID0gcmVxdWlyZShcIkBzaW5jbGFpci90eXBlYm94XCIpO1xudHlwZWJveF8xLlR5cGVSZWdpc3RyeS5TZXQoJ1VpbnQnLCAoc2NoZW1hLCB2YWx1ZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgIU51bWJlci5pc1NhZmVJbnRlZ2VyKHZhbHVlKSkgfHxcbiAgICAgICAgIS9eKD86WzEtOV1cXGQqfFxcZCkkLy50ZXN0KHZhbHVlLnRvU3RyaW5nKCkucmVwbGFjZSgvXi0vLCBzY2hlbWEuYWxsb3dOZWdhdGl2ZSA/ICcnIDogJy0nKSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn0pO1xuY2xhc3MgVWludEJ1aWxkZXIgZXh0ZW5kcyB0eXBlYm94XzEuSmF2YVNjcmlwdFR5cGVCdWlsZGVyIHtcbiAgICBVaW50KG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgW3R5cGVib3hfMS5LaW5kXTogJ1VpbnQnLCB0eXBlOiAnVWludCcgfSkpO1xuICAgIH1cbn1cbmV4cG9ydHMuVWludEJ1aWxkZXIgPSBVaW50QnVpbGRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/custom-types/uint.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/errors.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/errors.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidParameter = void 0;\nclass InvalidParameter extends Error {\n    constructor(reason, field, type, value) {\n        let message = `Invalid parameter`;\n        message += ` \"${field.substring(1)}\"`;\n        message += ` (= ${JSON.stringify(value)})`;\n        message += `: ${reason.replace(/'/g, '\"')}`;\n        super(message);\n        this.name = 'InvalidParameter';\n        this.field = field;\n        this.type = type;\n    }\n}\nexports.InvalidParameter = InvalidParameter;\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQywwQkFBMEIsc0JBQXNCO0FBQ2hELHdCQUF3QiwwQkFBMEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3NjaGVtYS11dGlscy9saWIvZXJyb3JzLmpzPzQzOWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkludmFsaWRQYXJhbWV0ZXIgPSB2b2lkIDA7XG5jbGFzcyBJbnZhbGlkUGFyYW1ldGVyIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHJlYXNvbiwgZmllbGQsIHR5cGUsIHZhbHVlKSB7XG4gICAgICAgIGxldCBtZXNzYWdlID0gYEludmFsaWQgcGFyYW1ldGVyYDtcbiAgICAgICAgbWVzc2FnZSArPSBgIFwiJHtmaWVsZC5zdWJzdHJpbmcoMSl9XCJgO1xuICAgICAgICBtZXNzYWdlICs9IGAgKD0gJHtKU09OLnN0cmluZ2lmeSh2YWx1ZSl9KWA7XG4gICAgICAgIG1lc3NhZ2UgKz0gYDogJHtyZWFzb24ucmVwbGFjZSgvJy9nLCAnXCInKX1gO1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0ludmFsaWRQYXJhbWV0ZXInO1xuICAgICAgICB0aGlzLmZpZWxkID0gZmllbGQ7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgfVxufVxuZXhwb3J0cy5JbnZhbGlkUGFyYW1ldGVyID0gSW52YWxpZFBhcmFtZXRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/errors.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Optional = exports.Type = exports.AssertWeak = exports.Assert = exports.Validate = void 0;\nconst typebox_1 = __webpack_require__(/*! @sinclair/typebox */ \"./node_modules/@sinclair/typebox/typebox.js\");\nObject.defineProperty(exports, \"Optional\", ({ enumerable: true, get: function () { return typebox_1.Optional; } }));\nconst errors_1 = __webpack_require__(/*! @sinclair/typebox/errors */ \"./node_modules/@sinclair/typebox/errors/index.js\");\nconst ts_mixer_1 = __webpack_require__(/*! ts-mixer */ \"./node_modules/ts-mixer/dist/esm/index.js\");\nconst custom_types_1 = __webpack_require__(/*! ./custom-types */ \"./node_modules/@trezor/schema-utils/lib/custom-types/index.js\");\nconst errors_2 = __webpack_require__(/*! ./errors */ \"./node_modules/@trezor/schema-utils/lib/errors.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@trezor/schema-utils/lib/utils.js\");\nclass CustomTypeBuilder extends (0, ts_mixer_1.Mixin)(typebox_1.JavaScriptTypeBuilder, custom_types_1.ArrayBufferBuilder, custom_types_1.BufferBuilder, custom_types_1.KeyofEnumBuilder, custom_types_1.UintBuilder) {\n}\nfunction Validate(schema, value) {\n    try {\n        Assert(schema, value);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.Validate = Validate;\nfunction FindErrorInUnion(error) {\n    const currentValue = error.value;\n    const unionMembers = error.schema.anyOf;\n    const hasValidMember = unionMembers.find(unionSchema => Validate(unionSchema, currentValue));\n    if (!hasValidMember) {\n        const possibleMatchesByLiterals = unionMembers.filter(unionSchema => {\n            if (unionSchema[typebox_1.Kind] !== 'Object')\n                return false;\n            return !Object.entries(unionSchema.properties).find(([property, propertySchema]) => propertySchema.const && propertySchema.const !== currentValue[property]);\n        });\n        if (possibleMatchesByLiterals.length === 1) {\n            Assert(possibleMatchesByLiterals[0], currentValue);\n        }\n        else if (possibleMatchesByLiterals.length > 1) {\n            const errorsOfPossibleMatches = possibleMatchesByLiterals.map((matchSchema) => ({\n                schema: matchSchema,\n                errors: [...(0, errors_1.Errors)(matchSchema, currentValue)],\n            }));\n            const sortedErrors = errorsOfPossibleMatches.sort((a, b) => a.errors.length - b.errors.length);\n            const [bestMatch] = sortedErrors;\n            Assert(bestMatch.schema, currentValue);\n        }\n        throw new errors_2.InvalidParameter(error.message, error.path, error.type, error.value);\n    }\n}\nfunction Assert(schema, value) {\n    const errors = [...(0, errors_1.Errors)(schema, value)];\n    let [error] = errors;\n    while (error) {\n        if (error.path === '/' && errors.length > 1) {\n        }\n        else if (error.value == null && error.schema[typebox_1.Optional] === 'Optional') {\n        }\n        else if (error.type === errors_1.ValueErrorType.Union) {\n            FindErrorInUnion(error);\n        }\n        else if (error.type === errors_1.ValueErrorType.Number && typeof error.value === 'string') {\n            const currentValue = error.value;\n            const parsedNumber = Number(currentValue);\n            if (!Number.isNaN(parsedNumber) && currentValue === parsedNumber.toString()) {\n                const pathParts = error.path.slice(1).split('/');\n                (0, utils_1.setDeepValue)(value, pathParts, parsedNumber);\n            }\n            else {\n                throw new errors_2.InvalidParameter(error.message, error.path, error.type, error.value);\n            }\n        }\n        else {\n            throw new errors_2.InvalidParameter(error.message, error.path, error.type, error.value);\n        }\n        errors.shift();\n        [error] = errors;\n    }\n}\nexports.Assert = Assert;\nfunction AssertWeak(schema, value) {\n    try {\n        Assert(schema, value);\n    }\n    catch (e) {\n        if (e instanceof errors_2.InvalidParameter) {\n            if (e.type === errors_1.ValueErrorType.ObjectRequiredProperty) {\n                throw e;\n            }\n            console.warn('Method params validation failed', e);\n        }\n        else {\n            throw e;\n        }\n    }\n}\nexports.AssertWeak = AssertWeak;\nexports.Type = new CustomTypeBuilder();\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixHQUFHLFlBQVksR0FBRyxrQkFBa0IsR0FBRyxjQUFjLEdBQUcsZ0JBQWdCO0FBQ3hGLGtCQUFrQixtQkFBTyxDQUFDLHNFQUFtQjtBQUM3Qyw0Q0FBMkMsRUFBRSxxQ0FBcUMsOEJBQThCLEVBQUM7QUFDakgsaUJBQWlCLG1CQUFPLENBQUMsa0ZBQTBCO0FBQ25ELG1CQUFtQixtQkFBTyxDQUFDLDJEQUFVO0FBQ3JDLHVCQUF1QixtQkFBTyxDQUFDLHFGQUFnQjtBQUMvQyxpQkFBaUIsbUJBQU8sQ0FBQyxtRUFBVTtBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQyxpRUFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsWUFBWTtBQUNaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3NjaGVtYS11dGlscy9saWIvaW5kZXguanM/ODg3NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT3B0aW9uYWwgPSBleHBvcnRzLlR5cGUgPSBleHBvcnRzLkFzc2VydFdlYWsgPSBleHBvcnRzLkFzc2VydCA9IGV4cG9ydHMuVmFsaWRhdGUgPSB2b2lkIDA7XG5jb25zdCB0eXBlYm94XzEgPSByZXF1aXJlKFwiQHNpbmNsYWlyL3R5cGVib3hcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJPcHRpb25hbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdHlwZWJveF8xLk9wdGlvbmFsOyB9IH0pO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiQHNpbmNsYWlyL3R5cGVib3gvZXJyb3JzXCIpO1xuY29uc3QgdHNfbWl4ZXJfMSA9IHJlcXVpcmUoXCJ0cy1taXhlclwiKTtcbmNvbnN0IGN1c3RvbV90eXBlc18xID0gcmVxdWlyZShcIi4vY3VzdG9tLXR5cGVzXCIpO1xuY29uc3QgZXJyb3JzXzIgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5jbGFzcyBDdXN0b21UeXBlQnVpbGRlciBleHRlbmRzICgwLCB0c19taXhlcl8xLk1peGluKSh0eXBlYm94XzEuSmF2YVNjcmlwdFR5cGVCdWlsZGVyLCBjdXN0b21fdHlwZXNfMS5BcnJheUJ1ZmZlckJ1aWxkZXIsIGN1c3RvbV90eXBlc18xLkJ1ZmZlckJ1aWxkZXIsIGN1c3RvbV90eXBlc18xLktleW9mRW51bUJ1aWxkZXIsIGN1c3RvbV90eXBlc18xLlVpbnRCdWlsZGVyKSB7XG59XG5mdW5jdGlvbiBWYWxpZGF0ZShzY2hlbWEsIHZhbHVlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgQXNzZXJ0KHNjaGVtYSwgdmFsdWUpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmV4cG9ydHMuVmFsaWRhdGUgPSBWYWxpZGF0ZTtcbmZ1bmN0aW9uIEZpbmRFcnJvckluVW5pb24oZXJyb3IpIHtcbiAgICBjb25zdCBjdXJyZW50VmFsdWUgPSBlcnJvci52YWx1ZTtcbiAgICBjb25zdCB1bmlvbk1lbWJlcnMgPSBlcnJvci5zY2hlbWEuYW55T2Y7XG4gICAgY29uc3QgaGFzVmFsaWRNZW1iZXIgPSB1bmlvbk1lbWJlcnMuZmluZCh1bmlvblNjaGVtYSA9PiBWYWxpZGF0ZSh1bmlvblNjaGVtYSwgY3VycmVudFZhbHVlKSk7XG4gICAgaWYgKCFoYXNWYWxpZE1lbWJlcikge1xuICAgICAgICBjb25zdCBwb3NzaWJsZU1hdGNoZXNCeUxpdGVyYWxzID0gdW5pb25NZW1iZXJzLmZpbHRlcih1bmlvblNjaGVtYSA9PiB7XG4gICAgICAgICAgICBpZiAodW5pb25TY2hlbWFbdHlwZWJveF8xLktpbmRdICE9PSAnT2JqZWN0JylcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICByZXR1cm4gIU9iamVjdC5lbnRyaWVzKHVuaW9uU2NoZW1hLnByb3BlcnRpZXMpLmZpbmQoKFtwcm9wZXJ0eSwgcHJvcGVydHlTY2hlbWFdKSA9PiBwcm9wZXJ0eVNjaGVtYS5jb25zdCAmJiBwcm9wZXJ0eVNjaGVtYS5jb25zdCAhPT0gY3VycmVudFZhbHVlW3Byb3BlcnR5XSk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAocG9zc2libGVNYXRjaGVzQnlMaXRlcmFscy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIEFzc2VydChwb3NzaWJsZU1hdGNoZXNCeUxpdGVyYWxzWzBdLCBjdXJyZW50VmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHBvc3NpYmxlTWF0Y2hlc0J5TGl0ZXJhbHMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgY29uc3QgZXJyb3JzT2ZQb3NzaWJsZU1hdGNoZXMgPSBwb3NzaWJsZU1hdGNoZXNCeUxpdGVyYWxzLm1hcCgobWF0Y2hTY2hlbWEpID0+ICh7XG4gICAgICAgICAgICAgICAgc2NoZW1hOiBtYXRjaFNjaGVtYSxcbiAgICAgICAgICAgICAgICBlcnJvcnM6IFsuLi4oMCwgZXJyb3JzXzEuRXJyb3JzKShtYXRjaFNjaGVtYSwgY3VycmVudFZhbHVlKV0sXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICBjb25zdCBzb3J0ZWRFcnJvcnMgPSBlcnJvcnNPZlBvc3NpYmxlTWF0Y2hlcy5zb3J0KChhLCBiKSA9PiBhLmVycm9ycy5sZW5ndGggLSBiLmVycm9ycy5sZW5ndGgpO1xuICAgICAgICAgICAgY29uc3QgW2Jlc3RNYXRjaF0gPSBzb3J0ZWRFcnJvcnM7XG4gICAgICAgICAgICBBc3NlcnQoYmVzdE1hdGNoLnNjaGVtYSwgY3VycmVudFZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzIuSW52YWxpZFBhcmFtZXRlcihlcnJvci5tZXNzYWdlLCBlcnJvci5wYXRoLCBlcnJvci50eXBlLCBlcnJvci52YWx1ZSk7XG4gICAgfVxufVxuZnVuY3Rpb24gQXNzZXJ0KHNjaGVtYSwgdmFsdWUpIHtcbiAgICBjb25zdCBlcnJvcnMgPSBbLi4uKDAsIGVycm9yc18xLkVycm9ycykoc2NoZW1hLCB2YWx1ZSldO1xuICAgIGxldCBbZXJyb3JdID0gZXJyb3JzO1xuICAgIHdoaWxlIChlcnJvcikge1xuICAgICAgICBpZiAoZXJyb3IucGF0aCA9PT0gJy8nICYmIGVycm9ycy5sZW5ndGggPiAxKSB7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZXJyb3IudmFsdWUgPT0gbnVsbCAmJiBlcnJvci5zY2hlbWFbdHlwZWJveF8xLk9wdGlvbmFsXSA9PT0gJ09wdGlvbmFsJykge1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGVycm9yLnR5cGUgPT09IGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLlVuaW9uKSB7XG4gICAgICAgICAgICBGaW5kRXJyb3JJblVuaW9uKGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChlcnJvci50eXBlID09PSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5OdW1iZXIgJiYgdHlwZW9mIGVycm9yLnZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgY29uc3QgY3VycmVudFZhbHVlID0gZXJyb3IudmFsdWU7XG4gICAgICAgICAgICBjb25zdCBwYXJzZWROdW1iZXIgPSBOdW1iZXIoY3VycmVudFZhbHVlKTtcbiAgICAgICAgICAgIGlmICghTnVtYmVyLmlzTmFOKHBhcnNlZE51bWJlcikgJiYgY3VycmVudFZhbHVlID09PSBwYXJzZWROdW1iZXIudG9TdHJpbmcoKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhdGhQYXJ0cyA9IGVycm9yLnBhdGguc2xpY2UoMSkuc3BsaXQoJy8nKTtcbiAgICAgICAgICAgICAgICAoMCwgdXRpbHNfMS5zZXREZWVwVmFsdWUpKHZhbHVlLCBwYXRoUGFydHMsIHBhcnNlZE51bWJlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzIuSW52YWxpZFBhcmFtZXRlcihlcnJvci5tZXNzYWdlLCBlcnJvci5wYXRoLCBlcnJvci50eXBlLCBlcnJvci52YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzIuSW52YWxpZFBhcmFtZXRlcihlcnJvci5tZXNzYWdlLCBlcnJvci5wYXRoLCBlcnJvci50eXBlLCBlcnJvci52YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZXJyb3JzLnNoaWZ0KCk7XG4gICAgICAgIFtlcnJvcl0gPSBlcnJvcnM7XG4gICAgfVxufVxuZXhwb3J0cy5Bc3NlcnQgPSBBc3NlcnQ7XG5mdW5jdGlvbiBBc3NlcnRXZWFrKHNjaGVtYSwgdmFsdWUpIHtcbiAgICB0cnkge1xuICAgICAgICBBc3NlcnQoc2NoZW1hLCB2YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChlIGluc3RhbmNlb2YgZXJyb3JzXzIuSW52YWxpZFBhcmFtZXRlcikge1xuICAgICAgICAgICAgaWYgKGUudHlwZSA9PT0gZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuT2JqZWN0UmVxdWlyZWRQcm9wZXJ0eSkge1xuICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ01ldGhvZCBwYXJhbXMgdmFsaWRhdGlvbiBmYWlsZWQnLCBlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkFzc2VydFdlYWsgPSBBc3NlcnRXZWFrO1xuZXhwb3J0cy5UeXBlID0gbmV3IEN1c3RvbVR5cGVCdWlsZGVyKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/utils.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setDeepValue = void 0;\nfunction setDeepValue(obj, [prop, ...path], value) {\n    if (!path.length) {\n        obj[prop] = value;\n    }\n    else {\n        if (!(prop in obj))\n            obj[prop] = {};\n        setDeepValue(obj[prop], path, value);\n    }\n}\nexports.setDeepValue = setDeepValue;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL3V0aWxzLmpzPzRmYTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNldERlZXBWYWx1ZSA9IHZvaWQgMDtcbmZ1bmN0aW9uIHNldERlZXBWYWx1ZShvYmosIFtwcm9wLCAuLi5wYXRoXSwgdmFsdWUpIHtcbiAgICBpZiAoIXBhdGgubGVuZ3RoKSB7XG4gICAgICAgIG9ialtwcm9wXSA9IHZhbHVlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKCEocHJvcCBpbiBvYmopKVxuICAgICAgICAgICAgb2JqW3Byb3BdID0ge307XG4gICAgICAgIHNldERlZXBWYWx1ZShvYmpbcHJvcF0sIHBhdGgsIHZhbHVlKTtcbiAgICB9XG59XG5leHBvcnRzLnNldERlZXBWYWx1ZSA9IHNldERlZXBWYWx1ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/utils.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/transport/lib/constants.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/transport/lib/constants.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TRANSPORT = exports.ACTION_TIMEOUT = exports.TREZOR_USB_DESCRIPTORS = exports.T1_HID_VENDOR = exports.ENDPOINT_ID = exports.INTERFACE_ID = exports.CONFIGURATION_ID = void 0;\nexports.CONFIGURATION_ID = 1;\nexports.INTERFACE_ID = 0;\nexports.ENDPOINT_ID = 1;\nexports.T1_HID_VENDOR = 0x534c;\nexports.TREZOR_USB_DESCRIPTORS = [\n    { vendorId: 0x534c, productId: 0x0001 },\n    { vendorId: 0x1209, productId: 0x53c0 },\n    { vendorId: 0x1209, productId: 0x53c1 },\n];\nexports.ACTION_TIMEOUT = 10000;\nexports.TRANSPORT = {\n    START: 'transport-start',\n    ERROR: 'transport-error',\n    UPDATE: 'transport-update',\n    DISABLE_WEBUSB: 'transport-disable_webusb',\n    REQUEST_DEVICE: 'transport-request_device',\n};\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci90cmFuc3BvcnQvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxzQkFBc0IsR0FBRyw4QkFBOEIsR0FBRyxxQkFBcUIsR0FBRyxtQkFBbUIsR0FBRyxvQkFBb0IsR0FBRyx3QkFBd0I7QUFDM0ssd0JBQXdCO0FBQ3hCLG9CQUFvQjtBQUNwQixtQkFBbUI7QUFDbkIscUJBQXFCO0FBQ3JCLDhCQUE4QjtBQUM5QixNQUFNLHFDQUFxQztBQUMzQyxNQUFNLHFDQUFxQztBQUMzQyxNQUFNLHFDQUFxQztBQUMzQztBQUNBLHNCQUFzQjtBQUN0QixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdHJhbnNwb3J0L2xpYi9jb25zdGFudHMuanM/NjgyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVFJBTlNQT1JUID0gZXhwb3J0cy5BQ1RJT05fVElNRU9VVCA9IGV4cG9ydHMuVFJFWk9SX1VTQl9ERVNDUklQVE9SUyA9IGV4cG9ydHMuVDFfSElEX1ZFTkRPUiA9IGV4cG9ydHMuRU5EUE9JTlRfSUQgPSBleHBvcnRzLklOVEVSRkFDRV9JRCA9IGV4cG9ydHMuQ09ORklHVVJBVElPTl9JRCA9IHZvaWQgMDtcbmV4cG9ydHMuQ09ORklHVVJBVElPTl9JRCA9IDE7XG5leHBvcnRzLklOVEVSRkFDRV9JRCA9IDA7XG5leHBvcnRzLkVORFBPSU5UX0lEID0gMTtcbmV4cG9ydHMuVDFfSElEX1ZFTkRPUiA9IDB4NTM0YztcbmV4cG9ydHMuVFJFWk9SX1VTQl9ERVNDUklQVE9SUyA9IFtcbiAgICB7IHZlbmRvcklkOiAweDUzNGMsIHByb2R1Y3RJZDogMHgwMDAxIH0sXG4gICAgeyB2ZW5kb3JJZDogMHgxMjA5LCBwcm9kdWN0SWQ6IDB4NTNjMCB9LFxuICAgIHsgdmVuZG9ySWQ6IDB4MTIwOSwgcHJvZHVjdElkOiAweDUzYzEgfSxcbl07XG5leHBvcnRzLkFDVElPTl9USU1FT1VUID0gMTAwMDA7XG5leHBvcnRzLlRSQU5TUE9SVCA9IHtcbiAgICBTVEFSVDogJ3RyYW5zcG9ydC1zdGFydCcsXG4gICAgRVJST1I6ICd0cmFuc3BvcnQtZXJyb3InLFxuICAgIFVQREFURTogJ3RyYW5zcG9ydC11cGRhdGUnLFxuICAgIERJU0FCTEVfV0VCVVNCOiAndHJhbnNwb3J0LWRpc2FibGVfd2VidXNiJyxcbiAgICBSRVFVRVNUX0RFVklDRTogJ3RyYW5zcG9ydC1yZXF1ZXN0X2RldmljZScsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/transport/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/addDashesToSpaces.js":
/*!*************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/addDashesToSpaces.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.addDashesToSpaces = void 0;\nconst addDashesToSpaces = (inputString) => inputString.replace(/\\s+/g, '-');\nexports.addDashesToSpaces = addDashesToSpaces;\n//# sourceMappingURL=addDashesToSpaces.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvYWRkRGFzaGVzVG9TcGFjZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCO0FBQ0EseUJBQXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi9hZGREYXNoZXNUb1NwYWNlcy5qcz8xMWY3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hZGREYXNoZXNUb1NwYWNlcyA9IHZvaWQgMDtcbmNvbnN0IGFkZERhc2hlc1RvU3BhY2VzID0gKGlucHV0U3RyaW5nKSA9PiBpbnB1dFN0cmluZy5yZXBsYWNlKC9cXHMrL2csICctJyk7XG5leHBvcnRzLmFkZERhc2hlc1RvU3BhY2VzID0gYWRkRGFzaGVzVG9TcGFjZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGREYXNoZXNUb1NwYWNlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/addDashesToSpaces.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/arrayDistinct.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/arrayDistinct.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.arrayDistinct = void 0;\nconst arrayDistinct = (item, index, self) => self.indexOf(item) === index;\nexports.arrayDistinct = arrayDistinct;\n//# sourceMappingURL=arrayDistinct.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvYXJyYXlEaXN0aW5jdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQSxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL2FycmF5RGlzdGluY3QuanM/MjQxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXJyYXlEaXN0aW5jdCA9IHZvaWQgMDtcbmNvbnN0IGFycmF5RGlzdGluY3QgPSAoaXRlbSwgaW5kZXgsIHNlbGYpID0+IHNlbGYuaW5kZXhPZihpdGVtKSA9PT0gaW5kZXg7XG5leHBvcnRzLmFycmF5RGlzdGluY3QgPSBhcnJheURpc3RpbmN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJyYXlEaXN0aW5jdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/arrayDistinct.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/arrayPartition.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/arrayPartition.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.arrayPartition = void 0;\nconst arrayPartition = (array, condition) => array.reduce(([pass, fail], elem) => condition(elem) ? [[...pass, elem], fail] : [pass, [...fail, elem]], [[], []]);\nexports.arrayPartition = arrayPartition;\n//# sourceMappingURL=arrayPartition.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvYXJyYXlQYXJ0aXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0Esc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi9hcnJheVBhcnRpdGlvbi5qcz9hZjlkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hcnJheVBhcnRpdGlvbiA9IHZvaWQgMDtcbmNvbnN0IGFycmF5UGFydGl0aW9uID0gKGFycmF5LCBjb25kaXRpb24pID0+IGFycmF5LnJlZHVjZSgoW3Bhc3MsIGZhaWxdLCBlbGVtKSA9PiBjb25kaXRpb24oZWxlbSkgPyBbWy4uLnBhc3MsIGVsZW1dLCBmYWlsXSA6IFtwYXNzLCBbLi4uZmFpbCwgZWxlbV1dLCBbW10sIFtdXSk7XG5leHBvcnRzLmFycmF5UGFydGl0aW9uID0gYXJyYXlQYXJ0aXRpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcnJheVBhcnRpdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/arrayPartition.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/arrayShuffle.js":
/*!********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/arrayShuffle.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.arrayShuffle = void 0;\nconst arrayShuffle = (array) => {\n    const shuffled = array.slice();\n    for (let i = shuffled.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n};\nexports.arrayShuffle = arrayShuffle;\n//# sourceMappingURL=arrayShuffle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvYXJyYXlTaHVmZmxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0Esc0NBQXNDLE9BQU87QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvYXJyYXlTaHVmZmxlLmpzPzU5YWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFycmF5U2h1ZmZsZSA9IHZvaWQgMDtcbmNvbnN0IGFycmF5U2h1ZmZsZSA9IChhcnJheSkgPT4ge1xuICAgIGNvbnN0IHNodWZmbGVkID0gYXJyYXkuc2xpY2UoKTtcbiAgICBmb3IgKGxldCBpID0gc2h1ZmZsZWQubGVuZ3RoIC0gMTsgaSA+IDA7IGktLSkge1xuICAgICAgICBjb25zdCBqID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGkgKyAxKSk7XG4gICAgICAgIFtzaHVmZmxlZFtpXSwgc2h1ZmZsZWRbal1dID0gW3NodWZmbGVkW2pdLCBzaHVmZmxlZFtpXV07XG4gICAgfVxuICAgIHJldHVybiBzaHVmZmxlZDtcbn07XG5leHBvcnRzLmFycmF5U2h1ZmZsZSA9IGFycmF5U2h1ZmZsZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFycmF5U2h1ZmZsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/arrayShuffle.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/arrayToDictionary.js":
/*!*************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/arrayToDictionary.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.arrayToDictionary = void 0;\nconst validateKey = (key) => {\n    if (['string', 'number'].includes(typeof key)) {\n        return true;\n    }\n    return false;\n};\nconst arrayToDictionary = (array, getKey, multiple) => multiple\n    ? array.reduce((prev, cur) => {\n        var _a;\n        const key = getKey(cur);\n        if (validateKey(key)) {\n            return Object.assign(Object.assign({}, prev), { [key]: [...((_a = prev[key]) !== null && _a !== void 0 ? _a : []), cur] });\n        }\n        return prev;\n    }, {})\n    : array.reduce((prev, cur) => {\n        const key = getKey(cur);\n        if (validateKey(key)) {\n            return Object.assign(Object.assign({}, prev), { [key]: cur });\n        }\n        return prev;\n    }, {});\nexports.arrayToDictionary = arrayToDictionary;\n//# sourceMappingURL=arrayToDictionary.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvYXJyYXlUb0RpY3Rpb25hcnkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsV0FBVyx5RUFBeUU7QUFDckk7QUFDQTtBQUNBLEtBQUssSUFBSTtBQUNUO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxXQUFXLFlBQVk7QUFDeEU7QUFDQTtBQUNBLEtBQUssSUFBSTtBQUNULHlCQUF5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvYXJyYXlUb0RpY3Rpb25hcnkuanM/MTk0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXJyYXlUb0RpY3Rpb25hcnkgPSB2b2lkIDA7XG5jb25zdCB2YWxpZGF0ZUtleSA9IChrZXkpID0+IHtcbiAgICBpZiAoWydzdHJpbmcnLCAnbnVtYmVyJ10uaW5jbHVkZXModHlwZW9mIGtleSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn07XG5jb25zdCBhcnJheVRvRGljdGlvbmFyeSA9IChhcnJheSwgZ2V0S2V5LCBtdWx0aXBsZSkgPT4gbXVsdGlwbGVcbiAgICA/IGFycmF5LnJlZHVjZSgocHJldiwgY3VyKSA9PiB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3Qga2V5ID0gZ2V0S2V5KGN1cik7XG4gICAgICAgIGlmICh2YWxpZGF0ZUtleShrZXkpKSB7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBwcmV2KSwgeyBba2V5XTogWy4uLigoX2EgPSBwcmV2W2tleV0pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdKSwgY3VyXSB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcHJldjtcbiAgICB9LCB7fSlcbiAgICA6IGFycmF5LnJlZHVjZSgocHJldiwgY3VyKSA9PiB7XG4gICAgICAgIGNvbnN0IGtleSA9IGdldEtleShjdXIpO1xuICAgICAgICBpZiAodmFsaWRhdGVLZXkoa2V5KSkge1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcHJldiksIHsgW2tleV06IGN1ciB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcHJldjtcbiAgICB9LCB7fSk7XG5leHBvcnRzLmFycmF5VG9EaWN0aW9uYXJ5ID0gYXJyYXlUb0RpY3Rpb25hcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcnJheVRvRGljdGlvbmFyeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/arrayToDictionary.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/bufferUtils.js":
/*!*******************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/bufferUtils.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getChunkSize = exports.reverseBuffer = void 0;\nconst reverseBuffer = (src) => {\n    if (src.length < 1)\n        return src;\n    const buffer = Buffer.alloc(src.length);\n    let j = buffer.length - 1;\n    for (let i = 0; i < buffer.length / 2; i++) {\n        buffer[i] = src[j];\n        buffer[j] = src[i];\n        j--;\n    }\n    return buffer;\n};\nexports.reverseBuffer = reverseBuffer;\nconst getChunkSize = (n) => {\n    const buf = Buffer.allocUnsafe(1);\n    buf.writeUInt8(n);\n    return buf;\n};\nexports.getChunkSize = getChunkSize;\n//# sourceMappingURL=bufferUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvYnVmZmVyVXRpbHMuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLHFCQUFxQjtBQUM1QztBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsTUFBTTtBQUN6QjtBQUNBLG9CQUFvQix1QkFBdUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsZ0JBQWdCLE1BQU07QUFDdEI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi9idWZmZXJVdGlscy5qcz9iYzBiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRDaHVua1NpemUgPSBleHBvcnRzLnJldmVyc2VCdWZmZXIgPSB2b2lkIDA7XG5jb25zdCByZXZlcnNlQnVmZmVyID0gKHNyYykgPT4ge1xuICAgIGlmIChzcmMubGVuZ3RoIDwgMSlcbiAgICAgICAgcmV0dXJuIHNyYztcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2Moc3JjLmxlbmd0aCk7XG4gICAgbGV0IGogPSBidWZmZXIubGVuZ3RoIC0gMTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJ1ZmZlci5sZW5ndGggLyAyOyBpKyspIHtcbiAgICAgICAgYnVmZmVyW2ldID0gc3JjW2pdO1xuICAgICAgICBidWZmZXJbal0gPSBzcmNbaV07XG4gICAgICAgIGotLTtcbiAgICB9XG4gICAgcmV0dXJuIGJ1ZmZlcjtcbn07XG5leHBvcnRzLnJldmVyc2VCdWZmZXIgPSByZXZlcnNlQnVmZmVyO1xuY29uc3QgZ2V0Q2h1bmtTaXplID0gKG4pID0+IHtcbiAgICBjb25zdCBidWYgPSBCdWZmZXIuYWxsb2NVbnNhZmUoMSk7XG4gICAgYnVmLndyaXRlVUludDgobik7XG4gICAgcmV0dXJuIGJ1Zjtcbn07XG5leHBvcnRzLmdldENodW5rU2l6ZSA9IGdldENodW5rU2l6ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1ZmZlclV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/bufferUtils.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/bytesToHumanReadable.js":
/*!****************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/bytesToHumanReadable.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bytesToHumanReadable = void 0;\nconst units = ['B', 'KB', 'MB', 'GB', 'TB'];\nconst bytesToHumanReadable = (bytes) => {\n    let size = Math.abs(bytes);\n    let i = 0;\n    while (size >= 1024 || i >= units.length) {\n        size /= 1024;\n        i++;\n    }\n    return `${size.toFixed(1)} ${units[i]}`;\n};\nexports.bytesToHumanReadable = bytesToHumanReadable;\n//# sourceMappingURL=bytesToHumanReadable.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvYnl0ZXNUb0h1bWFuUmVhZGFibGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlCQUFpQixFQUFFLFNBQVM7QUFDMUM7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL2J5dGVzVG9IdW1hblJlYWRhYmxlLmpzP2YwZmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJ5dGVzVG9IdW1hblJlYWRhYmxlID0gdm9pZCAwO1xuY29uc3QgdW5pdHMgPSBbJ0InLCAnS0InLCAnTUInLCAnR0InLCAnVEInXTtcbmNvbnN0IGJ5dGVzVG9IdW1hblJlYWRhYmxlID0gKGJ5dGVzKSA9PiB7XG4gICAgbGV0IHNpemUgPSBNYXRoLmFicyhieXRlcyk7XG4gICAgbGV0IGkgPSAwO1xuICAgIHdoaWxlIChzaXplID49IDEwMjQgfHwgaSA+PSB1bml0cy5sZW5ndGgpIHtcbiAgICAgICAgc2l6ZSAvPSAxMDI0O1xuICAgICAgICBpKys7XG4gICAgfVxuICAgIHJldHVybiBgJHtzaXplLnRvRml4ZWQoMSl9ICR7dW5pdHNbaV19YDtcbn07XG5leHBvcnRzLmJ5dGVzVG9IdW1hblJlYWRhYmxlID0gYnl0ZXNUb0h1bWFuUmVhZGFibGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlc1RvSHVtYW5SZWFkYWJsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/bytesToHumanReadable.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/capitalizeFirstLetter.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/capitalizeFirstLetter.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.capitalizeFirstLetter = void 0;\nconst capitalizeFirstLetter = (str) => (str.charAt(0).toUpperCase() + str.slice(1));\nexports.capitalizeFirstLetter = capitalizeFirstLetter;\n//# sourceMappingURL=capitalizeFirstLetter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvY2FwaXRhbGl6ZUZpcnN0TGV0dGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QjtBQUM3QjtBQUNBLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvY2FwaXRhbGl6ZUZpcnN0TGV0dGVyLmpzPzc4NWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNhcGl0YWxpemVGaXJzdExldHRlciA9IHZvaWQgMDtcbmNvbnN0IGNhcGl0YWxpemVGaXJzdExldHRlciA9IChzdHIpID0+IChzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSkpO1xuZXhwb3J0cy5jYXBpdGFsaXplRmlyc3RMZXR0ZXIgPSBjYXBpdGFsaXplRmlyc3RMZXR0ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYXBpdGFsaXplRmlyc3RMZXR0ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/capitalizeFirstLetter.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/cloneObject.js":
/*!*******************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/cloneObject.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cloneObject = void 0;\nconst cloneObject = (obj) => {\n    const jsonString = JSON.stringify(obj);\n    if (jsonString === undefined) {\n        return obj;\n    }\n    return JSON.parse(jsonString);\n};\nexports.cloneObject = cloneObject;\n//# sourceMappingURL=cloneObject.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvY2xvbmVPYmplY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi9jbG9uZU9iamVjdC5qcz80MzZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jbG9uZU9iamVjdCA9IHZvaWQgMDtcbmNvbnN0IGNsb25lT2JqZWN0ID0gKG9iaikgPT4ge1xuICAgIGNvbnN0IGpzb25TdHJpbmcgPSBKU09OLnN0cmluZ2lmeShvYmopO1xuICAgIGlmIChqc29uU3RyaW5nID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gICAgcmV0dXJuIEpTT04ucGFyc2UoanNvblN0cmluZyk7XG59O1xuZXhwb3J0cy5jbG9uZU9iamVjdCA9IGNsb25lT2JqZWN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xvbmVPYmplY3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/cloneObject.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/countBytesInString.js":
/*!**************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/countBytesInString.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.countBytesInString = void 0;\nconst countBytesInString = (input) => encodeURI(input).split(/%..|./).length - 1;\nexports.countBytesInString = countBytesInString;\n//# sourceMappingURL=countBytesInString.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvY291bnRCeXRlc0luU3RyaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQjtBQUNBLDBCQUEwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvY291bnRCeXRlc0luU3RyaW5nLmpzPzMxNTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNvdW50Qnl0ZXNJblN0cmluZyA9IHZvaWQgMDtcbmNvbnN0IGNvdW50Qnl0ZXNJblN0cmluZyA9IChpbnB1dCkgPT4gZW5jb2RlVVJJKGlucHV0KS5zcGxpdCgvJS4ufC4vKS5sZW5ndGggLSAxO1xuZXhwb3J0cy5jb3VudEJ5dGVzSW5TdHJpbmcgPSBjb3VudEJ5dGVzSW5TdHJpbmc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb3VudEJ5dGVzSW5TdHJpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/countBytesInString.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/createCooldown.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/createCooldown.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createCooldown = void 0;\nconst createCooldown = (cooldownMs) => {\n    let last = 0;\n    return () => {\n        const now = Date.now();\n        if (now - last >= cooldownMs) {\n            last = now;\n            return true;\n        }\n        return false;\n    };\n};\nexports.createCooldown = createCooldown;\n//# sourceMappingURL=createCooldown.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvY3JlYXRlQ29vbGRvd24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL2NyZWF0ZUNvb2xkb3duLmpzPzRmNGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUNvb2xkb3duID0gdm9pZCAwO1xuY29uc3QgY3JlYXRlQ29vbGRvd24gPSAoY29vbGRvd25NcykgPT4ge1xuICAgIGxldCBsYXN0ID0gMDtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICAgICAgICBpZiAobm93IC0gbGFzdCA+PSBjb29sZG93bk1zKSB7XG4gICAgICAgICAgICBsYXN0ID0gbm93O1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG59O1xuZXhwb3J0cy5jcmVhdGVDb29sZG93biA9IGNyZWF0ZUNvb2xkb3duO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlQ29vbGRvd24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/createCooldown.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/createDeferred.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/createDeferred.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createDeferred = void 0;\nconst createDeferred = (id) => {\n    let localResolve = () => { };\n    let localReject = () => { };\n    const promise = new Promise((resolve, reject) => {\n        localResolve = resolve;\n        localReject = reject;\n    });\n    return {\n        id,\n        resolve: localResolve,\n        reject: localReject,\n        promise,\n    };\n};\nexports.createDeferred = createDeferred;\n//# sourceMappingURL=createDeferred.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvY3JlYXRlRGVmZXJyZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvY3JlYXRlRGVmZXJyZWQuanM/NTQwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlRGVmZXJyZWQgPSB2b2lkIDA7XG5jb25zdCBjcmVhdGVEZWZlcnJlZCA9IChpZCkgPT4ge1xuICAgIGxldCBsb2NhbFJlc29sdmUgPSAoKSA9PiB7IH07XG4gICAgbGV0IGxvY2FsUmVqZWN0ID0gKCkgPT4geyB9O1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGxvY2FsUmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgICAgIGxvY2FsUmVqZWN0ID0gcmVqZWN0O1xuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkLFxuICAgICAgICByZXNvbHZlOiBsb2NhbFJlc29sdmUsXG4gICAgICAgIHJlamVjdDogbG9jYWxSZWplY3QsXG4gICAgICAgIHByb21pc2UsXG4gICAgfTtcbn07XG5leHBvcnRzLmNyZWF0ZURlZmVycmVkID0gY3JlYXRlRGVmZXJyZWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVEZWZlcnJlZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/createDeferred.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/createDeferredManager.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/createDeferredManager.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createDeferredManager = void 0;\nconst createDeferred_1 = __webpack_require__(/*! ./createDeferred */ \"./node_modules/@trezor/utils/lib/createDeferred.js\");\nconst createDeferredManager = (options) => {\n    const { initialId = 0, timeout: defaultTimeout = 0, onTimeout } = options !== null && options !== void 0 ? options : {};\n    const promises = [];\n    let ID = initialId;\n    let timeoutHandle;\n    const length = () => promises.length;\n    const nextId = () => ID;\n    const replanTimeout = () => {\n        const now = Date.now();\n        const nearestDeadline = promises.reduce((prev, { deadline }) => (prev && deadline ? Math.min : Math.max)(prev, deadline), 0);\n        if (timeoutHandle)\n            clearTimeout(timeoutHandle);\n        timeoutHandle = nearestDeadline\n            ?\n                setTimeout(timeoutCallback, Math.max(nearestDeadline - now, 0))\n            : undefined;\n    };\n    const timeoutCallback = () => {\n        const now = Date.now();\n        promises\n            .filter(promise => promise.deadline && promise.deadline <= now)\n            .forEach(promise => {\n            onTimeout === null || onTimeout === void 0 ? void 0 : onTimeout(promise.id);\n            promise.deadline = 0;\n        });\n        replanTimeout();\n    };\n    const create = (timeout = defaultTimeout) => {\n        const promiseId = ID++;\n        const deferred = (0, createDeferred_1.createDeferred)(promiseId);\n        const deadline = timeout && Date.now() + timeout;\n        promises.push(Object.assign(Object.assign({}, deferred), { deadline }));\n        if (timeout)\n            replanTimeout();\n        return { promiseId, promise: deferred.promise };\n    };\n    const extract = (promiseId) => {\n        const index = promises.findIndex(({ id }) => id === promiseId);\n        const [promise] = index >= 0 ? promises.splice(index, 1) : [undefined];\n        if (promise === null || promise === void 0 ? void 0 : promise.deadline)\n            replanTimeout();\n        return promise;\n    };\n    const resolve = (promiseId, value) => {\n        const promise = extract(promiseId);\n        promise === null || promise === void 0 ? void 0 : promise.resolve(value);\n        return !!promise;\n    };\n    const reject = (promiseId, error) => {\n        const promise = extract(promiseId);\n        promise === null || promise === void 0 ? void 0 : promise.reject(error);\n        return !!promise;\n    };\n    const rejectAll = (error) => {\n        promises.forEach(promise => promise.reject(error));\n        const deleted = promises.splice(0, promises.length);\n        if (deleted.length)\n            replanTimeout();\n    };\n    return { length, nextId, create, resolve, reject, rejectAll };\n};\nexports.createDeferredManager = createDeferredManager;\n//# sourceMappingURL=createDeferredManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvY3JlYXRlRGVmZXJyZWRNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QjtBQUM3Qix5QkFBeUIsbUJBQU8sQ0FBQyw0RUFBa0I7QUFDbkQ7QUFDQSxZQUFZLHdEQUF3RDtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxVQUFVO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELGVBQWUsVUFBVTtBQUM3RTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSw0Q0FBNEMsSUFBSTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSw2QkFBNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL2NyZWF0ZURlZmVycmVkTWFuYWdlci5qcz8wYjZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVEZWZlcnJlZE1hbmFnZXIgPSB2b2lkIDA7XG5jb25zdCBjcmVhdGVEZWZlcnJlZF8xID0gcmVxdWlyZShcIi4vY3JlYXRlRGVmZXJyZWRcIik7XG5jb25zdCBjcmVhdGVEZWZlcnJlZE1hbmFnZXIgPSAob3B0aW9ucykgPT4ge1xuICAgIGNvbnN0IHsgaW5pdGlhbElkID0gMCwgdGltZW91dDogZGVmYXVsdFRpbWVvdXQgPSAwLCBvblRpbWVvdXQgfSA9IG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwID8gb3B0aW9ucyA6IHt9O1xuICAgIGNvbnN0IHByb21pc2VzID0gW107XG4gICAgbGV0IElEID0gaW5pdGlhbElkO1xuICAgIGxldCB0aW1lb3V0SGFuZGxlO1xuICAgIGNvbnN0IGxlbmd0aCA9ICgpID0+IHByb21pc2VzLmxlbmd0aDtcbiAgICBjb25zdCBuZXh0SWQgPSAoKSA9PiBJRDtcbiAgICBjb25zdCByZXBsYW5UaW1lb3V0ID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICAgICAgICBjb25zdCBuZWFyZXN0RGVhZGxpbmUgPSBwcm9taXNlcy5yZWR1Y2UoKHByZXYsIHsgZGVhZGxpbmUgfSkgPT4gKHByZXYgJiYgZGVhZGxpbmUgPyBNYXRoLm1pbiA6IE1hdGgubWF4KShwcmV2LCBkZWFkbGluZSksIDApO1xuICAgICAgICBpZiAodGltZW91dEhhbmRsZSlcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SGFuZGxlKTtcbiAgICAgICAgdGltZW91dEhhbmRsZSA9IG5lYXJlc3REZWFkbGluZVxuICAgICAgICAgICAgP1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQodGltZW91dENhbGxiYWNrLCBNYXRoLm1heChuZWFyZXN0RGVhZGxpbmUgLSBub3csIDApKVxuICAgICAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICBjb25zdCB0aW1lb3V0Q2FsbGJhY2sgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgIHByb21pc2VzXG4gICAgICAgICAgICAuZmlsdGVyKHByb21pc2UgPT4gcHJvbWlzZS5kZWFkbGluZSAmJiBwcm9taXNlLmRlYWRsaW5lIDw9IG5vdylcbiAgICAgICAgICAgIC5mb3JFYWNoKHByb21pc2UgPT4ge1xuICAgICAgICAgICAgb25UaW1lb3V0ID09PSBudWxsIHx8IG9uVGltZW91dCA9PT0gdm9pZCAwID8gdm9pZCAwIDogb25UaW1lb3V0KHByb21pc2UuaWQpO1xuICAgICAgICAgICAgcHJvbWlzZS5kZWFkbGluZSA9IDA7XG4gICAgICAgIH0pO1xuICAgICAgICByZXBsYW5UaW1lb3V0KCk7XG4gICAgfTtcbiAgICBjb25zdCBjcmVhdGUgPSAodGltZW91dCA9IGRlZmF1bHRUaW1lb3V0KSA9PiB7XG4gICAgICAgIGNvbnN0IHByb21pc2VJZCA9IElEKys7XG4gICAgICAgIGNvbnN0IGRlZmVycmVkID0gKDAsIGNyZWF0ZURlZmVycmVkXzEuY3JlYXRlRGVmZXJyZWQpKHByb21pc2VJZCk7XG4gICAgICAgIGNvbnN0IGRlYWRsaW5lID0gdGltZW91dCAmJiBEYXRlLm5vdygpICsgdGltZW91dDtcbiAgICAgICAgcHJvbWlzZXMucHVzaChPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGRlZmVycmVkKSwgeyBkZWFkbGluZSB9KSk7XG4gICAgICAgIGlmICh0aW1lb3V0KVxuICAgICAgICAgICAgcmVwbGFuVGltZW91dCgpO1xuICAgICAgICByZXR1cm4geyBwcm9taXNlSWQsIHByb21pc2U6IGRlZmVycmVkLnByb21pc2UgfTtcbiAgICB9O1xuICAgIGNvbnN0IGV4dHJhY3QgPSAocHJvbWlzZUlkKSA9PiB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gcHJvbWlzZXMuZmluZEluZGV4KCh7IGlkIH0pID0+IGlkID09PSBwcm9taXNlSWQpO1xuICAgICAgICBjb25zdCBbcHJvbWlzZV0gPSBpbmRleCA+PSAwID8gcHJvbWlzZXMuc3BsaWNlKGluZGV4LCAxKSA6IFt1bmRlZmluZWRdO1xuICAgICAgICBpZiAocHJvbWlzZSA9PT0gbnVsbCB8fCBwcm9taXNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwcm9taXNlLmRlYWRsaW5lKVxuICAgICAgICAgICAgcmVwbGFuVGltZW91dCgpO1xuICAgICAgICByZXR1cm4gcHJvbWlzZTtcbiAgICB9O1xuICAgIGNvbnN0IHJlc29sdmUgPSAocHJvbWlzZUlkLCB2YWx1ZSkgPT4ge1xuICAgICAgICBjb25zdCBwcm9taXNlID0gZXh0cmFjdChwcm9taXNlSWQpO1xuICAgICAgICBwcm9taXNlID09PSBudWxsIHx8IHByb21pc2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByb21pc2UucmVzb2x2ZSh2YWx1ZSk7XG4gICAgICAgIHJldHVybiAhIXByb21pc2U7XG4gICAgfTtcbiAgICBjb25zdCByZWplY3QgPSAocHJvbWlzZUlkLCBlcnJvcikgPT4ge1xuICAgICAgICBjb25zdCBwcm9taXNlID0gZXh0cmFjdChwcm9taXNlSWQpO1xuICAgICAgICBwcm9taXNlID09PSBudWxsIHx8IHByb21pc2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICAgICAgcmV0dXJuICEhcHJvbWlzZTtcbiAgICB9O1xuICAgIGNvbnN0IHJlamVjdEFsbCA9IChlcnJvcikgPT4ge1xuICAgICAgICBwcm9taXNlcy5mb3JFYWNoKHByb21pc2UgPT4gcHJvbWlzZS5yZWplY3QoZXJyb3IpKTtcbiAgICAgICAgY29uc3QgZGVsZXRlZCA9IHByb21pc2VzLnNwbGljZSgwLCBwcm9taXNlcy5sZW5ndGgpO1xuICAgICAgICBpZiAoZGVsZXRlZC5sZW5ndGgpXG4gICAgICAgICAgICByZXBsYW5UaW1lb3V0KCk7XG4gICAgfTtcbiAgICByZXR1cm4geyBsZW5ndGgsIG5leHRJZCwgY3JlYXRlLCByZXNvbHZlLCByZWplY3QsIHJlamVjdEFsbCB9O1xufTtcbmV4cG9ydHMuY3JlYXRlRGVmZXJyZWRNYW5hZ2VyID0gY3JlYXRlRGVmZXJyZWRNYW5hZ2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlRGVmZXJyZWRNYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/createDeferredManager.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/createTimeoutPromise.js":
/*!****************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/createTimeoutPromise.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createTimeoutPromise = void 0;\nconst createTimeoutPromise = (timeout) => new Promise(resolve => setTimeout(resolve, timeout));\nexports.createTimeoutPromise = createTimeoutPromise;\n//# sourceMappingURL=createTimeoutPromise.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvY3JlYXRlVGltZW91dFByb21pc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCO0FBQ0EsNEJBQTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi9jcmVhdGVUaW1lb3V0UHJvbWlzZS5qcz8yZDBjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVUaW1lb3V0UHJvbWlzZSA9IHZvaWQgMDtcbmNvbnN0IGNyZWF0ZVRpbWVvdXRQcm9taXNlID0gKHRpbWVvdXQpID0+IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCB0aW1lb3V0KSk7XG5leHBvcnRzLmNyZWF0ZVRpbWVvdXRQcm9taXNlID0gY3JlYXRlVGltZW91dFByb21pc2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVUaW1lb3V0UHJvbWlzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/createTimeoutPromise.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/enumUtils.js":
/*!*****************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/enumUtils.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getValueByKey = exports.getKeyByValue = void 0;\nfunction getKeyByValue(obj, value) {\n    return obj && Object.keys(obj).find(x => obj[x] === value);\n}\nexports.getKeyByValue = getKeyByValue;\nfunction getValueByKey(obj, enumKey) {\n    const key = obj && Object.keys(obj).find(x => x === enumKey);\n    return key && obj[key];\n}\nexports.getValueByKey = getValueByKey;\n//# sourceMappingURL=enumUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvZW51bVV0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLHFCQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL2VudW1VdGlscy5qcz9iZjFhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRWYWx1ZUJ5S2V5ID0gZXhwb3J0cy5nZXRLZXlCeVZhbHVlID0gdm9pZCAwO1xuZnVuY3Rpb24gZ2V0S2V5QnlWYWx1ZShvYmosIHZhbHVlKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBPYmplY3Qua2V5cyhvYmopLmZpbmQoeCA9PiBvYmpbeF0gPT09IHZhbHVlKTtcbn1cbmV4cG9ydHMuZ2V0S2V5QnlWYWx1ZSA9IGdldEtleUJ5VmFsdWU7XG5mdW5jdGlvbiBnZXRWYWx1ZUJ5S2V5KG9iaiwgZW51bUtleSkge1xuICAgIGNvbnN0IGtleSA9IG9iaiAmJiBPYmplY3Qua2V5cyhvYmopLmZpbmQoeCA9PiB4ID09PSBlbnVtS2V5KTtcbiAgICByZXR1cm4ga2V5ICYmIG9ialtrZXldO1xufVxuZXhwb3J0cy5nZXRWYWx1ZUJ5S2V5ID0gZ2V0VmFsdWVCeUtleTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudW1VdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/enumUtils.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/getLocaleSeparators.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/getLocaleSeparators.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getLocaleSeparators = void 0;\nconst getLocaleSeparators = (locale) => {\n    var _a, _b;\n    const numberFormat = new Intl.NumberFormat(locale);\n    const parts = numberFormat.formatToParts(10000.1);\n    const decimalSeparator = (_a = parts.find(({ type }) => type === 'decimal')) === null || _a === void 0 ? void 0 : _a.value;\n    const thousandsSeparator = (_b = parts.find(({ type }) => type === 'group')) === null || _b === void 0 ? void 0 : _b.value;\n    return { decimalSeparator, thousandsSeparator };\n};\nexports.getLocaleSeparators = getLocaleSeparators;\n//# sourceMappingURL=getLocaleSeparators.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvZ2V0TG9jYWxlU2VwYXJhdG9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsTUFBTTtBQUN2RCxtREFBbUQsTUFBTTtBQUN6RCxhQUFhO0FBQ2I7QUFDQSwyQkFBMkI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL2dldExvY2FsZVNlcGFyYXRvcnMuanM/ODgxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0TG9jYWxlU2VwYXJhdG9ycyA9IHZvaWQgMDtcbmNvbnN0IGdldExvY2FsZVNlcGFyYXRvcnMgPSAobG9jYWxlKSA9PiB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCBudW1iZXJGb3JtYXQgPSBuZXcgSW50bC5OdW1iZXJGb3JtYXQobG9jYWxlKTtcbiAgICBjb25zdCBwYXJ0cyA9IG51bWJlckZvcm1hdC5mb3JtYXRUb1BhcnRzKDEwMDAwLjEpO1xuICAgIGNvbnN0IGRlY2ltYWxTZXBhcmF0b3IgPSAoX2EgPSBwYXJ0cy5maW5kKCh7IHR5cGUgfSkgPT4gdHlwZSA9PT0gJ2RlY2ltYWwnKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnZhbHVlO1xuICAgIGNvbnN0IHRob3VzYW5kc1NlcGFyYXRvciA9IChfYiA9IHBhcnRzLmZpbmQoKHsgdHlwZSB9KSA9PiB0eXBlID09PSAnZ3JvdXAnKSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnZhbHVlO1xuICAgIHJldHVybiB7IGRlY2ltYWxTZXBhcmF0b3IsIHRob3VzYW5kc1NlcGFyYXRvciB9O1xufTtcbmV4cG9ydHMuZ2V0TG9jYWxlU2VwYXJhdG9ycyA9IGdldExvY2FsZVNlcGFyYXRvcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRMb2NhbGVTZXBhcmF0b3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/getLocaleSeparators.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/getNumberFromPixelString.js":
/*!********************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/getNumberFromPixelString.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getNumberFromPixelString = void 0;\nconst getNumberFromPixelString = (size) => parseInt(size.replace('px', ''), 10);\nexports.getNumberFromPixelString = getNumberFromPixelString;\n//# sourceMappingURL=getNumberFromPixelString.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvZ2V0TnVtYmVyRnJvbVBpeGVsU3RyaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdDQUFnQztBQUNoQztBQUNBLGdDQUFnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvZ2V0TnVtYmVyRnJvbVBpeGVsU3RyaW5nLmpzP2U3ZTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldE51bWJlckZyb21QaXhlbFN0cmluZyA9IHZvaWQgMDtcbmNvbnN0IGdldE51bWJlckZyb21QaXhlbFN0cmluZyA9IChzaXplKSA9PiBwYXJzZUludChzaXplLnJlcGxhY2UoJ3B4JywgJycpLCAxMCk7XG5leHBvcnRzLmdldE51bWJlckZyb21QaXhlbFN0cmluZyA9IGdldE51bWJlckZyb21QaXhlbFN0cmluZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldE51bWJlckZyb21QaXhlbFN0cmluZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/getNumberFromPixelString.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/getRandomNumberInRange.js":
/*!******************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/getRandomNumberInRange.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getRandomNumberInRange = void 0;\nconst getRandomNumberInRange = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexports.getRandomNumberInRange = getRandomNumberInRange;\n//# sourceMappingURL=getRandomNumberInRange.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvZ2V0UmFuZG9tTnVtYmVySW5SYW5nZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUI7QUFDQSw4QkFBOEI7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL2dldFJhbmRvbU51bWJlckluUmFuZ2UuanM/MTYxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0UmFuZG9tTnVtYmVySW5SYW5nZSA9IHZvaWQgMDtcbmNvbnN0IGdldFJhbmRvbU51bWJlckluUmFuZ2UgPSAobWluLCBtYXgpID0+IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKSkgKyBtaW47XG5leHBvcnRzLmdldFJhbmRvbU51bWJlckluUmFuZ2UgPSBnZXRSYW5kb21OdW1iZXJJblJhbmdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0UmFuZG9tTnVtYmVySW5SYW5nZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/getRandomNumberInRange.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/getSynchronize.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/getSynchronize.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getSynchronize = void 0;\nconst getSynchronize = () => {\n    let lock;\n    return (action) => {\n        const newLock = (lock !== null && lock !== void 0 ? lock : Promise.resolve())\n            .catch(() => { })\n            .then(action)\n            .finally(() => {\n            if (lock === newLock) {\n                lock = undefined;\n            }\n        });\n        lock = newLock;\n        return lock;\n    };\n};\nexports.getSynchronize = getSynchronize;\n//# sourceMappingURL=getSynchronize.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvZ2V0U3luY2hyb25pemUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL2dldFN5bmNocm9uaXplLmpzPzRiZWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFN5bmNocm9uaXplID0gdm9pZCAwO1xuY29uc3QgZ2V0U3luY2hyb25pemUgPSAoKSA9PiB7XG4gICAgbGV0IGxvY2s7XG4gICAgcmV0dXJuIChhY3Rpb24pID0+IHtcbiAgICAgICAgY29uc3QgbmV3TG9jayA9IChsb2NrICE9PSBudWxsICYmIGxvY2sgIT09IHZvaWQgMCA/IGxvY2sgOiBQcm9taXNlLnJlc29sdmUoKSlcbiAgICAgICAgICAgIC5jYXRjaCgoKSA9PiB7IH0pXG4gICAgICAgICAgICAudGhlbihhY3Rpb24pXG4gICAgICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICBpZiAobG9jayA9PT0gbmV3TG9jaykge1xuICAgICAgICAgICAgICAgIGxvY2sgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBsb2NrID0gbmV3TG9jaztcbiAgICAgICAgcmV0dXJuIGxvY2s7XG4gICAgfTtcbn07XG5leHBvcnRzLmdldFN5bmNocm9uaXplID0gZ2V0U3luY2hyb25pemU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRTeW5jaHJvbml6ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/getSynchronize.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/getWeakRandomId.js":
/*!***********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/getWeakRandomId.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getWeakRandomId = void 0;\nconst getWeakRandomId = (length) => {\n    let id = '';\n    const list = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < length; i++) {\n        id += list.charAt(Math.floor(Math.random() * list.length));\n    }\n    return id;\n};\nexports.getWeakRandomId = getWeakRandomId;\n//# sourceMappingURL=getWeakRandomId.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvZ2V0V2Vha1JhbmRvbUlkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvZ2V0V2Vha1JhbmRvbUlkLmpzP2UwMmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFdlYWtSYW5kb21JZCA9IHZvaWQgMDtcbmNvbnN0IGdldFdlYWtSYW5kb21JZCA9IChsZW5ndGgpID0+IHtcbiAgICBsZXQgaWQgPSAnJztcbiAgICBjb25zdCBsaXN0ID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5JztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlkICs9IGxpc3QuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGxpc3QubGVuZ3RoKSk7XG4gICAgfVxuICAgIHJldHVybiBpZDtcbn07XG5leHBvcnRzLmdldFdlYWtSYW5kb21JZCA9IGdldFdlYWtSYW5kb21JZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFdlYWtSYW5kb21JZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/getWeakRandomId.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/hasUppercaseLetter.js":
/*!**************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/hasUppercaseLetter.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasUppercaseLetter = void 0;\nconst HAS_UPPERCASE_LATER_REGEXP = new RegExp('^(.*[A-Z].*)$');\nconst hasUppercaseLetter = (value) => HAS_UPPERCASE_LATER_REGEXP.test(value);\nexports.hasUppercaseLetter = hasUppercaseLetter;\n//# sourceMappingURL=hasUppercaseLetter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvaGFzVXBwZXJjYXNlTGV0dGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi9oYXNVcHBlcmNhc2VMZXR0ZXIuanM/ODlkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaGFzVXBwZXJjYXNlTGV0dGVyID0gdm9pZCAwO1xuY29uc3QgSEFTX1VQUEVSQ0FTRV9MQVRFUl9SRUdFWFAgPSBuZXcgUmVnRXhwKCdeKC4qW0EtWl0uKikkJyk7XG5jb25zdCBoYXNVcHBlcmNhc2VMZXR0ZXIgPSAodmFsdWUpID0+IEhBU19VUFBFUkNBU0VfTEFURVJfUkVHRVhQLnRlc3QodmFsdWUpO1xuZXhwb3J0cy5oYXNVcHBlcmNhc2VMZXR0ZXIgPSBoYXNVcHBlcmNhc2VMZXR0ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNVcHBlcmNhc2VMZXR0ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/hasUppercaseLetter.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.xssFilters = exports.versionUtils = exports.enumUtils = exports.bufferUtils = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nexports.bufferUtils = tslib_1.__importStar(__webpack_require__(/*! ./bufferUtils */ \"./node_modules/@trezor/utils/lib/bufferUtils.js\"));\nexports.enumUtils = tslib_1.__importStar(__webpack_require__(/*! ./enumUtils */ \"./node_modules/@trezor/utils/lib/enumUtils.js\"));\nexports.versionUtils = tslib_1.__importStar(__webpack_require__(/*! ./versionUtils */ \"./node_modules/@trezor/utils/lib/versionUtils.js\"));\nexports.xssFilters = tslib_1.__importStar(__webpack_require__(/*! ./xssFilters */ \"./node_modules/@trezor/utils/lib/xssFilters.js\"));\ntslib_1.__exportStar(__webpack_require__(/*! ./addDashesToSpaces */ \"./node_modules/@trezor/utils/lib/addDashesToSpaces.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./arrayDistinct */ \"./node_modules/@trezor/utils/lib/arrayDistinct.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./arrayPartition */ \"./node_modules/@trezor/utils/lib/arrayPartition.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./arrayShuffle */ \"./node_modules/@trezor/utils/lib/arrayShuffle.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./arrayToDictionary */ \"./node_modules/@trezor/utils/lib/arrayToDictionary.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./bytesToHumanReadable */ \"./node_modules/@trezor/utils/lib/bytesToHumanReadable.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./capitalizeFirstLetter */ \"./node_modules/@trezor/utils/lib/capitalizeFirstLetter.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./cloneObject */ \"./node_modules/@trezor/utils/lib/cloneObject.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./countBytesInString */ \"./node_modules/@trezor/utils/lib/countBytesInString.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./createCooldown */ \"./node_modules/@trezor/utils/lib/createCooldown.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./createDeferred */ \"./node_modules/@trezor/utils/lib/createDeferred.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./createDeferredManager */ \"./node_modules/@trezor/utils/lib/createDeferredManager.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./createTimeoutPromise */ \"./node_modules/@trezor/utils/lib/createTimeoutPromise.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./getLocaleSeparators */ \"./node_modules/@trezor/utils/lib/getLocaleSeparators.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./getNumberFromPixelString */ \"./node_modules/@trezor/utils/lib/getNumberFromPixelString.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./getRandomNumberInRange */ \"./node_modules/@trezor/utils/lib/getRandomNumberInRange.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./getSynchronize */ \"./node_modules/@trezor/utils/lib/getSynchronize.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./getWeakRandomId */ \"./node_modules/@trezor/utils/lib/getWeakRandomId.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./hasUppercaseLetter */ \"./node_modules/@trezor/utils/lib/hasUppercaseLetter.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./isAscii */ \"./node_modules/@trezor/utils/lib/isAscii.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./isHex */ \"./node_modules/@trezor/utils/lib/isHex.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./isNotUndefined */ \"./node_modules/@trezor/utils/lib/isNotUndefined.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./isUrl */ \"./node_modules/@trezor/utils/lib/isUrl.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./mergeDeepObject */ \"./node_modules/@trezor/utils/lib/mergeDeepObject.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./objectPartition */ \"./node_modules/@trezor/utils/lib/objectPartition.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./parseElectrumUrl */ \"./node_modules/@trezor/utils/lib/parseElectrumUrl.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./parseHostname */ \"./node_modules/@trezor/utils/lib/parseHostname.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./promiseAllSequence */ \"./node_modules/@trezor/utils/lib/promiseAllSequence.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./redactUserPath */ \"./node_modules/@trezor/utils/lib/redactUserPath.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./scheduleAction */ \"./node_modules/@trezor/utils/lib/scheduleAction.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./splitStringEveryNCharacters */ \"./node_modules/@trezor/utils/lib/splitStringEveryNCharacters.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./throwError */ \"./node_modules/@trezor/utils/lib/throwError.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./topologicalSort */ \"./node_modules/@trezor/utils/lib/topologicalSort.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./truncateMiddle */ \"./node_modules/@trezor/utils/lib/truncateMiddle.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./typedEventEmitter */ \"./node_modules/@trezor/utils/lib/typedEventEmitter.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./urlToOnion */ \"./node_modules/@trezor/utils/lib/urlToOnion.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLEdBQUcsb0JBQW9CLEdBQUcsaUJBQWlCLEdBQUcsbUJBQW1CO0FBQ25GLGdCQUFnQixtQkFBTyxDQUFDLGlEQUFPO0FBQy9CLG1CQUFtQix3QkFBd0IsbUJBQU8sQ0FBQyxzRUFBZTtBQUNsRSxpQkFBaUIsd0JBQXdCLG1CQUFPLENBQUMsa0VBQWE7QUFDOUQsb0JBQW9CLHdCQUF3QixtQkFBTyxDQUFDLHdFQUFnQjtBQUNwRSxrQkFBa0Isd0JBQXdCLG1CQUFPLENBQUMsb0VBQWM7QUFDaEUscUJBQXFCLG1CQUFPLENBQUMsa0ZBQXFCO0FBQ2xELHFCQUFxQixtQkFBTyxDQUFDLDBFQUFpQjtBQUM5QyxxQkFBcUIsbUJBQU8sQ0FBQyw0RUFBa0I7QUFDL0MscUJBQXFCLG1CQUFPLENBQUMsd0VBQWdCO0FBQzdDLHFCQUFxQixtQkFBTyxDQUFDLGtGQUFxQjtBQUNsRCxxQkFBcUIsbUJBQU8sQ0FBQyx3RkFBd0I7QUFDckQscUJBQXFCLG1CQUFPLENBQUMsMEZBQXlCO0FBQ3RELHFCQUFxQixtQkFBTyxDQUFDLHNFQUFlO0FBQzVDLHFCQUFxQixtQkFBTyxDQUFDLG9GQUFzQjtBQUNuRCxxQkFBcUIsbUJBQU8sQ0FBQyw0RUFBa0I7QUFDL0MscUJBQXFCLG1CQUFPLENBQUMsNEVBQWtCO0FBQy9DLHFCQUFxQixtQkFBTyxDQUFDLDBGQUF5QjtBQUN0RCxxQkFBcUIsbUJBQU8sQ0FBQyx3RkFBd0I7QUFDckQscUJBQXFCLG1CQUFPLENBQUMsc0ZBQXVCO0FBQ3BELHFCQUFxQixtQkFBTyxDQUFDLGdHQUE0QjtBQUN6RCxxQkFBcUIsbUJBQU8sQ0FBQyw0RkFBMEI7QUFDdkQscUJBQXFCLG1CQUFPLENBQUMsNEVBQWtCO0FBQy9DLHFCQUFxQixtQkFBTyxDQUFDLDhFQUFtQjtBQUNoRCxxQkFBcUIsbUJBQU8sQ0FBQyxvRkFBc0I7QUFDbkQscUJBQXFCLG1CQUFPLENBQUMsOERBQVc7QUFDeEMscUJBQXFCLG1CQUFPLENBQUMsMERBQVM7QUFDdEMscUJBQXFCLG1CQUFPLENBQUMsNEVBQWtCO0FBQy9DLHFCQUFxQixtQkFBTyxDQUFDLDBEQUFTO0FBQ3RDLHFCQUFxQixtQkFBTyxDQUFDLDhFQUFtQjtBQUNoRCxxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBbUI7QUFDaEQscUJBQXFCLG1CQUFPLENBQUMsZ0ZBQW9CO0FBQ2pELHFCQUFxQixtQkFBTyxDQUFDLDBFQUFpQjtBQUM5QyxxQkFBcUIsbUJBQU8sQ0FBQyxvRkFBc0I7QUFDbkQscUJBQXFCLG1CQUFPLENBQUMsNEVBQWtCO0FBQy9DLHFCQUFxQixtQkFBTyxDQUFDLDRFQUFrQjtBQUMvQyxxQkFBcUIsbUJBQU8sQ0FBQyxzR0FBK0I7QUFDNUQscUJBQXFCLG1CQUFPLENBQUMsb0VBQWM7QUFDM0MscUJBQXFCLG1CQUFPLENBQUMsOEVBQW1CO0FBQ2hELHFCQUFxQixtQkFBTyxDQUFDLDRFQUFrQjtBQUMvQyxxQkFBcUIsbUJBQU8sQ0FBQyxrRkFBcUI7QUFDbEQscUJBQXFCLG1CQUFPLENBQUMsb0VBQWM7QUFDM0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL2luZGV4LmpzPzUwZDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnhzc0ZpbHRlcnMgPSBleHBvcnRzLnZlcnNpb25VdGlscyA9IGV4cG9ydHMuZW51bVV0aWxzID0gZXhwb3J0cy5idWZmZXJVdGlscyA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5leHBvcnRzLmJ1ZmZlclV0aWxzID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vYnVmZmVyVXRpbHNcIikpO1xuZXhwb3J0cy5lbnVtVXRpbHMgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9lbnVtVXRpbHNcIikpO1xuZXhwb3J0cy52ZXJzaW9uVXRpbHMgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi92ZXJzaW9uVXRpbHNcIikpO1xuZXhwb3J0cy54c3NGaWx0ZXJzID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcIi4veHNzRmlsdGVyc1wiKSk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hZGREYXNoZXNUb1NwYWNlc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcnJheURpc3RpbmN0XCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FycmF5UGFydGl0aW9uXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FycmF5U2h1ZmZsZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcnJheVRvRGljdGlvbmFyeVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9ieXRlc1RvSHVtYW5SZWFkYWJsZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jYXBpdGFsaXplRmlyc3RMZXR0ZXJcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY2xvbmVPYmplY3RcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY291bnRCeXRlc0luU3RyaW5nXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyZWF0ZUNvb2xkb3duXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyZWF0ZURlZmVycmVkXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyZWF0ZURlZmVycmVkTWFuYWdlclwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jcmVhdGVUaW1lb3V0UHJvbWlzZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9nZXRMb2NhbGVTZXBhcmF0b3JzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2dldE51bWJlckZyb21QaXhlbFN0cmluZ1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9nZXRSYW5kb21OdW1iZXJJblJhbmdlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2dldFN5bmNocm9uaXplXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2dldFdlYWtSYW5kb21JZFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oYXNVcHBlcmNhc2VMZXR0ZXJcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaXNBc2NpaVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9pc0hleFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9pc05vdFVuZGVmaW5lZFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9pc1VybFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tZXJnZURlZXBPYmplY3RcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vb2JqZWN0UGFydGl0aW9uXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BhcnNlRWxlY3RydW1VcmxcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGFyc2VIb3N0bmFtZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm9taXNlQWxsU2VxdWVuY2VcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcmVkYWN0VXNlclBhdGhcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2NoZWR1bGVBY3Rpb25cIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc3BsaXRTdHJpbmdFdmVyeU5DaGFyYWN0ZXJzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Rocm93RXJyb3JcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdG9wb2xvZ2ljYWxTb3J0XCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RydW5jYXRlTWlkZGxlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVkRXZlbnRFbWl0dGVyXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3VybFRvT25pb25cIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/isAscii.js":
/*!***************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/isAscii.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isAscii = void 0;\nfunction isAscii(value) {\n    if (!value)\n        return true;\n    return /^[\\x00-\\x7F]*$/.test(value);\n}\nexports.isAscii = isAscii;\n//# sourceMappingURL=isAscii.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvaXNBc2NpaS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvaXNBc2NpaS5qcz85Yjg0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0FzY2lpID0gdm9pZCAwO1xuZnVuY3Rpb24gaXNBc2NpaSh2YWx1ZSkge1xuICAgIGlmICghdmFsdWUpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIHJldHVybiAvXltcXHgwMC1cXHg3Rl0qJC8udGVzdCh2YWx1ZSk7XG59XG5leHBvcnRzLmlzQXNjaWkgPSBpc0FzY2lpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNBc2NpaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/isAscii.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/isHex.js":
/*!*************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/isHex.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isHex = void 0;\nconst isHex = (str) => {\n    const regExp = /^(0x|0X)?[0-9A-Fa-f]+$/g;\n    return regExp.test(str);\n};\nexports.isHex = isHex;\n//# sourceMappingURL=isHex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvaXNIZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi9pc0hleC5qcz8yZDRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0hleCA9IHZvaWQgMDtcbmNvbnN0IGlzSGV4ID0gKHN0cikgPT4ge1xuICAgIGNvbnN0IHJlZ0V4cCA9IC9eKDB4fDBYKT9bMC05QS1GYS1mXSskL2c7XG4gICAgcmV0dXJuIHJlZ0V4cC50ZXN0KHN0cik7XG59O1xuZXhwb3J0cy5pc0hleCA9IGlzSGV4O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNIZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/isHex.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/isNotUndefined.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/isNotUndefined.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isNotUndefined = void 0;\nconst isNotUndefined = (item) => typeof item !== 'undefined';\nexports.isNotUndefined = isNotUndefined;\n//# sourceMappingURL=isNotUndefined.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvaXNOb3RVbmRlZmluZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0Esc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi9pc05vdFVuZGVmaW5lZC5qcz83NmM3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc05vdFVuZGVmaW5lZCA9IHZvaWQgMDtcbmNvbnN0IGlzTm90VW5kZWZpbmVkID0gKGl0ZW0pID0+IHR5cGVvZiBpdGVtICE9PSAndW5kZWZpbmVkJztcbmV4cG9ydHMuaXNOb3RVbmRlZmluZWQgPSBpc05vdFVuZGVmaW5lZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzTm90VW5kZWZpbmVkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/isNotUndefined.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/isUrl.js":
/*!*************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/isUrl.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isUrl = void 0;\nconst URL_REGEXP = /^(http|ws)s?:\\/\\/[a-z0-9]([a-z0-9.-]+)?(:[0-9]{1,5})?((\\/)?(([a-z0-9-_])+(\\/)?)+)$/i;\nconst isUrl = (value) => URL_REGEXP.test(value);\nexports.isUrl = isUrl;\n//# sourceMappingURL=isUrl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvaXNVcmwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiLG1FQUFtRSxJQUFJO0FBQ3ZFO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi9pc1VybC5qcz80MmIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1VybCA9IHZvaWQgMDtcbmNvbnN0IFVSTF9SRUdFWFAgPSAvXihodHRwfHdzKXM/OlxcL1xcL1thLXowLTldKFthLXowLTkuLV0rKT8oOlswLTldezEsNX0pPygoXFwvKT8oKFthLXowLTktX10pKyhcXC8pPykrKSQvaTtcbmNvbnN0IGlzVXJsID0gKHZhbHVlKSA9PiBVUkxfUkVHRVhQLnRlc3QodmFsdWUpO1xuZXhwb3J0cy5pc1VybCA9IGlzVXJsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNVcmwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/isUrl.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/mergeDeepObject.js":
/*!***********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/mergeDeepObject.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeDeepObject = void 0;\nconst isObject = (obj) => {\n    if (typeof obj === 'object' && obj !== null) {\n        if (typeof Object.getPrototypeOf === 'function') {\n            const prototype = Object.getPrototypeOf(obj);\n            return prototype === Object.prototype || prototype === null;\n        }\n        return Object.prototype.toString.call(obj) === '[object Object]';\n    }\n    return false;\n};\nconst mergeDeepObject = (...objects) => objects.reduce((result, current) => {\n    if (Array.isArray(current)) {\n        throw new TypeError('Arguments provided to ts-deepmerge must be objects, not arrays.');\n    }\n    Object.keys(current).forEach(key => {\n        if (['__proto__', 'constructor', 'prototype'].includes(key)) {\n            return;\n        }\n        if (Array.isArray(result[key]) && Array.isArray(current[key])) {\n            result[key] = exports.mergeDeepObject.options.mergeArrays\n                ? Array.from(new Set(result[key].concat(current[key])))\n                : current[key];\n        }\n        else if (isObject(result[key]) && isObject(current[key])) {\n            result[key] = (0, exports.mergeDeepObject)(result[key], current[key]);\n        }\n        else {\n            result[key] = current[key];\n        }\n    });\n    return result;\n}, {});\nexports.mergeDeepObject = mergeDeepObject;\nconst defaultOptions = {\n    mergeArrays: true,\n};\nexports.mergeDeepObject.options = defaultOptions;\nexports.mergeDeepObject.withOptions = (options, ...objects) => {\n    exports.mergeDeepObject.options = Object.assign({ mergeArrays: true }, options);\n    const result = (0, exports.mergeDeepObject)(...objects);\n    exports.mergeDeepObject.options = defaultOptions;\n    return result;\n};\n//# sourceMappingURL=mergeDeepObject.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvbWVyZ2VEZWVwT2JqZWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQyxJQUFJO0FBQ0wsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQixtQ0FBbUM7QUFDbkMsSUFBSSwrQkFBK0IsbUJBQW1CLG1CQUFtQjtBQUN6RTtBQUNBLElBQUksK0JBQStCO0FBQ25DO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvbWVyZ2VEZWVwT2JqZWN0LmpzPzc5YjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1lcmdlRGVlcE9iamVjdCA9IHZvaWQgMDtcbmNvbnN0IGlzT2JqZWN0ID0gKG9iaikgPT4ge1xuICAgIGlmICh0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJiBvYmogIT09IG51bGwpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBPYmplY3QuZ2V0UHJvdG90eXBlT2YgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNvbnN0IHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopO1xuICAgICAgICAgICAgcmV0dXJuIHByb3RvdHlwZSA9PT0gT2JqZWN0LnByb3RvdHlwZSB8fCBwcm90b3R5cGUgPT09IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBPYmplY3RdJztcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcbmNvbnN0IG1lcmdlRGVlcE9iamVjdCA9ICguLi5vYmplY3RzKSA9PiBvYmplY3RzLnJlZHVjZSgocmVzdWx0LCBjdXJyZW50KSA9PiB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoY3VycmVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnRzIHByb3ZpZGVkIHRvIHRzLWRlZXBtZXJnZSBtdXN0IGJlIG9iamVjdHMsIG5vdCBhcnJheXMuJyk7XG4gICAgfVxuICAgIE9iamVjdC5rZXlzKGN1cnJlbnQpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgICAgaWYgKFsnX19wcm90b19fJywgJ2NvbnN0cnVjdG9yJywgJ3Byb3RvdHlwZSddLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShyZXN1bHRba2V5XSkgJiYgQXJyYXkuaXNBcnJheShjdXJyZW50W2tleV0pKSB7XG4gICAgICAgICAgICByZXN1bHRba2V5XSA9IGV4cG9ydHMubWVyZ2VEZWVwT2JqZWN0Lm9wdGlvbnMubWVyZ2VBcnJheXNcbiAgICAgICAgICAgICAgICA/IEFycmF5LmZyb20obmV3IFNldChyZXN1bHRba2V5XS5jb25jYXQoY3VycmVudFtrZXldKSkpXG4gICAgICAgICAgICAgICAgOiBjdXJyZW50W2tleV07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNPYmplY3QocmVzdWx0W2tleV0pICYmIGlzT2JqZWN0KGN1cnJlbnRba2V5XSkpIHtcbiAgICAgICAgICAgIHJlc3VsdFtrZXldID0gKDAsIGV4cG9ydHMubWVyZ2VEZWVwT2JqZWN0KShyZXN1bHRba2V5XSwgY3VycmVudFtrZXldKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdFtrZXldID0gY3VycmVudFtrZXldO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn0sIHt9KTtcbmV4cG9ydHMubWVyZ2VEZWVwT2JqZWN0ID0gbWVyZ2VEZWVwT2JqZWN0O1xuY29uc3QgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgbWVyZ2VBcnJheXM6IHRydWUsXG59O1xuZXhwb3J0cy5tZXJnZURlZXBPYmplY3Qub3B0aW9ucyA9IGRlZmF1bHRPcHRpb25zO1xuZXhwb3J0cy5tZXJnZURlZXBPYmplY3Qud2l0aE9wdGlvbnMgPSAob3B0aW9ucywgLi4ub2JqZWN0cykgPT4ge1xuICAgIGV4cG9ydHMubWVyZ2VEZWVwT2JqZWN0Lm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHsgbWVyZ2VBcnJheXM6IHRydWUgfSwgb3B0aW9ucyk7XG4gICAgY29uc3QgcmVzdWx0ID0gKDAsIGV4cG9ydHMubWVyZ2VEZWVwT2JqZWN0KSguLi5vYmplY3RzKTtcbiAgICBleHBvcnRzLm1lcmdlRGVlcE9iamVjdC5vcHRpb25zID0gZGVmYXVsdE9wdGlvbnM7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXJnZURlZXBPYmplY3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/mergeDeepObject.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/objectPartition.js":
/*!***********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/objectPartition.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.objectPartition = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst objectPartition = (obj, keys) => keys.reduce(([included, excluded], key) => {\n    const _a = excluded, _b = key, value = _a[_b], rest = tslib_1.__rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n    return typeof value !== 'undefined'\n        ? [Object.assign(Object.assign({}, included), { [key]: value }), rest]\n        : [included, excluded];\n}, [{}, obj]);\nexports.objectPartition = objectPartition;\n//# sourceMappingURL=objectPartition.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvb2JqZWN0UGFydGl0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QixnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBTztBQUMvQjtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsZUFBZSxjQUFjO0FBQ3RFO0FBQ0EsQ0FBQyxLQUFLO0FBQ04sdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi9vYmplY3RQYXJ0aXRpb24uanM/M2ViZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMub2JqZWN0UGFydGl0aW9uID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IG9iamVjdFBhcnRpdGlvbiA9IChvYmosIGtleXMpID0+IGtleXMucmVkdWNlKChbaW5jbHVkZWQsIGV4Y2x1ZGVkXSwga2V5KSA9PiB7XG4gICAgY29uc3QgX2EgPSBleGNsdWRlZCwgX2IgPSBrZXksIHZhbHVlID0gX2FbX2JdLCByZXN0ID0gdHNsaWJfMS5fX3Jlc3QoX2EsIFt0eXBlb2YgX2IgPT09IFwic3ltYm9sXCIgPyBfYiA6IF9iICsgXCJcIl0pO1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgIT09ICd1bmRlZmluZWQnXG4gICAgICAgID8gW09iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgaW5jbHVkZWQpLCB7IFtrZXldOiB2YWx1ZSB9KSwgcmVzdF1cbiAgICAgICAgOiBbaW5jbHVkZWQsIGV4Y2x1ZGVkXTtcbn0sIFt7fSwgb2JqXSk7XG5leHBvcnRzLm9iamVjdFBhcnRpdGlvbiA9IG9iamVjdFBhcnRpdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9iamVjdFBhcnRpdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/objectPartition.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/parseElectrumUrl.js":
/*!************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/parseElectrumUrl.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseElectrumUrl = void 0;\nconst ELECTRUM_URL_REGEX = /^(?:([a-zA-Z0-9.-]+)|\\[([a-f0-9:]+)\\]):([0-9]{1,5}):([ts])$/;\nconst parseElectrumUrl = (url) => {\n    var _a;\n    const match = url.match(ELECTRUM_URL_REGEX);\n    if (!match)\n        return undefined;\n    return {\n        host: (_a = match[1]) !== null && _a !== void 0 ? _a : match[2],\n        port: Number.parseInt(match[3], 10),\n        protocol: match[4],\n    };\n};\nexports.parseElectrumUrl = parseElectrumUrl;\n//# sourceMappingURL=parseElectrumUrl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvcGFyc2VFbGVjdHJ1bVVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsMEVBQTBFLElBQUk7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvcGFyc2VFbGVjdHJ1bVVybC5qcz8zNmU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJzZUVsZWN0cnVtVXJsID0gdm9pZCAwO1xuY29uc3QgRUxFQ1RSVU1fVVJMX1JFR0VYID0gL14oPzooW2EtekEtWjAtOS4tXSspfFxcWyhbYS1mMC05Ol0rKVxcXSk6KFswLTldezEsNX0pOihbdHNdKSQvO1xuY29uc3QgcGFyc2VFbGVjdHJ1bVVybCA9ICh1cmwpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgbWF0Y2ggPSB1cmwubWF0Y2goRUxFQ1RSVU1fVVJMX1JFR0VYKTtcbiAgICBpZiAoIW1hdGNoKVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIHJldHVybiB7XG4gICAgICAgIGhvc3Q6IChfYSA9IG1hdGNoWzFdKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBtYXRjaFsyXSxcbiAgICAgICAgcG9ydDogTnVtYmVyLnBhcnNlSW50KG1hdGNoWzNdLCAxMCksXG4gICAgICAgIHByb3RvY29sOiBtYXRjaFs0XSxcbiAgICB9O1xufTtcbmV4cG9ydHMucGFyc2VFbGVjdHJ1bVVybCA9IHBhcnNlRWxlY3RydW1Vcmw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZUVsZWN0cnVtVXJsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/parseElectrumUrl.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/parseHostname.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/parseHostname.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseHostname = void 0;\nconst HOSTNAME_REGEX = /^([a-z0-9.+-]+:\\/\\/)?([a-z0-9.-]+)([:/][^:/]+)*\\/?$/i;\nconst parseHostname = (url) => { var _a, _b; return (_b = (_a = url.match(HOSTNAME_REGEX)) === null || _a === void 0 ? void 0 : _a[2]) === null || _b === void 0 ? void 0 : _b.toLowerCase(); };\nexports.parseHostname = parseHostname;\n//# sourceMappingURL=parseHostname.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvcGFyc2VIb3N0bmFtZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQSxpQ0FBaUMsWUFBWTtBQUM3QyxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL3BhcnNlSG9zdG5hbWUuanM/ZDhkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VIb3N0bmFtZSA9IHZvaWQgMDtcbmNvbnN0IEhPU1ROQU1FX1JFR0VYID0gL14oW2EtejAtOS4rLV0rOlxcL1xcLyk/KFthLXowLTkuLV0rKShbOi9dW146L10rKSpcXC8/JC9pO1xuY29uc3QgcGFyc2VIb3N0bmFtZSA9ICh1cmwpID0+IHsgdmFyIF9hLCBfYjsgcmV0dXJuIChfYiA9IChfYSA9IHVybC5tYXRjaChIT1NUTkFNRV9SRUdFWCkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYVsyXSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnRvTG93ZXJDYXNlKCk7IH07XG5leHBvcnRzLnBhcnNlSG9zdG5hbWUgPSBwYXJzZUhvc3RuYW1lO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyc2VIb3N0bmFtZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/parseHostname.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/promiseAllSequence.js":
/*!**************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/promiseAllSequence.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.promiseAllSequence = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst promiseAllSequence = (actions) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    const results = [];\n    for (let i = 0; i < actions.length; ++i) {\n        const result = yield actions[i]();\n        results.push(result);\n    }\n    return results;\n});\nexports.promiseAllSequence = promiseAllSequence;\n//# sourceMappingURL=promiseAllSequence.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvcHJvbWlzZUFsbFNlcXVlbmNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQixnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBTztBQUMvQjtBQUNBO0FBQ0Esb0JBQW9CLG9CQUFvQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL3Byb21pc2VBbGxTZXF1ZW5jZS5qcz9hOTRmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wcm9taXNlQWxsU2VxdWVuY2UgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgcHJvbWlzZUFsbFNlcXVlbmNlID0gKGFjdGlvbnMpID0+IHRzbGliXzEuX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgY29uc3QgcmVzdWx0cyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWN0aW9ucy5sZW5ndGg7ICsraSkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSB5aWVsZCBhY3Rpb25zW2ldKCk7XG4gICAgICAgIHJlc3VsdHMucHVzaChyZXN1bHQpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0cztcbn0pO1xuZXhwb3J0cy5wcm9taXNlQWxsU2VxdWVuY2UgPSBwcm9taXNlQWxsU2VxdWVuY2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9taXNlQWxsU2VxdWVuY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/promiseAllSequence.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/redactUserPath.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/redactUserPath.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.redactUserPathFromString = exports.startOfUserPathRegex = void 0;\nexports.startOfUserPathRegex = /([/\\\\][Uu]sers[/\\\\]{1,4})([^\"^'^[^\\]^/^\\\\]*)/g;\nconst redactUserPathFromString = (text) => text.replace(exports.startOfUserPathRegex, '$1[*]');\nexports.redactUserPathFromString = redactUserPathFromString;\n//# sourceMappingURL=redactUserPath.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvcmVkYWN0VXNlclBhdGguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0NBQWdDLEdBQUcsNEJBQTRCO0FBQy9ELDRCQUE0Qix3QkFBd0IsSUFBSTtBQUN4RDtBQUNBLGdDQUFnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvcmVkYWN0VXNlclBhdGguanM/MGZjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmVkYWN0VXNlclBhdGhGcm9tU3RyaW5nID0gZXhwb3J0cy5zdGFydE9mVXNlclBhdGhSZWdleCA9IHZvaWQgMDtcbmV4cG9ydHMuc3RhcnRPZlVzZXJQYXRoUmVnZXggPSAvKFsvXFxcXF1bVXVdc2Vyc1svXFxcXF17MSw0fSkoW15cIl4nXlteXFxdXi9eXFxcXF0qKS9nO1xuY29uc3QgcmVkYWN0VXNlclBhdGhGcm9tU3RyaW5nID0gKHRleHQpID0+IHRleHQucmVwbGFjZShleHBvcnRzLnN0YXJ0T2ZVc2VyUGF0aFJlZ2V4LCAnJDFbKl0nKTtcbmV4cG9ydHMucmVkYWN0VXNlclBhdGhGcm9tU3RyaW5nID0gcmVkYWN0VXNlclBhdGhGcm9tU3RyaW5nO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVkYWN0VXNlclBhdGguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/redactUserPath.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/scheduleAction.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/scheduleAction.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.scheduleAction = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst isArray = (attempts) => Array.isArray(attempts);\nconst abortedBySignal = () => new Error('Aborted by signal');\nconst abortedByDeadline = () => new Error('Aborted by deadline');\nconst abortedByTimeout = () => new Error('Aborted by timeout');\nconst resolveAfterMs = (ms, clear) => new Promise((resolve, reject) => {\n    if (clear.aborted)\n        return reject();\n    if (ms === undefined)\n        return resolve();\n    const timeout = setTimeout(resolve, ms);\n    const onClear = () => {\n        clearTimeout(timeout);\n        clear.removeEventListener('abort', onClear);\n        reject();\n    };\n    clear.addEventListener('abort', onClear);\n});\nconst rejectAfterMs = (ms, reason, clear) => new Promise((_, reject) => {\n    if (clear.aborted)\n        return reject();\n    const timeout = ms !== undefined ? setTimeout(() => reject(reason()), ms) : undefined;\n    const onClear = () => {\n        clearTimeout(timeout);\n        clear.removeEventListener('abort', onClear);\n        reject();\n    };\n    clear.addEventListener('abort', onClear);\n});\nconst rejectWhenAborted = (signal, clear) => new Promise((_, reject) => {\n    if (clear.aborted)\n        return reject();\n    if (signal === null || signal === void 0 ? void 0 : signal.aborted)\n        return reject(abortedBySignal());\n    const onAbort = () => reject(abortedBySignal());\n    signal === null || signal === void 0 ? void 0 : signal.addEventListener('abort', onAbort);\n    const onClear = () => {\n        signal === null || signal === void 0 ? void 0 : signal.removeEventListener('abort', onAbort);\n        clear.removeEventListener('abort', onClear);\n        reject();\n    };\n    clear.addEventListener('abort', onClear);\n});\nconst resolveAction = (action, clear) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    const aborter = new AbortController();\n    const onClear = () => aborter.abort();\n    if (clear.aborted)\n        onClear();\n    clear.addEventListener('abort', onClear);\n    try {\n        return yield new Promise(resolve => resolve(action(aborter.signal)));\n    }\n    finally {\n        clear.removeEventListener('abort', onClear);\n    }\n});\nconst attemptLoop = (attempts, attempt, failure, clear) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    for (let a = 0; a < attempts - 1; a++) {\n        if (clear.aborted)\n            break;\n        const aborter = new AbortController();\n        const onClear = () => aborter.abort();\n        clear.addEventListener('abort', onClear);\n        try {\n            return yield attempt(a, aborter.signal);\n        }\n        catch (_a) {\n            onClear();\n            yield failure(a);\n        }\n        finally {\n            clear.removeEventListener('abort', onClear);\n        }\n    }\n    return clear.aborted ? Promise.reject() : attempt(attempts - 1, clear);\n});\nconst scheduleAction = (action, params) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    const { signal, delay, attempts, timeout, deadline, gap } = params;\n    const deadlineMs = deadline && deadline - Date.now();\n    const attemptCount = isArray(attempts)\n        ? attempts.length\n        : attempts !== null && attempts !== void 0 ? attempts : (deadline ? Infinity : 1);\n    const clearAborter = new AbortController();\n    const clear = clearAborter.signal;\n    const getParams = isArray(attempts)\n        ? (attempt) => attempts[attempt]\n        : () => ({ timeout, gap });\n    try {\n        return yield Promise.race([\n            rejectWhenAborted(signal, clear),\n            rejectAfterMs(deadlineMs, abortedByDeadline, clear),\n            resolveAfterMs(delay, clear).then(() => attemptLoop(attemptCount, (attempt, abort) => Promise.race([\n                rejectAfterMs(getParams(attempt).timeout, abortedByTimeout, clear),\n                resolveAction(action, abort),\n            ]), attempt => { var _a; return resolveAfterMs((_a = getParams(attempt).gap) !== null && _a !== void 0 ? _a : 0, clear); }, clear)),\n        ]);\n    }\n    finally {\n        clearAborter.abort();\n    }\n});\nexports.scheduleAction = scheduleAction;\n//# sourceMappingURL=scheduleAction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvc2NoZWR1bGVBY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLGdCQUFnQixtQkFBTyxDQUFDLGlEQUFPO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLFlBQVksa0RBQWtEO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsY0FBYztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixRQUFRLGlHQUFpRztBQUN0STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHNCQUFzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvc2NoZWR1bGVBY3Rpb24uanM/ZjNlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2NoZWR1bGVBY3Rpb24gPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgaXNBcnJheSA9IChhdHRlbXB0cykgPT4gQXJyYXkuaXNBcnJheShhdHRlbXB0cyk7XG5jb25zdCBhYm9ydGVkQnlTaWduYWwgPSAoKSA9PiBuZXcgRXJyb3IoJ0Fib3J0ZWQgYnkgc2lnbmFsJyk7XG5jb25zdCBhYm9ydGVkQnlEZWFkbGluZSA9ICgpID0+IG5ldyBFcnJvcignQWJvcnRlZCBieSBkZWFkbGluZScpO1xuY29uc3QgYWJvcnRlZEJ5VGltZW91dCA9ICgpID0+IG5ldyBFcnJvcignQWJvcnRlZCBieSB0aW1lb3V0Jyk7XG5jb25zdCByZXNvbHZlQWZ0ZXJNcyA9IChtcywgY2xlYXIpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBpZiAoY2xlYXIuYWJvcnRlZClcbiAgICAgICAgcmV0dXJuIHJlamVjdCgpO1xuICAgIGlmIChtcyA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gcmVzb2x2ZSgpO1xuICAgIGNvbnN0IHRpbWVvdXQgPSBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKTtcbiAgICBjb25zdCBvbkNsZWFyID0gKCkgPT4ge1xuICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICAgIGNsZWFyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Fib3J0Jywgb25DbGVhcik7XG4gICAgICAgIHJlamVjdCgpO1xuICAgIH07XG4gICAgY2xlYXIuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbkNsZWFyKTtcbn0pO1xuY29uc3QgcmVqZWN0QWZ0ZXJNcyA9IChtcywgcmVhc29uLCBjbGVhcikgPT4gbmV3IFByb21pc2UoKF8sIHJlamVjdCkgPT4ge1xuICAgIGlmIChjbGVhci5hYm9ydGVkKVxuICAgICAgICByZXR1cm4gcmVqZWN0KCk7XG4gICAgY29uc3QgdGltZW91dCA9IG1zICE9PSB1bmRlZmluZWQgPyBzZXRUaW1lb3V0KCgpID0+IHJlamVjdChyZWFzb24oKSksIG1zKSA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBvbkNsZWFyID0gKCkgPT4ge1xuICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICAgIGNsZWFyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Fib3J0Jywgb25DbGVhcik7XG4gICAgICAgIHJlamVjdCgpO1xuICAgIH07XG4gICAgY2xlYXIuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbkNsZWFyKTtcbn0pO1xuY29uc3QgcmVqZWN0V2hlbkFib3J0ZWQgPSAoc2lnbmFsLCBjbGVhcikgPT4gbmV3IFByb21pc2UoKF8sIHJlamVjdCkgPT4ge1xuICAgIGlmIChjbGVhci5hYm9ydGVkKVxuICAgICAgICByZXR1cm4gcmVqZWN0KCk7XG4gICAgaWYgKHNpZ25hbCA9PT0gbnVsbCB8fCBzaWduYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNpZ25hbC5hYm9ydGVkKVxuICAgICAgICByZXR1cm4gcmVqZWN0KGFib3J0ZWRCeVNpZ25hbCgpKTtcbiAgICBjb25zdCBvbkFib3J0ID0gKCkgPT4gcmVqZWN0KGFib3J0ZWRCeVNpZ25hbCgpKTtcbiAgICBzaWduYWwgPT09IG51bGwgfHwgc2lnbmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbkFib3J0KTtcbiAgICBjb25zdCBvbkNsZWFyID0gKCkgPT4ge1xuICAgICAgICBzaWduYWwgPT09IG51bGwgfHwgc2lnbmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbkFib3J0KTtcbiAgICAgICAgY2xlYXIucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbkNsZWFyKTtcbiAgICAgICAgcmVqZWN0KCk7XG4gICAgfTtcbiAgICBjbGVhci5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsIG9uQ2xlYXIpO1xufSk7XG5jb25zdCByZXNvbHZlQWN0aW9uID0gKGFjdGlvbiwgY2xlYXIpID0+IHRzbGliXzEuX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgY29uc3QgYWJvcnRlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICBjb25zdCBvbkNsZWFyID0gKCkgPT4gYWJvcnRlci5hYm9ydCgpO1xuICAgIGlmIChjbGVhci5hYm9ydGVkKVxuICAgICAgICBvbkNsZWFyKCk7XG4gICAgY2xlYXIuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbkNsZWFyKTtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4geWllbGQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiByZXNvbHZlKGFjdGlvbihhYm9ydGVyLnNpZ25hbCkpKTtcbiAgICB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIGNsZWFyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Fib3J0Jywgb25DbGVhcik7XG4gICAgfVxufSk7XG5jb25zdCBhdHRlbXB0TG9vcCA9IChhdHRlbXB0cywgYXR0ZW1wdCwgZmFpbHVyZSwgY2xlYXIpID0+IHRzbGliXzEuX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgZm9yIChsZXQgYSA9IDA7IGEgPCBhdHRlbXB0cyAtIDE7IGErKykge1xuICAgICAgICBpZiAoY2xlYXIuYWJvcnRlZClcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjb25zdCBhYm9ydGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgICAgICBjb25zdCBvbkNsZWFyID0gKCkgPT4gYWJvcnRlci5hYm9ydCgpO1xuICAgICAgICBjbGVhci5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsIG9uQ2xlYXIpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHlpZWxkIGF0dGVtcHQoYSwgYWJvcnRlci5zaWduYWwpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgb25DbGVhcigpO1xuICAgICAgICAgICAgeWllbGQgZmFpbHVyZShhKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIGNsZWFyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Fib3J0Jywgb25DbGVhcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNsZWFyLmFib3J0ZWQgPyBQcm9taXNlLnJlamVjdCgpIDogYXR0ZW1wdChhdHRlbXB0cyAtIDEsIGNsZWFyKTtcbn0pO1xuY29uc3Qgc2NoZWR1bGVBY3Rpb24gPSAoYWN0aW9uLCBwYXJhbXMpID0+IHRzbGliXzEuX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgY29uc3QgeyBzaWduYWwsIGRlbGF5LCBhdHRlbXB0cywgdGltZW91dCwgZGVhZGxpbmUsIGdhcCB9ID0gcGFyYW1zO1xuICAgIGNvbnN0IGRlYWRsaW5lTXMgPSBkZWFkbGluZSAmJiBkZWFkbGluZSAtIERhdGUubm93KCk7XG4gICAgY29uc3QgYXR0ZW1wdENvdW50ID0gaXNBcnJheShhdHRlbXB0cylcbiAgICAgICAgPyBhdHRlbXB0cy5sZW5ndGhcbiAgICAgICAgOiBhdHRlbXB0cyAhPT0gbnVsbCAmJiBhdHRlbXB0cyAhPT0gdm9pZCAwID8gYXR0ZW1wdHMgOiAoZGVhZGxpbmUgPyBJbmZpbml0eSA6IDEpO1xuICAgIGNvbnN0IGNsZWFyQWJvcnRlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICBjb25zdCBjbGVhciA9IGNsZWFyQWJvcnRlci5zaWduYWw7XG4gICAgY29uc3QgZ2V0UGFyYW1zID0gaXNBcnJheShhdHRlbXB0cylcbiAgICAgICAgPyAoYXR0ZW1wdCkgPT4gYXR0ZW1wdHNbYXR0ZW1wdF1cbiAgICAgICAgOiAoKSA9PiAoeyB0aW1lb3V0LCBnYXAgfSk7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIHlpZWxkIFByb21pc2UucmFjZShbXG4gICAgICAgICAgICByZWplY3RXaGVuQWJvcnRlZChzaWduYWwsIGNsZWFyKSxcbiAgICAgICAgICAgIHJlamVjdEFmdGVyTXMoZGVhZGxpbmVNcywgYWJvcnRlZEJ5RGVhZGxpbmUsIGNsZWFyKSxcbiAgICAgICAgICAgIHJlc29sdmVBZnRlck1zKGRlbGF5LCBjbGVhcikudGhlbigoKSA9PiBhdHRlbXB0TG9vcChhdHRlbXB0Q291bnQsIChhdHRlbXB0LCBhYm9ydCkgPT4gUHJvbWlzZS5yYWNlKFtcbiAgICAgICAgICAgICAgICByZWplY3RBZnRlck1zKGdldFBhcmFtcyhhdHRlbXB0KS50aW1lb3V0LCBhYm9ydGVkQnlUaW1lb3V0LCBjbGVhciksXG4gICAgICAgICAgICAgICAgcmVzb2x2ZUFjdGlvbihhY3Rpb24sIGFib3J0KSxcbiAgICAgICAgICAgIF0pLCBhdHRlbXB0ID0+IHsgdmFyIF9hOyByZXR1cm4gcmVzb2x2ZUFmdGVyTXMoKF9hID0gZ2V0UGFyYW1zKGF0dGVtcHQpLmdhcCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogMCwgY2xlYXIpOyB9LCBjbGVhcikpLFxuICAgICAgICBdKTtcbiAgICB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIGNsZWFyQWJvcnRlci5hYm9ydCgpO1xuICAgIH1cbn0pO1xuZXhwb3J0cy5zY2hlZHVsZUFjdGlvbiA9IHNjaGVkdWxlQWN0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NoZWR1bGVBY3Rpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/scheduleAction.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/splitStringEveryNCharacters.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/splitStringEveryNCharacters.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.splitStringEveryNCharacters = void 0;\nfunction splitStringEveryNCharacters(value, n) {\n    var _a;\n    if (n === 0) {\n        return [];\n    }\n    const regex = new RegExp(`.{1,${n}}`, 'g');\n    return (_a = value.match(regex)) !== null && _a !== void 0 ? _a : [];\n}\nexports.splitStringEveryNCharacters = splitStringEveryNCharacters;\n//# sourceMappingURL=splitStringEveryNCharacters.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvc3BsaXRTdHJpbmdFdmVyeU5DaGFyYWN0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLElBQUksR0FBRztBQUN2QztBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi9zcGxpdFN0cmluZ0V2ZXJ5TkNoYXJhY3RlcnMuanM/Y2FmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc3BsaXRTdHJpbmdFdmVyeU5DaGFyYWN0ZXJzID0gdm9pZCAwO1xuZnVuY3Rpb24gc3BsaXRTdHJpbmdFdmVyeU5DaGFyYWN0ZXJzKHZhbHVlLCBuKSB7XG4gICAgdmFyIF9hO1xuICAgIGlmIChuID09PSAwKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKGAuezEsJHtufX1gLCAnZycpO1xuICAgIHJldHVybiAoX2EgPSB2YWx1ZS5tYXRjaChyZWdleCkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xufVxuZXhwb3J0cy5zcGxpdFN0cmluZ0V2ZXJ5TkNoYXJhY3RlcnMgPSBzcGxpdFN0cmluZ0V2ZXJ5TkNoYXJhY3RlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcGxpdFN0cmluZ0V2ZXJ5TkNoYXJhY3RlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/splitStringEveryNCharacters.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/throwError.js":
/*!******************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/throwError.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.throwError = void 0;\nconst throwError = (reason) => {\n    throw new Error(reason);\n};\nexports.throwError = throwError;\n//# sourceMappingURL=throwError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvdGhyb3dFcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi90aHJvd0Vycm9yLmpzPzYxZTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRocm93RXJyb3IgPSB2b2lkIDA7XG5jb25zdCB0aHJvd0Vycm9yID0gKHJlYXNvbikgPT4ge1xuICAgIHRocm93IG5ldyBFcnJvcihyZWFzb24pO1xufTtcbmV4cG9ydHMudGhyb3dFcnJvciA9IHRocm93RXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aHJvd0Vycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/throwError.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/topologicalSort.js":
/*!***********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/topologicalSort.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.topologicalSort = void 0;\nconst arrayPartition_1 = __webpack_require__(/*! ./arrayPartition */ \"./node_modules/@trezor/utils/lib/arrayPartition.js\");\nconst topologicalSort = (elements, precedes, tie) => {\n    const result = [];\n    const filterRoots = (verts) => (0, arrayPartition_1.arrayPartition)(verts, succ => !verts.some(pred => precedes(pred, succ)));\n    let elem = elements;\n    while (elem.length) {\n        const [roots, rest] = filterRoots(elem);\n        if (!roots.length)\n            throw new Error('Cycle detected');\n        result.push(...(tie ? roots.sort(tie) : roots));\n        elem = rest;\n    }\n    return result;\n};\nexports.topologicalSort = topologicalSort;\n//# sourceMappingURL=topologicalSort.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvdG9wb2xvZ2ljYWxTb3J0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2Qix5QkFBeUIsbUJBQU8sQ0FBQyw0RUFBa0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL3RvcG9sb2dpY2FsU29ydC5qcz8xMTVjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b3BvbG9naWNhbFNvcnQgPSB2b2lkIDA7XG5jb25zdCBhcnJheVBhcnRpdGlvbl8xID0gcmVxdWlyZShcIi4vYXJyYXlQYXJ0aXRpb25cIik7XG5jb25zdCB0b3BvbG9naWNhbFNvcnQgPSAoZWxlbWVudHMsIHByZWNlZGVzLCB0aWUpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICBjb25zdCBmaWx0ZXJSb290cyA9ICh2ZXJ0cykgPT4gKDAsIGFycmF5UGFydGl0aW9uXzEuYXJyYXlQYXJ0aXRpb24pKHZlcnRzLCBzdWNjID0+ICF2ZXJ0cy5zb21lKHByZWQgPT4gcHJlY2VkZXMocHJlZCwgc3VjYykpKTtcbiAgICBsZXQgZWxlbSA9IGVsZW1lbnRzO1xuICAgIHdoaWxlIChlbGVtLmxlbmd0aCkge1xuICAgICAgICBjb25zdCBbcm9vdHMsIHJlc3RdID0gZmlsdGVyUm9vdHMoZWxlbSk7XG4gICAgICAgIGlmICghcm9vdHMubGVuZ3RoKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDeWNsZSBkZXRlY3RlZCcpO1xuICAgICAgICByZXN1bHQucHVzaCguLi4odGllID8gcm9vdHMuc29ydCh0aWUpIDogcm9vdHMpKTtcbiAgICAgICAgZWxlbSA9IHJlc3Q7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuZXhwb3J0cy50b3BvbG9naWNhbFNvcnQgPSB0b3BvbG9naWNhbFNvcnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b3BvbG9naWNhbFNvcnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/topologicalSort.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/truncateMiddle.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/truncateMiddle.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.truncateMiddle = void 0;\nconst truncateMiddle = (text, startChars, endChars) => {\n    if (text.length <= startChars + endChars)\n        return text;\n    const start = text.substring(0, startChars);\n    const end = text.substring(text.length - endChars, text.length);\n    return `${start}…${end}`;\n};\nexports.truncateMiddle = truncateMiddle;\n//# sourceMappingURL=truncateMiddle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvdHJ1bmNhdGVNaWRkbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE1BQU0sR0FBRyxJQUFJO0FBQzNCO0FBQ0Esc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi90cnVuY2F0ZU1pZGRsZS5qcz81YzI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50cnVuY2F0ZU1pZGRsZSA9IHZvaWQgMDtcbmNvbnN0IHRydW5jYXRlTWlkZGxlID0gKHRleHQsIHN0YXJ0Q2hhcnMsIGVuZENoYXJzKSA9PiB7XG4gICAgaWYgKHRleHQubGVuZ3RoIDw9IHN0YXJ0Q2hhcnMgKyBlbmRDaGFycylcbiAgICAgICAgcmV0dXJuIHRleHQ7XG4gICAgY29uc3Qgc3RhcnQgPSB0ZXh0LnN1YnN0cmluZygwLCBzdGFydENoYXJzKTtcbiAgICBjb25zdCBlbmQgPSB0ZXh0LnN1YnN0cmluZyh0ZXh0Lmxlbmd0aCAtIGVuZENoYXJzLCB0ZXh0Lmxlbmd0aCk7XG4gICAgcmV0dXJuIGAke3N0YXJ0feKApiR7ZW5kfWA7XG59O1xuZXhwb3J0cy50cnVuY2F0ZU1pZGRsZSA9IHRydW5jYXRlTWlkZGxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJ1bmNhdGVNaWRkbGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/truncateMiddle.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/typedEventEmitter.js":
/*!*************************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/typedEventEmitter.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TypedEmitter = void 0;\nconst events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nclass TypedEmitter extends events_1.EventEmitter {\n    listenerCount(eventName) {\n        return super.listenerCount(eventName);\n    }\n}\nexports.TypedEmitter = TypedEmitter;\n//# sourceMappingURL=typedEventEmitter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvdHlwZWRFdmVudEVtaXR0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGlCQUFpQixtQkFBTyxDQUFDLCtDQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdXRpbHMvbGliL3R5cGVkRXZlbnRFbWl0dGVyLmpzP2Y3OWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlR5cGVkRW1pdHRlciA9IHZvaWQgMDtcbmNvbnN0IGV2ZW50c18xID0gcmVxdWlyZShcImV2ZW50c1wiKTtcbmNsYXNzIFR5cGVkRW1pdHRlciBleHRlbmRzIGV2ZW50c18xLkV2ZW50RW1pdHRlciB7XG4gICAgbGlzdGVuZXJDb3VudChldmVudE5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmxpc3RlbmVyQ291bnQoZXZlbnROYW1lKTtcbiAgICB9XG59XG5leHBvcnRzLlR5cGVkRW1pdHRlciA9IFR5cGVkRW1pdHRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVkRXZlbnRFbWl0dGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/typedEventEmitter.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/urlToOnion.js":
/*!******************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/urlToOnion.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.urlToOnion = void 0;\nconst urlToOnion = (url, onionDomains) => {\n    var _a;\n    const [, protocol, subdomain, domain, rest] = (_a = url.match(/^(http|ws)s?:\\/\\/([^:/]+\\.)?([^/.]+\\.[^/.]+)(\\/.*)?$/i)) !== null && _a !== void 0 ? _a : [];\n    if (!domain || !onionDomains[domain])\n        return;\n    return `${protocol}://${subdomain !== null && subdomain !== void 0 ? subdomain : ''}${onionDomains[domain]}${rest !== null && rest !== void 0 ? rest : ''}`;\n};\nexports.urlToOnion = urlToOnion;\n//# sourceMappingURL=urlToOnion.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvdXJsVG9Pbmlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsU0FBUyxLQUFLLDREQUE0RCxFQUFFLHFCQUFxQixFQUFFLDZDQUE2QztBQUM5SjtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvdXJsVG9Pbmlvbi5qcz82MGQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51cmxUb09uaW9uID0gdm9pZCAwO1xuY29uc3QgdXJsVG9PbmlvbiA9ICh1cmwsIG9uaW9uRG9tYWlucykgPT4ge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBbLCBwcm90b2NvbCwgc3ViZG9tYWluLCBkb21haW4sIHJlc3RdID0gKF9hID0gdXJsLm1hdGNoKC9eKGh0dHB8d3Mpcz86XFwvXFwvKFteOi9dK1xcLik/KFteLy5dK1xcLlteLy5dKykoXFwvLiopPyQvaSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xuICAgIGlmICghZG9tYWluIHx8ICFvbmlvbkRvbWFpbnNbZG9tYWluXSlcbiAgICAgICAgcmV0dXJuO1xuICAgIHJldHVybiBgJHtwcm90b2NvbH06Ly8ke3N1YmRvbWFpbiAhPT0gbnVsbCAmJiBzdWJkb21haW4gIT09IHZvaWQgMCA/IHN1YmRvbWFpbiA6ICcnfSR7b25pb25Eb21haW5zW2RvbWFpbl19JHtyZXN0ICE9PSBudWxsICYmIHJlc3QgIT09IHZvaWQgMCA/IHJlc3QgOiAnJ31gO1xufTtcbmV4cG9ydHMudXJsVG9PbmlvbiA9IHVybFRvT25pb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmxUb09uaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/urlToOnion.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/versionUtils.js":
/*!********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/versionUtils.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.normalizeVersion = exports.isNewerOrEqual = exports.isEqual = exports.isNewer = exports.isVersionArray = void 0;\nconst isVersionArray = (arr) => {\n    if (!Array.isArray(arr)) {\n        return false;\n    }\n    if (arr.length !== 3) {\n        return false;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        const versionNumber = arr[i];\n        if (typeof versionNumber !== 'number' || versionNumber < 0) {\n            return false;\n        }\n    }\n    return true;\n};\nexports.isVersionArray = isVersionArray;\nconst parse = (versionArr) => ({\n    major: versionArr[0],\n    minor: versionArr[1],\n    patch: versionArr[2],\n});\nconst split = (version) => {\n    const arr = version.split('.').map(v => Number(v));\n    if (!(0, exports.isVersionArray)(arr)) {\n        throw new Error(`version string is in wrong format: ${version}`);\n    }\n    return arr;\n};\nconst versionToString = (arr) => `${arr[0]}.${arr[1]}.${arr[2]}`;\nconst isNewer = (versionX, versionY) => {\n    const parsedX = parse(typeof versionX === 'string' ? split(versionX) : versionX);\n    const parsedY = parse(typeof versionY === 'string' ? split(versionY) : versionY);\n    if (parsedX.major - parsedY.major !== 0) {\n        return parsedX.major > parsedY.major;\n    }\n    if (parsedX.minor - parsedY.minor !== 0) {\n        return parsedX.minor > parsedY.minor;\n    }\n    if (parsedX.patch - parsedY.patch !== 0) {\n        return parsedX.patch > parsedY.patch;\n    }\n    return false;\n};\nexports.isNewer = isNewer;\nconst isEqual = (versionX, versionY) => {\n    const strX = typeof versionX === 'string' ? versionX : versionToString(versionX);\n    const strY = typeof versionY === 'string' ? versionY : versionToString(versionY);\n    return strX === strY;\n};\nexports.isEqual = isEqual;\nconst isNewerOrEqual = (versionX, versionY) => (0, exports.isNewer)(versionX, versionY) || (0, exports.isEqual)(versionX, versionY);\nexports.isNewerOrEqual = isNewerOrEqual;\nconst normalizeVersion = (version) => version.replace(/\\b0+(\\d)/g, '$1');\nexports.normalizeVersion = normalizeVersion;\n//# sourceMappingURL=versionUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvdmVyc2lvblV0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLHNCQUFzQixHQUFHLGVBQWUsR0FBRyxlQUFlLEdBQUcsc0JBQXNCO0FBQzlHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsUUFBUTtBQUN0RTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsT0FBTyxHQUFHLE9BQU8sR0FBRyxPQUFPO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvdmVyc2lvblV0aWxzLmpzP2M2MGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm5vcm1hbGl6ZVZlcnNpb24gPSBleHBvcnRzLmlzTmV3ZXJPckVxdWFsID0gZXhwb3J0cy5pc0VxdWFsID0gZXhwb3J0cy5pc05ld2VyID0gZXhwb3J0cy5pc1ZlcnNpb25BcnJheSA9IHZvaWQgMDtcbmNvbnN0IGlzVmVyc2lvbkFycmF5ID0gKGFycikgPT4ge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShhcnIpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGFyci5sZW5ndGggIT09IDMpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCB2ZXJzaW9uTnVtYmVyID0gYXJyW2ldO1xuICAgICAgICBpZiAodHlwZW9mIHZlcnNpb25OdW1iZXIgIT09ICdudW1iZXInIHx8IHZlcnNpb25OdW1iZXIgPCAwKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuZXhwb3J0cy5pc1ZlcnNpb25BcnJheSA9IGlzVmVyc2lvbkFycmF5O1xuY29uc3QgcGFyc2UgPSAodmVyc2lvbkFycikgPT4gKHtcbiAgICBtYWpvcjogdmVyc2lvbkFyclswXSxcbiAgICBtaW5vcjogdmVyc2lvbkFyclsxXSxcbiAgICBwYXRjaDogdmVyc2lvbkFyclsyXSxcbn0pO1xuY29uc3Qgc3BsaXQgPSAodmVyc2lvbikgPT4ge1xuICAgIGNvbnN0IGFyciA9IHZlcnNpb24uc3BsaXQoJy4nKS5tYXAodiA9PiBOdW1iZXIodikpO1xuICAgIGlmICghKDAsIGV4cG9ydHMuaXNWZXJzaW9uQXJyYXkpKGFycikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGB2ZXJzaW9uIHN0cmluZyBpcyBpbiB3cm9uZyBmb3JtYXQ6ICR7dmVyc2lvbn1gKTtcbiAgICB9XG4gICAgcmV0dXJuIGFycjtcbn07XG5jb25zdCB2ZXJzaW9uVG9TdHJpbmcgPSAoYXJyKSA9PiBgJHthcnJbMF19LiR7YXJyWzFdfS4ke2FyclsyXX1gO1xuY29uc3QgaXNOZXdlciA9ICh2ZXJzaW9uWCwgdmVyc2lvblkpID0+IHtcbiAgICBjb25zdCBwYXJzZWRYID0gcGFyc2UodHlwZW9mIHZlcnNpb25YID09PSAnc3RyaW5nJyA/IHNwbGl0KHZlcnNpb25YKSA6IHZlcnNpb25YKTtcbiAgICBjb25zdCBwYXJzZWRZID0gcGFyc2UodHlwZW9mIHZlcnNpb25ZID09PSAnc3RyaW5nJyA/IHNwbGl0KHZlcnNpb25ZKSA6IHZlcnNpb25ZKTtcbiAgICBpZiAocGFyc2VkWC5tYWpvciAtIHBhcnNlZFkubWFqb3IgIT09IDApIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlZFgubWFqb3IgPiBwYXJzZWRZLm1ham9yO1xuICAgIH1cbiAgICBpZiAocGFyc2VkWC5taW5vciAtIHBhcnNlZFkubWlub3IgIT09IDApIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlZFgubWlub3IgPiBwYXJzZWRZLm1pbm9yO1xuICAgIH1cbiAgICBpZiAocGFyc2VkWC5wYXRjaCAtIHBhcnNlZFkucGF0Y2ggIT09IDApIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlZFgucGF0Y2ggPiBwYXJzZWRZLnBhdGNoO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59O1xuZXhwb3J0cy5pc05ld2VyID0gaXNOZXdlcjtcbmNvbnN0IGlzRXF1YWwgPSAodmVyc2lvblgsIHZlcnNpb25ZKSA9PiB7XG4gICAgY29uc3Qgc3RyWCA9IHR5cGVvZiB2ZXJzaW9uWCA9PT0gJ3N0cmluZycgPyB2ZXJzaW9uWCA6IHZlcnNpb25Ub1N0cmluZyh2ZXJzaW9uWCk7XG4gICAgY29uc3Qgc3RyWSA9IHR5cGVvZiB2ZXJzaW9uWSA9PT0gJ3N0cmluZycgPyB2ZXJzaW9uWSA6IHZlcnNpb25Ub1N0cmluZyh2ZXJzaW9uWSk7XG4gICAgcmV0dXJuIHN0clggPT09IHN0clk7XG59O1xuZXhwb3J0cy5pc0VxdWFsID0gaXNFcXVhbDtcbmNvbnN0IGlzTmV3ZXJPckVxdWFsID0gKHZlcnNpb25YLCB2ZXJzaW9uWSkgPT4gKDAsIGV4cG9ydHMuaXNOZXdlcikodmVyc2lvblgsIHZlcnNpb25ZKSB8fCAoMCwgZXhwb3J0cy5pc0VxdWFsKSh2ZXJzaW9uWCwgdmVyc2lvblkpO1xuZXhwb3J0cy5pc05ld2VyT3JFcXVhbCA9IGlzTmV3ZXJPckVxdWFsO1xuY29uc3Qgbm9ybWFsaXplVmVyc2lvbiA9ICh2ZXJzaW9uKSA9PiB2ZXJzaW9uLnJlcGxhY2UoL1xcYjArKFxcZCkvZywgJyQxJyk7XG5leHBvcnRzLm5vcm1hbGl6ZVZlcnNpb24gPSBub3JtYWxpemVWZXJzaW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvblV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/versionUtils.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/xssFilters.js":
/*!******************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/xssFilters.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.inDoubleQuotes = exports.inSingleQuotes = exports.inHTML = void 0;\nconst LT = /</g;\nconst SQUOT = /'/g;\nconst QUOT = /\"/g;\nconst inHTML = (value) => value.replace(LT, '&lt;');\nexports.inHTML = inHTML;\nconst inSingleQuotes = (value) => value.replace(SQUOT, '&#39;');\nexports.inSingleQuotes = inSingleQuotes;\nconst inDoubleQuotes = (value) => value.replace(QUOT, '&quot;');\nexports.inDoubleQuotes = inDoubleQuotes;\n//# sourceMappingURL=xssFilters.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIveHNzRmlsdGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0IsR0FBRyxzQkFBc0IsR0FBRyxjQUFjO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRCxjQUFjO0FBQ2QsNkRBQTZEO0FBQzdELHNCQUFzQjtBQUN0Qiw2REFBNkQ7QUFDN0Qsc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3V0aWxzL2xpYi94c3NGaWx0ZXJzLmpzPzJmOWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmluRG91YmxlUXVvdGVzID0gZXhwb3J0cy5pblNpbmdsZVF1b3RlcyA9IGV4cG9ydHMuaW5IVE1MID0gdm9pZCAwO1xuY29uc3QgTFQgPSAvPC9nO1xuY29uc3QgU1FVT1QgPSAvJy9nO1xuY29uc3QgUVVPVCA9IC9cIi9nO1xuY29uc3QgaW5IVE1MID0gKHZhbHVlKSA9PiB2YWx1ZS5yZXBsYWNlKExULCAnJmx0OycpO1xuZXhwb3J0cy5pbkhUTUwgPSBpbkhUTUw7XG5jb25zdCBpblNpbmdsZVF1b3RlcyA9ICh2YWx1ZSkgPT4gdmFsdWUucmVwbGFjZShTUVVPVCwgJyYjMzk7Jyk7XG5leHBvcnRzLmluU2luZ2xlUXVvdGVzID0gaW5TaW5nbGVRdW90ZXM7XG5jb25zdCBpbkRvdWJsZVF1b3RlcyA9ICh2YWx1ZSkgPT4gdmFsdWUucmVwbGFjZShRVU9ULCAnJnF1b3Q7Jyk7XG5leHBvcnRzLmluRG91YmxlUXVvdGVzID0gaW5Eb3VibGVRdW90ZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD14c3NGaWx0ZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/xssFilters.js\n"));

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/light.js":
/*!******************************************!*\
  !*** ./node_modules/protobufjs/light.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("// light library entry point.\n\n\nmodule.exports = __webpack_require__(/*! ./src/index-light */ \"./node_modules/protobufjs/src/index-light.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9saWdodC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFYTtBQUNiLDZHQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9saWdodC5qcz81ODFlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGxpZ2h0IGxpYnJhcnkgZW50cnkgcG9pbnQuXG5cblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi9zcmMvaW5kZXgtbGlnaHRcIik7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/light.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/converter.js":
/*!**************************************************!*\
  !*** ./node_modules/protobufjs/src/converter.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    util = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    var defaultAlreadyEmitted = false;\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                // enum unknown values passthrough\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                    (\"default:\")\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                    if (!field.repeated) gen // fallback to default value only for\n                                             // arrays, to avoid leaving holes.\n                        (\"break\");           // for non-repeated fields, just ignore\n                    defaultAlreadyEmitted = true;\n                }\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length >= 0)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/converter.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/decoder.js":
/*!************************************************!*\
  !*** ./node_modules/protobufjs/src/decoder.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = decoder;\n\nvar Enum    = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    types   = __webpack_require__(/*! ./types */ \"./node_modules/protobufjs/src/types.js\"),\n    util    = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i: {\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\")\n            (\"}\");\n        // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvZGVjb2Rlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxxREFBUTtBQUM5QixjQUFjLG1CQUFPLENBQUMsdURBQVM7QUFDL0IsY0FBYyxtQkFBTyxDQUFDLHFEQUFROztBQUU5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUdBQXVHLG1CQUFtQjtBQUMxSCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qjs7QUFFeEI7QUFDQSxXQUFXLGdEQUFnRDtBQUMzRDtBQUNBO0FBQ0EscURBQXFEO0FBQ3JELHdCQUF3Qjs7QUFFeEI7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSwyQkFBMkI7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQSx1Q0FBdUM7QUFDdkMsNENBQTRDO0FBQzVDOztBQUVBO0FBQ0EseUVBQXlFO0FBQ3pFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QixtQkFBbUI7O0FBRW5CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsVUFBVSwyQkFBMkI7O0FBRXJDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7O0FBRW5CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBLFdBQVc7QUFDWCxPQUFPOztBQUVQO0FBQ0EsZ0JBQWdCLCtCQUErQjtBQUMvQztBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsV0FBVztBQUNsRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvZGVjb2Rlci5qcz9lZjBkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBkZWNvZGVyO1xuXG52YXIgRW51bSAgICA9IHJlcXVpcmUoXCIuL2VudW1cIiksXG4gICAgdHlwZXMgICA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpLFxuICAgIHV0aWwgICAgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xuXG5mdW5jdGlvbiBtaXNzaW5nKGZpZWxkKSB7XG4gICAgcmV0dXJuIFwibWlzc2luZyByZXF1aXJlZCAnXCIgKyBmaWVsZC5uYW1lICsgXCInXCI7XG59XG5cbi8qKlxuICogR2VuZXJhdGVzIGEgZGVjb2RlciBzcGVjaWZpYyB0byB0aGUgc3BlY2lmaWVkIG1lc3NhZ2UgdHlwZS5cbiAqIEBwYXJhbSB7VHlwZX0gbXR5cGUgTWVzc2FnZSB0eXBlXG4gKiBAcmV0dXJucyB7Q29kZWdlbn0gQ29kZWdlbiBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBkZWNvZGVyKG10eXBlKSB7XG4gICAgLyogZXNsaW50LWRpc2FibGUgbm8tdW5leHBlY3RlZC1tdWx0aWxpbmUgKi9cbiAgICB2YXIgZ2VuID0gdXRpbC5jb2RlZ2VuKFtcInJcIiwgXCJsXCJdLCBtdHlwZS5uYW1lICsgXCIkZGVjb2RlXCIpXG4gICAgKFwiaWYoIShyIGluc3RhbmNlb2YgUmVhZGVyKSlcIilcbiAgICAgICAgKFwicj1SZWFkZXIuY3JlYXRlKHIpXCIpXG4gICAgKFwidmFyIGM9bD09PXVuZGVmaW5lZD9yLmxlbjpyLnBvcytsLG09bmV3IHRoaXMuY3RvclwiICsgKG10eXBlLmZpZWxkc0FycmF5LmZpbHRlcihmdW5jdGlvbihmaWVsZCkgeyByZXR1cm4gZmllbGQubWFwOyB9KS5sZW5ndGggPyBcIixrLHZhbHVlXCIgOiBcIlwiKSlcbiAgICAoXCJ3aGlsZShyLnBvczxjKXtcIilcbiAgICAgICAgKFwidmFyIHQ9ci51aW50MzIoKVwiKTtcbiAgICBpZiAobXR5cGUuZ3JvdXApIGdlblxuICAgICAgICAoXCJpZigodCY3KT09PTQpXCIpXG4gICAgICAgICAgICAoXCJicmVha1wiKTtcbiAgICBnZW5cbiAgICAgICAgKFwic3dpdGNoKHQ+Pj4zKXtcIik7XG5cbiAgICB2YXIgaSA9IDA7XG4gICAgZm9yICg7IGkgPCAvKiBpbml0aWFsaXplcyAqLyBtdHlwZS5maWVsZHNBcnJheS5sZW5ndGg7ICsraSkge1xuICAgICAgICB2YXIgZmllbGQgPSBtdHlwZS5fZmllbGRzQXJyYXlbaV0ucmVzb2x2ZSgpLFxuICAgICAgICAgICAgdHlwZSAgPSBmaWVsZC5yZXNvbHZlZFR5cGUgaW5zdGFuY2VvZiBFbnVtID8gXCJpbnQzMlwiIDogZmllbGQudHlwZSxcbiAgICAgICAgICAgIHJlZiAgID0gXCJtXCIgKyB1dGlsLnNhZmVQcm9wKGZpZWxkLm5hbWUpOyBnZW5cbiAgICAgICAgICAgIChcImNhc2UgJWk6IHtcIiwgZmllbGQuaWQpO1xuXG4gICAgICAgIC8vIE1hcCBmaWVsZHNcbiAgICAgICAgaWYgKGZpZWxkLm1hcCkgeyBnZW5cbiAgICAgICAgICAgICAgICAoXCJpZiglcz09PXV0aWwuZW1wdHlPYmplY3QpXCIsIHJlZilcbiAgICAgICAgICAgICAgICAgICAgKFwiJXM9e31cIiwgcmVmKVxuICAgICAgICAgICAgICAgIChcInZhciBjMiA9IHIudWludDMyKCkrci5wb3NcIik7XG5cbiAgICAgICAgICAgIGlmICh0eXBlcy5kZWZhdWx0c1tmaWVsZC5rZXlUeXBlXSAhPT0gdW5kZWZpbmVkKSBnZW5cbiAgICAgICAgICAgICAgICAoXCJrPSVqXCIsIHR5cGVzLmRlZmF1bHRzW2ZpZWxkLmtleVR5cGVdKTtcbiAgICAgICAgICAgIGVsc2UgZ2VuXG4gICAgICAgICAgICAgICAgKFwiaz1udWxsXCIpO1xuXG4gICAgICAgICAgICBpZiAodHlwZXMuZGVmYXVsdHNbdHlwZV0gIT09IHVuZGVmaW5lZCkgZ2VuXG4gICAgICAgICAgICAgICAgKFwidmFsdWU9JWpcIiwgdHlwZXMuZGVmYXVsdHNbdHlwZV0pO1xuICAgICAgICAgICAgZWxzZSBnZW5cbiAgICAgICAgICAgICAgICAoXCJ2YWx1ZT1udWxsXCIpO1xuXG4gICAgICAgICAgICBnZW5cbiAgICAgICAgICAgICAgICAoXCJ3aGlsZShyLnBvczxjMil7XCIpXG4gICAgICAgICAgICAgICAgICAgIChcInZhciB0YWcyPXIudWludDMyKClcIilcbiAgICAgICAgICAgICAgICAgICAgKFwic3dpdGNoKHRhZzI+Pj4zKXtcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIChcImNhc2UgMTogaz1yLiVzKCk7IGJyZWFrXCIsIGZpZWxkLmtleVR5cGUpXG4gICAgICAgICAgICAgICAgICAgICAgICAoXCJjYXNlIDI6XCIpO1xuXG4gICAgICAgICAgICBpZiAodHlwZXMuYmFzaWNbdHlwZV0gPT09IHVuZGVmaW5lZCkgZ2VuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKFwidmFsdWU9dHlwZXNbJWldLmRlY29kZShyLHIudWludDMyKCkpXCIsIGkpOyAvLyBjYW4ndCBiZSBncm91cHNcbiAgICAgICAgICAgIGVsc2UgZ2VuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKFwidmFsdWU9ci4lcygpXCIsIHR5cGUpO1xuXG4gICAgICAgICAgICBnZW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoXCJicmVha1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAgKFwiZGVmYXVsdDpcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoXCJyLnNraXBUeXBlKHRhZzImNylcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoXCJicmVha1wiKVxuICAgICAgICAgICAgICAgICAgICAoXCJ9XCIpXG4gICAgICAgICAgICAgICAgKFwifVwiKTtcblxuICAgICAgICAgICAgaWYgKHR5cGVzLmxvbmdbZmllbGQua2V5VHlwZV0gIT09IHVuZGVmaW5lZCkgZ2VuXG4gICAgICAgICAgICAgICAgKFwiJXNbdHlwZW9mIGs9PT1cXFwib2JqZWN0XFxcIj91dGlsLmxvbmdUb0hhc2goayk6a109dmFsdWVcIiwgcmVmKTtcbiAgICAgICAgICAgIGVsc2UgZ2VuXG4gICAgICAgICAgICAgICAgKFwiJXNba109dmFsdWVcIiwgcmVmKTtcblxuICAgICAgICAvLyBSZXBlYXRlZCBmaWVsZHNcbiAgICAgICAgfSBlbHNlIGlmIChmaWVsZC5yZXBlYXRlZCkgeyBnZW5cblxuICAgICAgICAgICAgICAgIChcImlmKCEoJXMmJiVzLmxlbmd0aCkpXCIsIHJlZiwgcmVmKVxuICAgICAgICAgICAgICAgICAgICAoXCIlcz1bXVwiLCByZWYpO1xuXG4gICAgICAgICAgICAvLyBQYWNrYWJsZSAoYWx3YXlzIGNoZWNrIGZvciBmb3J3YXJkIGFuZCBiYWNrd2FyZCBjb21wYXRpYmxpdHkpXG4gICAgICAgICAgICBpZiAodHlwZXMucGFja2VkW3R5cGVdICE9PSB1bmRlZmluZWQpIGdlblxuICAgICAgICAgICAgICAgIChcImlmKCh0JjcpPT09Mil7XCIpXG4gICAgICAgICAgICAgICAgICAgIChcInZhciBjMj1yLnVpbnQzMigpK3IucG9zXCIpXG4gICAgICAgICAgICAgICAgICAgIChcIndoaWxlKHIucG9zPGMyKVwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgKFwiJXMucHVzaChyLiVzKCkpXCIsIHJlZiwgdHlwZSlcbiAgICAgICAgICAgICAgICAoXCJ9ZWxzZVwiKTtcblxuICAgICAgICAgICAgLy8gTm9uLXBhY2tlZFxuICAgICAgICAgICAgaWYgKHR5cGVzLmJhc2ljW3R5cGVdID09PSB1bmRlZmluZWQpIGdlbihmaWVsZC5yZXNvbHZlZFR5cGUuZ3JvdXBcbiAgICAgICAgICAgICAgICAgICAgPyBcIiVzLnB1c2godHlwZXNbJWldLmRlY29kZShyKSlcIlxuICAgICAgICAgICAgICAgICAgICA6IFwiJXMucHVzaCh0eXBlc1slaV0uZGVjb2RlKHIsci51aW50MzIoKSkpXCIsIHJlZiwgaSk7XG4gICAgICAgICAgICBlbHNlIGdlblxuICAgICAgICAgICAgICAgICAgICAoXCIlcy5wdXNoKHIuJXMoKSlcIiwgcmVmLCB0eXBlKTtcblxuICAgICAgICAvLyBOb24tcmVwZWF0ZWRcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlcy5iYXNpY1t0eXBlXSA9PT0gdW5kZWZpbmVkKSBnZW4oZmllbGQucmVzb2x2ZWRUeXBlLmdyb3VwXG4gICAgICAgICAgICAgICAgPyBcIiVzPXR5cGVzWyVpXS5kZWNvZGUocilcIlxuICAgICAgICAgICAgICAgIDogXCIlcz10eXBlc1slaV0uZGVjb2RlKHIsci51aW50MzIoKSlcIiwgcmVmLCBpKTtcbiAgICAgICAgZWxzZSBnZW5cbiAgICAgICAgICAgICAgICAoXCIlcz1yLiVzKClcIiwgcmVmLCB0eXBlKTtcbiAgICAgICAgZ2VuXG4gICAgICAgICAgICAgICAgKFwiYnJlYWtcIilcbiAgICAgICAgICAgIChcIn1cIik7XG4gICAgICAgIC8vIFVua25vd24gZmllbGRzXG4gICAgfSBnZW5cbiAgICAgICAgICAgIChcImRlZmF1bHQ6XCIpXG4gICAgICAgICAgICAgICAgKFwici5za2lwVHlwZSh0JjcpXCIpXG4gICAgICAgICAgICAgICAgKFwiYnJlYWtcIilcblxuICAgICAgICAoXCJ9XCIpXG4gICAgKFwifVwiKTtcblxuICAgIC8vIEZpZWxkIHByZXNlbmNlXG4gICAgZm9yIChpID0gMDsgaSA8IG10eXBlLl9maWVsZHNBcnJheS5sZW5ndGg7ICsraSkge1xuICAgICAgICB2YXIgcmZpZWxkID0gbXR5cGUuX2ZpZWxkc0FycmF5W2ldO1xuICAgICAgICBpZiAocmZpZWxkLnJlcXVpcmVkKSBnZW5cbiAgICAoXCJpZighbS5oYXNPd25Qcm9wZXJ0eSglaikpXCIsIHJmaWVsZC5uYW1lKVxuICAgICAgICAoXCJ0aHJvdyB1dGlsLlByb3RvY29sRXJyb3IoJWose2luc3RhbmNlOm19KVwiLCBtaXNzaW5nKHJmaWVsZCkpO1xuICAgIH1cblxuICAgIHJldHVybiBnZW5cbiAgICAoXCJyZXR1cm4gbVwiKTtcbiAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLXVuZXhwZWN0ZWQtbXVsdGlsaW5lICovXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/decoder.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/encoder.js":
/*!************************************************!*\
  !*** ./node_modules/protobufjs/src/encoder.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = encoder;\n\nvar Enum     = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    types    = __webpack_require__(/*! ./types */ \"./node_modules/protobufjs/src/types.js\"),\n    util     = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvZW5jb2Rlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiOztBQUVBLGVBQWUsbUJBQU8sQ0FBQyxxREFBUTtBQUMvQixlQUFlLG1CQUFPLENBQUMsdURBQVM7QUFDaEMsZUFBZSxtQkFBTyxDQUFDLHFEQUFROztBQUUvQjtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsT0FBTztBQUNsQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JELHlDQUF5QyxZQUFZLEtBQUs7QUFDMUQ7QUFDQTtBQUNBLCtGQUErRjtBQUMvRjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsT0FBTzs7QUFFUDtBQUNBLFVBQVUsMkJBQTJCO0FBQ3JDLDhCQUE4QixjQUFjOztBQUU1QztBQUNBLG9FQUFvRTs7QUFFcEU7QUFDQSxzQkFBc0IsWUFBWTtBQUNsQztBQUNBOztBQUVBO0FBQ0EsY0FBYyxPQUFPOztBQUVyQixzQkFBc0IsWUFBWTtBQUNsQztBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjO0FBQ2QsT0FBTzs7QUFFUDtBQUNBLFVBQVU7QUFDVjtBQUNBLHlFQUF5RTs7QUFFekU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvZW5jb2Rlci5qcz8yZGYyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBlbmNvZGVyO1xuXG52YXIgRW51bSAgICAgPSByZXF1aXJlKFwiLi9lbnVtXCIpLFxuICAgIHR5cGVzICAgID0gcmVxdWlyZShcIi4vdHlwZXNcIiksXG4gICAgdXRpbCAgICAgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xuXG4vKipcbiAqIEdlbmVyYXRlcyBhIHBhcnRpYWwgbWVzc2FnZSB0eXBlIGVuY29kZXIuXG4gKiBAcGFyYW0ge0NvZGVnZW59IGdlbiBDb2RlZ2VuIGluc3RhbmNlXG4gKiBAcGFyYW0ge0ZpZWxkfSBmaWVsZCBSZWZsZWN0ZWQgZmllbGRcbiAqIEBwYXJhbSB7bnVtYmVyfSBmaWVsZEluZGV4IEZpZWxkIGluZGV4XG4gKiBAcGFyYW0ge3N0cmluZ30gcmVmIFZhcmlhYmxlIHJlZmVyZW5jZVxuICogQHJldHVybnMge0NvZGVnZW59IENvZGVnZW4gaW5zdGFuY2VcbiAqIEBpZ25vcmVcbiAqL1xuZnVuY3Rpb24gZ2VuVHlwZVBhcnRpYWwoZ2VuLCBmaWVsZCwgZmllbGRJbmRleCwgcmVmKSB7XG4gICAgcmV0dXJuIGZpZWxkLnJlc29sdmVkVHlwZS5ncm91cFxuICAgICAgICA/IGdlbihcInR5cGVzWyVpXS5lbmNvZGUoJXMsdy51aW50MzIoJWkpKS51aW50MzIoJWkpXCIsIGZpZWxkSW5kZXgsIHJlZiwgKGZpZWxkLmlkIDw8IDMgfCAzKSA+Pj4gMCwgKGZpZWxkLmlkIDw8IDMgfCA0KSA+Pj4gMClcbiAgICAgICAgOiBnZW4oXCJ0eXBlc1slaV0uZW5jb2RlKCVzLHcudWludDMyKCVpKS5mb3JrKCkpLmxkZWxpbSgpXCIsIGZpZWxkSW5kZXgsIHJlZiwgKGZpZWxkLmlkIDw8IDMgfCAyKSA+Pj4gMCk7XG59XG5cbi8qKlxuICogR2VuZXJhdGVzIGFuIGVuY29kZXIgc3BlY2lmaWMgdG8gdGhlIHNwZWNpZmllZCBtZXNzYWdlIHR5cGUuXG4gKiBAcGFyYW0ge1R5cGV9IG10eXBlIE1lc3NhZ2UgdHlwZVxuICogQHJldHVybnMge0NvZGVnZW59IENvZGVnZW4gaW5zdGFuY2VcbiAqL1xuZnVuY3Rpb24gZW5jb2RlcihtdHlwZSkge1xuICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLXVuZXhwZWN0ZWQtbXVsdGlsaW5lLCBibG9jay1zY29wZWQtdmFyLCBuby1yZWRlY2xhcmUgKi9cbiAgICB2YXIgZ2VuID0gdXRpbC5jb2RlZ2VuKFtcIm1cIiwgXCJ3XCJdLCBtdHlwZS5uYW1lICsgXCIkZW5jb2RlXCIpXG4gICAgKFwiaWYoIXcpXCIpXG4gICAgICAgIChcInc9V3JpdGVyLmNyZWF0ZSgpXCIpO1xuXG4gICAgdmFyIGksIHJlZjtcblxuICAgIC8vIFwid2hlbiBhIG1lc3NhZ2UgaXMgc2VyaWFsaXplZCBpdHMga25vd24gZmllbGRzIHNob3VsZCBiZSB3cml0dGVuIHNlcXVlbnRpYWxseSBieSBmaWVsZCBudW1iZXJcIlxuICAgIHZhciBmaWVsZHMgPSAvKiBpbml0aWFsaXplcyAqLyBtdHlwZS5maWVsZHNBcnJheS5zbGljZSgpLnNvcnQodXRpbC5jb21wYXJlRmllbGRzQnlJZCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZpZWxkcy5sZW5ndGg7ICsraSkge1xuICAgICAgICB2YXIgZmllbGQgICAgPSBmaWVsZHNbaV0ucmVzb2x2ZSgpLFxuICAgICAgICAgICAgaW5kZXggICAgPSBtdHlwZS5fZmllbGRzQXJyYXkuaW5kZXhPZihmaWVsZCksXG4gICAgICAgICAgICB0eXBlICAgICA9IGZpZWxkLnJlc29sdmVkVHlwZSBpbnN0YW5jZW9mIEVudW0gPyBcImludDMyXCIgOiBmaWVsZC50eXBlLFxuICAgICAgICAgICAgd2lyZVR5cGUgPSB0eXBlcy5iYXNpY1t0eXBlXTtcbiAgICAgICAgICAgIHJlZiAgICAgID0gXCJtXCIgKyB1dGlsLnNhZmVQcm9wKGZpZWxkLm5hbWUpO1xuXG4gICAgICAgIC8vIE1hcCBmaWVsZHNcbiAgICAgICAgaWYgKGZpZWxkLm1hcCkge1xuICAgICAgICAgICAgZ2VuXG4gICAgKFwiaWYoJXMhPW51bGwmJk9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG0sJWopKXtcIiwgcmVmLCBmaWVsZC5uYW1lKSAvLyAhPT0gdW5kZWZpbmVkICYmICE9PSBudWxsXG4gICAgICAgIChcImZvcih2YXIga3M9T2JqZWN0LmtleXMoJXMpLGk9MDtpPGtzLmxlbmd0aDsrK2kpe1wiLCByZWYpXG4gICAgICAgICAgICAoXCJ3LnVpbnQzMiglaSkuZm9yaygpLnVpbnQzMiglaSkuJXMoa3NbaV0pXCIsIChmaWVsZC5pZCA8PCAzIHwgMikgPj4+IDAsIDggfCB0eXBlcy5tYXBLZXlbZmllbGQua2V5VHlwZV0sIGZpZWxkLmtleVR5cGUpO1xuICAgICAgICAgICAgaWYgKHdpcmVUeXBlID09PSB1bmRlZmluZWQpIGdlblxuICAgICAgICAgICAgKFwidHlwZXNbJWldLmVuY29kZSglc1trc1tpXV0sdy51aW50MzIoMTgpLmZvcmsoKSkubGRlbGltKCkubGRlbGltKClcIiwgaW5kZXgsIHJlZik7IC8vIGNhbid0IGJlIGdyb3Vwc1xuICAgICAgICAgICAgZWxzZSBnZW5cbiAgICAgICAgICAgIChcIi51aW50MzIoJWkpLiVzKCVzW2tzW2ldXSkubGRlbGltKClcIiwgMTYgfCB3aXJlVHlwZSwgdHlwZSwgcmVmKTtcbiAgICAgICAgICAgIGdlblxuICAgICAgICAoXCJ9XCIpXG4gICAgKFwifVwiKTtcblxuICAgICAgICAgICAgLy8gUmVwZWF0ZWQgZmllbGRzXG4gICAgICAgIH0gZWxzZSBpZiAoZmllbGQucmVwZWF0ZWQpIHsgZ2VuXG4gICAgKFwiaWYoJXMhPW51bGwmJiVzLmxlbmd0aCl7XCIsIHJlZiwgcmVmKTsgLy8gIT09IHVuZGVmaW5lZCAmJiAhPT0gbnVsbFxuXG4gICAgICAgICAgICAvLyBQYWNrZWQgcmVwZWF0ZWRcbiAgICAgICAgICAgIGlmIChmaWVsZC5wYWNrZWQgJiYgdHlwZXMucGFja2VkW3R5cGVdICE9PSB1bmRlZmluZWQpIHsgZ2VuXG5cbiAgICAgICAgKFwidy51aW50MzIoJWkpLmZvcmsoKVwiLCAoZmllbGQuaWQgPDwgMyB8IDIpID4+PiAwKVxuICAgICAgICAoXCJmb3IodmFyIGk9MDtpPCVzLmxlbmd0aDsrK2kpXCIsIHJlZilcbiAgICAgICAgICAgIChcIncuJXMoJXNbaV0pXCIsIHR5cGUsIHJlZilcbiAgICAgICAgKFwidy5sZGVsaW0oKVwiKTtcblxuICAgICAgICAgICAgLy8gTm9uLXBhY2tlZFxuICAgICAgICAgICAgfSBlbHNlIHsgZ2VuXG5cbiAgICAgICAgKFwiZm9yKHZhciBpPTA7aTwlcy5sZW5ndGg7KytpKVwiLCByZWYpO1xuICAgICAgICAgICAgICAgIGlmICh3aXJlVHlwZSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgZ2VuVHlwZVBhcnRpYWwoZ2VuLCBmaWVsZCwgaW5kZXgsIHJlZiArIFwiW2ldXCIpO1xuICAgICAgICAgICAgICAgIGVsc2UgZ2VuXG4gICAgICAgICAgICAoXCJ3LnVpbnQzMiglaSkuJXMoJXNbaV0pXCIsIChmaWVsZC5pZCA8PCAzIHwgd2lyZVR5cGUpID4+PiAwLCB0eXBlLCByZWYpO1xuXG4gICAgICAgICAgICB9IGdlblxuICAgIChcIn1cIik7XG5cbiAgICAgICAgLy8gTm9uLXJlcGVhdGVkXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoZmllbGQub3B0aW9uYWwpIGdlblxuICAgIChcImlmKCVzIT1udWxsJiZPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChtLCVqKSlcIiwgcmVmLCBmaWVsZC5uYW1lKTsgLy8gIT09IHVuZGVmaW5lZCAmJiAhPT0gbnVsbFxuXG4gICAgICAgICAgICBpZiAod2lyZVR5cGUgPT09IHVuZGVmaW5lZClcbiAgICAgICAgZ2VuVHlwZVBhcnRpYWwoZ2VuLCBmaWVsZCwgaW5kZXgsIHJlZik7XG4gICAgICAgICAgICBlbHNlIGdlblxuICAgICAgICAoXCJ3LnVpbnQzMiglaSkuJXMoJXMpXCIsIChmaWVsZC5pZCA8PCAzIHwgd2lyZVR5cGUpID4+PiAwLCB0eXBlLCByZWYpO1xuXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZ2VuXG4gICAgKFwicmV0dXJuIHdcIik7XG4gICAgLyogZXNsaW50LWVuYWJsZSBuby11bmV4cGVjdGVkLW11bHRpbGluZSwgYmxvY2stc2NvcGVkLXZhciwgbm8tcmVkZWNsYXJlICovXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/encoder.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/enum.js":
/*!*********************************************!*\
  !*** ./node_modules/protobufjs/src/enum.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(/*! ./object */ \"./node_modules/protobufjs/src/object.js\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = __webpack_require__(/*! ./namespace */ \"./node_modules/protobufjs/src/namespace.js\"),\n    util = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n */\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"       , this.options,\n        \"valuesOptions\" , this.valuesOptions,\n        \"values\"        , this.values,\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"       , keepComments ? this.comment : undefined,\n        \"comments\"      , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @param {Object.<string, *>|undefined} [options] Options, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    if (options) {\n        if (this.valuesOptions === undefined)\n            this.valuesOptions = {};\n        this.valuesOptions[name] = options || null;\n    }\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions)\n        delete this.valuesOptions[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/enum.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/field.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/field.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(/*! ./object */ \"./node_modules/protobufjs/src/object.js\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    types = __webpack_require__(/*! ./types */ \"./node_modules/protobufjs/src/types.js\"),\n    util  = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    } else if (this.options && this.options.proto3_optional) {\n        // proto3 scalar value marked optional; should default to null\n        this.typeDefault = null;\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/field.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/index-light.js":
/*!****************************************************!*\
  !*** ./node_modules/protobufjs/src/index-light.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar protobuf = module.exports = __webpack_require__(/*! ./index-minimal */ \"./node_modules/protobufjs/src/index-minimal.js\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = __webpack_require__(/*! ./encoder */ \"./node_modules/protobufjs/src/encoder.js\");\nprotobuf.decoder          = __webpack_require__(/*! ./decoder */ \"./node_modules/protobufjs/src/decoder.js\");\nprotobuf.verifier         = __webpack_require__(/*! ./verifier */ \"./node_modules/protobufjs/src/verifier.js\");\nprotobuf.converter        = __webpack_require__(/*! ./converter */ \"./node_modules/protobufjs/src/converter.js\");\n\n// Reflection\nprotobuf.ReflectionObject = __webpack_require__(/*! ./object */ \"./node_modules/protobufjs/src/object.js\");\nprotobuf.Namespace        = __webpack_require__(/*! ./namespace */ \"./node_modules/protobufjs/src/namespace.js\");\nprotobuf.Root             = __webpack_require__(/*! ./root */ \"./node_modules/protobufjs/src/root.js\");\nprotobuf.Enum             = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\");\nprotobuf.Type             = __webpack_require__(/*! ./type */ \"./node_modules/protobufjs/src/type.js\");\nprotobuf.Field            = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\");\nprotobuf.OneOf            = __webpack_require__(/*! ./oneof */ \"./node_modules/protobufjs/src/oneof.js\");\nprotobuf.MapField         = __webpack_require__(/*! ./mapfield */ \"./node_modules/protobufjs/src/mapfield.js\");\nprotobuf.Service          = __webpack_require__(/*! ./service */ \"./node_modules/protobufjs/src/service.js\");\nprotobuf.Method           = __webpack_require__(/*! ./method */ \"./node_modules/protobufjs/src/method.js\");\n\n// Runtime\nprotobuf.Message          = __webpack_require__(/*! ./message */ \"./node_modules/protobufjs/src/message.js\");\nprotobuf.wrappers         = __webpack_require__(/*! ./wrappers */ \"./node_modules/protobufjs/src/wrappers.js\");\n\n// Utility\nprotobuf.types            = __webpack_require__(/*! ./types */ \"./node_modules/protobufjs/src/types.js\");\nprotobuf.util             = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvaW5kZXgtbGlnaHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixlQUFlLDZHQUEyQzs7QUFFMUQ7O0FBRUE7QUFDQSxxQ0FBcUMsWUFBWSxLQUFLLGdCQUFnQjtBQUN0RTtBQUNBLFVBQVU7QUFDVixXQUFXLFlBQVk7QUFDdkIsV0FBVyxNQUFNO0FBQ2pCLGFBQWE7QUFDYjs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsY0FBYztBQUN6QixhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxjQUFjO0FBQ3pCLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxNQUFNO0FBQ2pCLGFBQWEsZUFBZTtBQUM1QixTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLE1BQU07QUFDakIsYUFBYSxNQUFNO0FBQ25CLFlBQVksT0FBTztBQUNuQixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsNEJBQTRCLG1CQUFPLENBQUMsMkRBQVc7QUFDL0MsNEJBQTRCLG1CQUFPLENBQUMsMkRBQVc7QUFDL0MsNEJBQTRCLG1CQUFPLENBQUMsNkRBQVk7QUFDaEQsNEJBQTRCLG1CQUFPLENBQUMsK0RBQWE7O0FBRWpEO0FBQ0EsNEJBQTRCLG1CQUFPLENBQUMseURBQVU7QUFDOUMsNEJBQTRCLG1CQUFPLENBQUMsK0RBQWE7QUFDakQsNEJBQTRCLG1CQUFPLENBQUMscURBQVE7QUFDNUMsNEJBQTRCLG1CQUFPLENBQUMscURBQVE7QUFDNUMsNEJBQTRCLG1CQUFPLENBQUMscURBQVE7QUFDNUMsNEJBQTRCLG1CQUFPLENBQUMsdURBQVM7QUFDN0MsNEJBQTRCLG1CQUFPLENBQUMsdURBQVM7QUFDN0MsNEJBQTRCLG1CQUFPLENBQUMsNkRBQVk7QUFDaEQsNEJBQTRCLG1CQUFPLENBQUMsMkRBQVc7QUFDL0MsNEJBQTRCLG1CQUFPLENBQUMseURBQVU7O0FBRTlDO0FBQ0EsNEJBQTRCLG1CQUFPLENBQUMsMkRBQVc7QUFDL0MsNEJBQTRCLG1CQUFPLENBQUMsNkRBQVk7O0FBRWhEO0FBQ0EsNEJBQTRCLG1CQUFPLENBQUMsdURBQVM7QUFDN0MsNEJBQTRCLG1CQUFPLENBQUMscURBQVE7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3RvYnVmanMvc3JjL2luZGV4LWxpZ2h0LmpzPzVkYWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgcHJvdG9idWYgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuL2luZGV4LW1pbmltYWxcIik7XG5cbnByb3RvYnVmLmJ1aWxkID0gXCJsaWdodFwiO1xuXG4vKipcbiAqIEEgbm9kZS1zdHlsZSBjYWxsYmFjayBhcyB1c2VkIGJ5IHtAbGluayBsb2FkfSBhbmQge0BsaW5rIFJvb3QjbG9hZH0uXG4gKiBAdHlwZWRlZiBMb2FkQ2FsbGJhY2tcbiAqIEB0eXBlIHtmdW5jdGlvbn1cbiAqIEBwYXJhbSB7RXJyb3J8bnVsbH0gZXJyb3IgRXJyb3IsIGlmIGFueSwgb3RoZXJ3aXNlIGBudWxsYFxuICogQHBhcmFtIHtSb290fSBbcm9vdF0gUm9vdCwgaWYgdGhlcmUgaGFzbid0IGJlZW4gYW4gZXJyb3JcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKi9cblxuLyoqXG4gKiBMb2FkcyBvbmUgb3IgbXVsdGlwbGUgLnByb3RvIG9yIHByZXByb2Nlc3NlZCAuanNvbiBmaWxlcyBpbnRvIGEgY29tbW9uIHJvb3QgbmFtZXNwYWNlIGFuZCBjYWxscyB0aGUgY2FsbGJhY2suXG4gKiBAcGFyYW0ge3N0cmluZ3xzdHJpbmdbXX0gZmlsZW5hbWUgT25lIG9yIG11bHRpcGxlIGZpbGVzIHRvIGxvYWRcbiAqIEBwYXJhbSB7Um9vdH0gcm9vdCBSb290IG5hbWVzcGFjZSwgZGVmYXVsdHMgdG8gY3JlYXRlIGEgbmV3IG9uZSBpZiBvbWl0dGVkLlxuICogQHBhcmFtIHtMb2FkQ2FsbGJhY2t9IGNhbGxiYWNrIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICogQHNlZSB7QGxpbmsgUm9vdCNsb2FkfVxuICovXG5mdW5jdGlvbiBsb2FkKGZpbGVuYW1lLCByb290LCBjYWxsYmFjaykge1xuICAgIGlmICh0eXBlb2Ygcm9vdCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGNhbGxiYWNrID0gcm9vdDtcbiAgICAgICAgcm9vdCA9IG5ldyBwcm90b2J1Zi5Sb290KCk7XG4gICAgfSBlbHNlIGlmICghcm9vdClcbiAgICAgICAgcm9vdCA9IG5ldyBwcm90b2J1Zi5Sb290KCk7XG4gICAgcmV0dXJuIHJvb3QubG9hZChmaWxlbmFtZSwgY2FsbGJhY2spO1xufVxuXG4vKipcbiAqIExvYWRzIG9uZSBvciBtdWx0aXBsZSAucHJvdG8gb3IgcHJlcHJvY2Vzc2VkIC5qc29uIGZpbGVzIGludG8gYSBjb21tb24gcm9vdCBuYW1lc3BhY2UgYW5kIGNhbGxzIHRoZSBjYWxsYmFjay5cbiAqIEBuYW1lIGxvYWRcbiAqIEBmdW5jdGlvblxuICogQHBhcmFtIHtzdHJpbmd8c3RyaW5nW119IGZpbGVuYW1lIE9uZSBvciBtdWx0aXBsZSBmaWxlcyB0byBsb2FkXG4gKiBAcGFyYW0ge0xvYWRDYWxsYmFja30gY2FsbGJhY2sgQ2FsbGJhY2sgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKiBAc2VlIHtAbGluayBSb290I2xvYWR9XG4gKiBAdmFyaWF0aW9uIDJcbiAqL1xuLy8gZnVuY3Rpb24gbG9hZChmaWxlbmFtZTpzdHJpbmcsIGNhbGxiYWNrOkxvYWRDYWxsYmFjayk6dW5kZWZpbmVkXG5cbi8qKlxuICogTG9hZHMgb25lIG9yIG11bHRpcGxlIC5wcm90byBvciBwcmVwcm9jZXNzZWQgLmpzb24gZmlsZXMgaW50byBhIGNvbW1vbiByb290IG5hbWVzcGFjZSBhbmQgcmV0dXJucyBhIHByb21pc2UuXG4gKiBAbmFtZSBsb2FkXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7c3RyaW5nfHN0cmluZ1tdfSBmaWxlbmFtZSBPbmUgb3IgbXVsdGlwbGUgZmlsZXMgdG8gbG9hZFxuICogQHBhcmFtIHtSb290fSBbcm9vdF0gUm9vdCBuYW1lc3BhY2UsIGRlZmF1bHRzIHRvIGNyZWF0ZSBhIG5ldyBvbmUgaWYgb21pdHRlZC5cbiAqIEByZXR1cm5zIHtQcm9taXNlPFJvb3Q+fSBQcm9taXNlXG4gKiBAc2VlIHtAbGluayBSb290I2xvYWR9XG4gKiBAdmFyaWF0aW9uIDNcbiAqL1xuLy8gZnVuY3Rpb24gbG9hZChmaWxlbmFtZTpzdHJpbmcsIFtyb290OlJvb3RdKTpQcm9taXNlPFJvb3Q+XG5cbnByb3RvYnVmLmxvYWQgPSBsb2FkO1xuXG4vKipcbiAqIFN5bmNocm9ub3VzbHkgbG9hZHMgb25lIG9yIG11bHRpcGxlIC5wcm90byBvciBwcmVwcm9jZXNzZWQgLmpzb24gZmlsZXMgaW50byBhIGNvbW1vbiByb290IG5hbWVzcGFjZSAobm9kZSBvbmx5KS5cbiAqIEBwYXJhbSB7c3RyaW5nfHN0cmluZ1tdfSBmaWxlbmFtZSBPbmUgb3IgbXVsdGlwbGUgZmlsZXMgdG8gbG9hZFxuICogQHBhcmFtIHtSb290fSBbcm9vdF0gUm9vdCBuYW1lc3BhY2UsIGRlZmF1bHRzIHRvIGNyZWF0ZSBhIG5ldyBvbmUgaWYgb21pdHRlZC5cbiAqIEByZXR1cm5zIHtSb290fSBSb290IG5hbWVzcGFjZVxuICogQHRocm93cyB7RXJyb3J9IElmIHN5bmNocm9ub3VzIGZldGNoaW5nIGlzIG5vdCBzdXBwb3J0ZWQgKGkuZS4gaW4gYnJvd3NlcnMpIG9yIGlmIGEgZmlsZSdzIHN5bnRheCBpcyBpbnZhbGlkXG4gKiBAc2VlIHtAbGluayBSb290I2xvYWRTeW5jfVxuICovXG5mdW5jdGlvbiBsb2FkU3luYyhmaWxlbmFtZSwgcm9vdCkge1xuICAgIGlmICghcm9vdClcbiAgICAgICAgcm9vdCA9IG5ldyBwcm90b2J1Zi5Sb290KCk7XG4gICAgcmV0dXJuIHJvb3QubG9hZFN5bmMoZmlsZW5hbWUpO1xufVxuXG5wcm90b2J1Zi5sb2FkU3luYyA9IGxvYWRTeW5jO1xuXG4vLyBTZXJpYWxpemF0aW9uXG5wcm90b2J1Zi5lbmNvZGVyICAgICAgICAgID0gcmVxdWlyZShcIi4vZW5jb2RlclwiKTtcbnByb3RvYnVmLmRlY29kZXIgICAgICAgICAgPSByZXF1aXJlKFwiLi9kZWNvZGVyXCIpO1xucHJvdG9idWYudmVyaWZpZXIgICAgICAgICA9IHJlcXVpcmUoXCIuL3ZlcmlmaWVyXCIpO1xucHJvdG9idWYuY29udmVydGVyICAgICAgICA9IHJlcXVpcmUoXCIuL2NvbnZlcnRlclwiKTtcblxuLy8gUmVmbGVjdGlvblxucHJvdG9idWYuUmVmbGVjdGlvbk9iamVjdCA9IHJlcXVpcmUoXCIuL29iamVjdFwiKTtcbnByb3RvYnVmLk5hbWVzcGFjZSAgICAgICAgPSByZXF1aXJlKFwiLi9uYW1lc3BhY2VcIik7XG5wcm90b2J1Zi5Sb290ICAgICAgICAgICAgID0gcmVxdWlyZShcIi4vcm9vdFwiKTtcbnByb3RvYnVmLkVudW0gICAgICAgICAgICAgPSByZXF1aXJlKFwiLi9lbnVtXCIpO1xucHJvdG9idWYuVHlwZSAgICAgICAgICAgICA9IHJlcXVpcmUoXCIuL3R5cGVcIik7XG5wcm90b2J1Zi5GaWVsZCAgICAgICAgICAgID0gcmVxdWlyZShcIi4vZmllbGRcIik7XG5wcm90b2J1Zi5PbmVPZiAgICAgICAgICAgID0gcmVxdWlyZShcIi4vb25lb2ZcIik7XG5wcm90b2J1Zi5NYXBGaWVsZCAgICAgICAgID0gcmVxdWlyZShcIi4vbWFwZmllbGRcIik7XG5wcm90b2J1Zi5TZXJ2aWNlICAgICAgICAgID0gcmVxdWlyZShcIi4vc2VydmljZVwiKTtcbnByb3RvYnVmLk1ldGhvZCAgICAgICAgICAgPSByZXF1aXJlKFwiLi9tZXRob2RcIik7XG5cbi8vIFJ1bnRpbWVcbnByb3RvYnVmLk1lc3NhZ2UgICAgICAgICAgPSByZXF1aXJlKFwiLi9tZXNzYWdlXCIpO1xucHJvdG9idWYud3JhcHBlcnMgICAgICAgICA9IHJlcXVpcmUoXCIuL3dyYXBwZXJzXCIpO1xuXG4vLyBVdGlsaXR5XG5wcm90b2J1Zi50eXBlcyAgICAgICAgICAgID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG5wcm90b2J1Zi51dGlsICAgICAgICAgICAgID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcblxuLy8gU2V0IHVwIHBvc3NpYmx5IGN5Y2xpYyByZWZsZWN0aW9uIGRlcGVuZGVuY2llc1xucHJvdG9idWYuUmVmbGVjdGlvbk9iamVjdC5fY29uZmlndXJlKHByb3RvYnVmLlJvb3QpO1xucHJvdG9idWYuTmFtZXNwYWNlLl9jb25maWd1cmUocHJvdG9idWYuVHlwZSwgcHJvdG9idWYuU2VydmljZSwgcHJvdG9idWYuRW51bSk7XG5wcm90b2J1Zi5Sb290Ll9jb25maWd1cmUocHJvdG9idWYuVHlwZSk7XG5wcm90b2J1Zi5GaWVsZC5fY29uZmlndXJlKHByb3RvYnVmLlR5cGUpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/index-light.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/index-minimal.js":
/*!******************************************************!*\
  !*** ./node_modules/protobufjs/src/index-minimal.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = __webpack_require__(/*! ./writer */ \"./node_modules/protobufjs/src/writer.js\");\nprotobuf.BufferWriter = __webpack_require__(/*! ./writer_buffer */ \"./node_modules/protobufjs/src/writer_buffer.js\");\nprotobuf.Reader       = __webpack_require__(/*! ./reader */ \"./node_modules/protobufjs/src/reader.js\");\nprotobuf.BufferReader = __webpack_require__(/*! ./reader_buffer */ \"./node_modules/protobufjs/src/reader_buffer.js\");\n\n// Utility\nprotobuf.util         = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\nprotobuf.rpc          = __webpack_require__(/*! ./rpc */ \"./node_modules/protobufjs/src/rpc.js\");\nprotobuf.roots        = __webpack_require__(/*! ./roots */ \"./node_modules/protobufjs/src/roots.js\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvaW5kZXgtbWluaW1hbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx3QkFBd0IsbUJBQU8sQ0FBQyx5REFBVTtBQUMxQyx3QkFBd0IsbUJBQU8sQ0FBQyx1RUFBaUI7QUFDakQsd0JBQXdCLG1CQUFPLENBQUMseURBQVU7QUFDMUMsd0JBQXdCLG1CQUFPLENBQUMsdUVBQWlCOztBQUVqRDtBQUNBLHdCQUF3QixtQkFBTyxDQUFDLHFFQUFnQjtBQUNoRCx3QkFBd0IsbUJBQU8sQ0FBQyxtREFBTztBQUN2Qyx3QkFBd0IsbUJBQU8sQ0FBQyx1REFBUztBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3RvYnVmanMvc3JjL2luZGV4LW1pbmltYWwuanM/OTQzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBwcm90b2J1ZiA9IGV4cG9ydHM7XG5cbi8qKlxuICogQnVpbGQgdHlwZSwgb25lIG9mIGBcImZ1bGxcImAsIGBcImxpZ2h0XCJgIG9yIGBcIm1pbmltYWxcImAuXG4gKiBAbmFtZSBidWlsZFxuICogQHR5cGUge3N0cmluZ31cbiAqIEBjb25zdFxuICovXG5wcm90b2J1Zi5idWlsZCA9IFwibWluaW1hbFwiO1xuXG4vLyBTZXJpYWxpemF0aW9uXG5wcm90b2J1Zi5Xcml0ZXIgICAgICAgPSByZXF1aXJlKFwiLi93cml0ZXJcIik7XG5wcm90b2J1Zi5CdWZmZXJXcml0ZXIgPSByZXF1aXJlKFwiLi93cml0ZXJfYnVmZmVyXCIpO1xucHJvdG9idWYuUmVhZGVyICAgICAgID0gcmVxdWlyZShcIi4vcmVhZGVyXCIpO1xucHJvdG9idWYuQnVmZmVyUmVhZGVyID0gcmVxdWlyZShcIi4vcmVhZGVyX2J1ZmZlclwiKTtcblxuLy8gVXRpbGl0eVxucHJvdG9idWYudXRpbCAgICAgICAgID0gcmVxdWlyZShcIi4vdXRpbC9taW5pbWFsXCIpO1xucHJvdG9idWYucnBjICAgICAgICAgID0gcmVxdWlyZShcIi4vcnBjXCIpO1xucHJvdG9idWYucm9vdHMgICAgICAgID0gcmVxdWlyZShcIi4vcm9vdHNcIik7XG5wcm90b2J1Zi5jb25maWd1cmUgICAgPSBjb25maWd1cmU7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4vKipcbiAqIFJlY29uZmlndXJlcyB0aGUgbGlicmFyeSBhY2NvcmRpbmcgdG8gdGhlIGVudmlyb25tZW50LlxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuZnVuY3Rpb24gY29uZmlndXJlKCkge1xuICAgIHByb3RvYnVmLnV0aWwuX2NvbmZpZ3VyZSgpO1xuICAgIHByb3RvYnVmLldyaXRlci5fY29uZmlndXJlKHByb3RvYnVmLkJ1ZmZlcldyaXRlcik7XG4gICAgcHJvdG9idWYuUmVhZGVyLl9jb25maWd1cmUocHJvdG9idWYuQnVmZmVyUmVhZGVyKTtcbn1cblxuLy8gU2V0IHVwIGJ1ZmZlciB1dGlsaXR5IGFjY29yZGluZyB0byB0aGUgZW52aXJvbm1lbnRcbmNvbmZpZ3VyZSgpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/index-minimal.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/mapfield.js":
/*!*************************************************!*\
  !*** ./node_modules/protobufjs/src/mapfield.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = MapField;\n\n// extends Field\nvar Field = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = __webpack_require__(/*! ./types */ \"./node_modules/protobufjs/src/types.js\"),\n    util    = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvbWFwZmllbGQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjs7QUFFQTtBQUNBLFlBQVksbUJBQU8sQ0FBQyx1REFBUztBQUM3Qjs7QUFFQSxjQUFjLG1CQUFPLENBQUMsdURBQVM7QUFDL0IsY0FBYyxtQkFBTyxDQUFDLHFEQUFROztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsbUJBQW1CO0FBQzlCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQSw0QkFBNEI7O0FBRTVCO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLGNBQWMsUUFBUTtBQUN0Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0Qjs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsV0FBVztBQUN0QixhQUFhLFVBQVU7QUFDdkIsWUFBWSxXQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQixhQUFhLFdBQVc7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLCtHQUErRztBQUMxSCxXQUFXLDRKQUE0SixHQUFHO0FBQzFLLGFBQWEsZ0JBQWdCO0FBQzdCLHlCQUF5Qiw2RkFBNkY7QUFDdEg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3RvYnVmanMvc3JjL21hcGZpZWxkLmpzPzJiOTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5tb2R1bGUuZXhwb3J0cyA9IE1hcEZpZWxkO1xuXG4vLyBleHRlbmRzIEZpZWxkXG52YXIgRmllbGQgPSByZXF1aXJlKFwiLi9maWVsZFwiKTtcbigoTWFwRmllbGQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShGaWVsZC5wcm90b3R5cGUpKS5jb25zdHJ1Y3RvciA9IE1hcEZpZWxkKS5jbGFzc05hbWUgPSBcIk1hcEZpZWxkXCI7XG5cbnZhciB0eXBlcyAgID0gcmVxdWlyZShcIi4vdHlwZXNcIiksXG4gICAgdXRpbCAgICA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5cbi8qKlxuICogQ29uc3RydWN0cyBhIG5ldyBtYXAgZmllbGQgaW5zdGFuY2UuXG4gKiBAY2xhc3NkZXNjIFJlZmxlY3RlZCBtYXAgZmllbGQuXG4gKiBAZXh0ZW5kcyBGaWVsZEJhc2VcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgVW5pcXVlIG5hbWUgd2l0aGluIGl0cyBuYW1lc3BhY2VcbiAqIEBwYXJhbSB7bnVtYmVyfSBpZCBVbmlxdWUgaWQgd2l0aGluIGl0cyBuYW1lc3BhY2VcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXlUeXBlIEtleSB0eXBlXG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZSBWYWx1ZSB0eXBlXG4gKiBAcGFyYW0ge09iamVjdC48c3RyaW5nLCo+fSBbb3B0aW9uc10gRGVjbGFyZWQgb3B0aW9uc1xuICogQHBhcmFtIHtzdHJpbmd9IFtjb21tZW50XSBDb21tZW50IGFzc29jaWF0ZWQgd2l0aCB0aGlzIGZpZWxkXG4gKi9cbmZ1bmN0aW9uIE1hcEZpZWxkKG5hbWUsIGlkLCBrZXlUeXBlLCB0eXBlLCBvcHRpb25zLCBjb21tZW50KSB7XG4gICAgRmllbGQuY2FsbCh0aGlzLCBuYW1lLCBpZCwgdHlwZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIG9wdGlvbnMsIGNvbW1lbnQpO1xuXG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKCF1dGlsLmlzU3RyaW5nKGtleVR5cGUpKVxuICAgICAgICB0aHJvdyBUeXBlRXJyb3IoXCJrZXlUeXBlIG11c3QgYmUgYSBzdHJpbmdcIik7XG5cbiAgICAvKipcbiAgICAgKiBLZXkgdHlwZS5cbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIHRoaXMua2V5VHlwZSA9IGtleVR5cGU7IC8vIHRvSlNPTiwgbWFya2VyXG5cbiAgICAvKipcbiAgICAgKiBSZXNvbHZlZCBrZXkgdHlwZSBpZiBub3QgYSBiYXNpYyB0eXBlLlxuICAgICAqIEB0eXBlIHtSZWZsZWN0aW9uT2JqZWN0fG51bGx9XG4gICAgICovXG4gICAgdGhpcy5yZXNvbHZlZEtleVR5cGUgPSBudWxsO1xuXG4gICAgLy8gT3ZlcnJpZGVzIEZpZWxkI21hcFxuICAgIHRoaXMubWFwID0gdHJ1ZTtcbn1cblxuLyoqXG4gKiBNYXAgZmllbGQgZGVzY3JpcHRvci5cbiAqIEBpbnRlcmZhY2UgSU1hcEZpZWxkXG4gKiBAZXh0ZW5kcyB7SUZpZWxkfVxuICogQHByb3BlcnR5IHtzdHJpbmd9IGtleVR5cGUgS2V5IHR5cGVcbiAqL1xuXG4vKipcbiAqIEV4dGVuc2lvbiBtYXAgZmllbGQgZGVzY3JpcHRvci5cbiAqIEBpbnRlcmZhY2UgSUV4dGVuc2lvbk1hcEZpZWxkXG4gKiBAZXh0ZW5kcyBJTWFwRmllbGRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBleHRlbmQgRXh0ZW5kZWQgdHlwZVxuICovXG5cbi8qKlxuICogQ29uc3RydWN0cyBhIG1hcCBmaWVsZCBmcm9tIGEgbWFwIGZpZWxkIGRlc2NyaXB0b3IuXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZSBGaWVsZCBuYW1lXG4gKiBAcGFyYW0ge0lNYXBGaWVsZH0ganNvbiBNYXAgZmllbGQgZGVzY3JpcHRvclxuICogQHJldHVybnMge01hcEZpZWxkfSBDcmVhdGVkIG1hcCBmaWVsZFxuICogQHRocm93cyB7VHlwZUVycm9yfSBJZiBhcmd1bWVudHMgYXJlIGludmFsaWRcbiAqL1xuTWFwRmllbGQuZnJvbUpTT04gPSBmdW5jdGlvbiBmcm9tSlNPTihuYW1lLCBqc29uKSB7XG4gICAgcmV0dXJuIG5ldyBNYXBGaWVsZChuYW1lLCBqc29uLmlkLCBqc29uLmtleVR5cGUsIGpzb24udHlwZSwganNvbi5vcHRpb25zLCBqc29uLmNvbW1lbnQpO1xufTtcblxuLyoqXG4gKiBDb252ZXJ0cyB0aGlzIG1hcCBmaWVsZCB0byBhIG1hcCBmaWVsZCBkZXNjcmlwdG9yLlxuICogQHBhcmFtIHtJVG9KU09OT3B0aW9uc30gW3RvSlNPTk9wdGlvbnNdIEpTT04gY29udmVyc2lvbiBvcHRpb25zXG4gKiBAcmV0dXJucyB7SU1hcEZpZWxkfSBNYXAgZmllbGQgZGVzY3JpcHRvclxuICovXG5NYXBGaWVsZC5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gdG9KU09OKHRvSlNPTk9wdGlvbnMpIHtcbiAgICB2YXIga2VlcENvbW1lbnRzID0gdG9KU09OT3B0aW9ucyA/IEJvb2xlYW4odG9KU09OT3B0aW9ucy5rZWVwQ29tbWVudHMpIDogZmFsc2U7XG4gICAgcmV0dXJuIHV0aWwudG9PYmplY3QoW1xuICAgICAgICBcImtleVR5cGVcIiAsIHRoaXMua2V5VHlwZSxcbiAgICAgICAgXCJ0eXBlXCIgICAgLCB0aGlzLnR5cGUsXG4gICAgICAgIFwiaWRcIiAgICAgICwgdGhpcy5pZCxcbiAgICAgICAgXCJleHRlbmRcIiAgLCB0aGlzLmV4dGVuZCxcbiAgICAgICAgXCJvcHRpb25zXCIgLCB0aGlzLm9wdGlvbnMsXG4gICAgICAgIFwiY29tbWVudFwiICwga2VlcENvbW1lbnRzID8gdGhpcy5jb21tZW50IDogdW5kZWZpbmVkXG4gICAgXSk7XG59O1xuXG4vKipcbiAqIEBvdmVycmlkZVxuICovXG5NYXBGaWVsZC5wcm90b3R5cGUucmVzb2x2ZSA9IGZ1bmN0aW9uIHJlc29sdmUoKSB7XG4gICAgaWYgKHRoaXMucmVzb2x2ZWQpXG4gICAgICAgIHJldHVybiB0aGlzO1xuXG4gICAgLy8gQmVzaWRlcyBhIHZhbHVlIHR5cGUsIG1hcCBmaWVsZHMgaGF2ZSBhIGtleSB0eXBlIHRoYXQgbWF5IGJlIFwiYW55IHNjYWxhciB0eXBlIGV4Y2VwdCBmb3IgZmxvYXRpbmcgcG9pbnQgdHlwZXMgYW5kIGJ5dGVzXCJcbiAgICBpZiAodHlwZXMubWFwS2V5W3RoaXMua2V5VHlwZV0gPT09IHVuZGVmaW5lZClcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJpbnZhbGlkIGtleSB0eXBlOiBcIiArIHRoaXMua2V5VHlwZSk7XG5cbiAgICByZXR1cm4gRmllbGQucHJvdG90eXBlLnJlc29sdmUuY2FsbCh0aGlzKTtcbn07XG5cbi8qKlxuICogTWFwIGZpZWxkIGRlY29yYXRvciAoVHlwZVNjcmlwdCkuXG4gKiBAbmFtZSBNYXBGaWVsZC5kXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7bnVtYmVyfSBmaWVsZElkIEZpZWxkIGlkXG4gKiBAcGFyYW0ge1wiaW50MzJcInxcInVpbnQzMlwifFwic2ludDMyXCJ8XCJmaXhlZDMyXCJ8XCJzZml4ZWQzMlwifFwiaW50NjRcInxcInVpbnQ2NFwifFwic2ludDY0XCJ8XCJmaXhlZDY0XCJ8XCJzZml4ZWQ2NFwifFwiYm9vbFwifFwic3RyaW5nXCJ9IGZpZWxkS2V5VHlwZSBGaWVsZCBrZXkgdHlwZVxuICogQHBhcmFtIHtcImRvdWJsZVwifFwiZmxvYXRcInxcImludDMyXCJ8XCJ1aW50MzJcInxcInNpbnQzMlwifFwiZml4ZWQzMlwifFwic2ZpeGVkMzJcInxcImludDY0XCJ8XCJ1aW50NjRcInxcInNpbnQ2NFwifFwiZml4ZWQ2NFwifFwic2ZpeGVkNjRcInxcImJvb2xcInxcInN0cmluZ1wifFwiYnl0ZXNcInxPYmplY3R8Q29uc3RydWN0b3I8e30+fSBmaWVsZFZhbHVlVHlwZSBGaWVsZCB2YWx1ZSB0eXBlXG4gKiBAcmV0dXJucyB7RmllbGREZWNvcmF0b3J9IERlY29yYXRvciBmdW5jdGlvblxuICogQHRlbXBsYXRlIFQgZXh0ZW5kcyB7IFtrZXk6IHN0cmluZ106IG51bWJlciB8IExvbmcgfCBzdHJpbmcgfCBib29sZWFuIHwgVWludDhBcnJheSB8IEJ1ZmZlciB8IG51bWJlcltdIHwgTWVzc2FnZTx7fT4gfVxuICovXG5NYXBGaWVsZC5kID0gZnVuY3Rpb24gZGVjb3JhdGVNYXBGaWVsZChmaWVsZElkLCBmaWVsZEtleVR5cGUsIGZpZWxkVmFsdWVUeXBlKSB7XG5cbiAgICAvLyBzdWJtZXNzYWdlIHZhbHVlOiBkZWNvcmF0ZSB0aGUgc3VibWVzc2FnZSBhbmQgdXNlIGl0cyBuYW1lIGFzIHRoZSB0eXBlXG4gICAgaWYgKHR5cGVvZiBmaWVsZFZhbHVlVHlwZSA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmaWVsZFZhbHVlVHlwZSA9IHV0aWwuZGVjb3JhdGVUeXBlKGZpZWxkVmFsdWVUeXBlKS5uYW1lO1xuXG4gICAgLy8gZW51bSByZWZlcmVuY2UgdmFsdWU6IGNyZWF0ZSBhIHJlZmxlY3RlZCBjb3B5IG9mIHRoZSBlbnVtIGFuZCBrZWVwIHJldXNlaW5nIGl0XG4gICAgZWxzZSBpZiAoZmllbGRWYWx1ZVR5cGUgJiYgdHlwZW9mIGZpZWxkVmFsdWVUeXBlID09PSBcIm9iamVjdFwiKVxuICAgICAgICBmaWVsZFZhbHVlVHlwZSA9IHV0aWwuZGVjb3JhdGVFbnVtKGZpZWxkVmFsdWVUeXBlKS5uYW1lO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIG1hcEZpZWxkRGVjb3JhdG9yKHByb3RvdHlwZSwgZmllbGROYW1lKSB7XG4gICAgICAgIHV0aWwuZGVjb3JhdGVUeXBlKHByb3RvdHlwZS5jb25zdHJ1Y3RvcilcbiAgICAgICAgICAgIC5hZGQobmV3IE1hcEZpZWxkKGZpZWxkTmFtZSwgZmllbGRJZCwgZmllbGRLZXlUeXBlLCBmaWVsZFZhbHVlVHlwZSkpO1xuICAgIH07XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/mapfield.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/message.js":
/*!************************************************!*\
  !*** ./node_modules/protobufjs/src/message.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = Message;\n\nvar util = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvbWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiOztBQUVBLFdBQVcsbUJBQU8sQ0FBQyxxRUFBZ0I7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxlQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsaUJBQWlCO0FBQ3pFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLFdBQVcsbUJBQW1CO0FBQzlCLGFBQWEsWUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcscUJBQXFCO0FBQ2hDLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLHFCQUFxQjtBQUNoQyxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsbUJBQW1CO0FBQzlCLGFBQWEsR0FBRztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixhQUFhLEdBQUc7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUIsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixhQUFhLEdBQUc7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxXQUFXLG9CQUFvQjtBQUMvQixhQUFhLG1CQUFtQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEsbUJBQW1CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm90b2J1ZmpzL3NyYy9tZXNzYWdlLmpzPzhmOGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5tb2R1bGUuZXhwb3J0cyA9IE1lc3NhZ2U7XG5cbnZhciB1dGlsID0gcmVxdWlyZShcIi4vdXRpbC9taW5pbWFsXCIpO1xuXG4vKipcbiAqIENvbnN0cnVjdHMgYSBuZXcgbWVzc2FnZSBpbnN0YW5jZS5cbiAqIEBjbGFzc2Rlc2MgQWJzdHJhY3QgcnVudGltZSBtZXNzYWdlLlxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge1Byb3BlcnRpZXM8VD59IFtwcm9wZXJ0aWVzXSBQcm9wZXJ0aWVzIHRvIHNldFxuICogQHRlbXBsYXRlIFQgZXh0ZW5kcyBvYmplY3QgPSBvYmplY3RcbiAqL1xuZnVuY3Rpb24gTWVzc2FnZShwcm9wZXJ0aWVzKSB7XG4gICAgLy8gbm90IHVzZWQgaW50ZXJuYWxseVxuICAgIGlmIChwcm9wZXJ0aWVzKVxuICAgICAgICBmb3IgKHZhciBrZXlzID0gT2JqZWN0LmtleXMocHJvcGVydGllcyksIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSlcbiAgICAgICAgICAgIHRoaXNba2V5c1tpXV0gPSBwcm9wZXJ0aWVzW2tleXNbaV1dO1xufVxuXG4vKipcbiAqIFJlZmVyZW5jZSB0byB0aGUgcmVmbGVjdGVkIHR5cGUuXG4gKiBAbmFtZSBNZXNzYWdlLiR0eXBlXG4gKiBAdHlwZSB7VHlwZX1cbiAqIEByZWFkb25seVxuICovXG5cbi8qKlxuICogUmVmZXJlbmNlIHRvIHRoZSByZWZsZWN0ZWQgdHlwZS5cbiAqIEBuYW1lIE1lc3NhZ2UjJHR5cGVcbiAqIEB0eXBlIHtUeXBlfVxuICogQHJlYWRvbmx5XG4gKi9cblxuLyplc2xpbnQtZGlzYWJsZSB2YWxpZC1qc2RvYyovXG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBtZXNzYWdlIG9mIHRoaXMgdHlwZSB1c2luZyB0aGUgc3BlY2lmaWVkIHByb3BlcnRpZXMuXG4gKiBAcGFyYW0ge09iamVjdC48c3RyaW5nLCo+fSBbcHJvcGVydGllc10gUHJvcGVydGllcyB0byBzZXRcbiAqIEByZXR1cm5zIHtNZXNzYWdlPFQ+fSBNZXNzYWdlIGluc3RhbmNlXG4gKiBAdGVtcGxhdGUgVCBleHRlbmRzIE1lc3NhZ2U8VD5cbiAqIEB0aGlzIENvbnN0cnVjdG9yPFQ+XG4gKi9cbk1lc3NhZ2UuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKHByb3BlcnRpZXMpIHtcbiAgICByZXR1cm4gdGhpcy4kdHlwZS5jcmVhdGUocHJvcGVydGllcyk7XG59O1xuXG4vKipcbiAqIEVuY29kZXMgYSBtZXNzYWdlIG9mIHRoaXMgdHlwZS5cbiAqIEBwYXJhbSB7VHxPYmplY3QuPHN0cmluZywqPn0gbWVzc2FnZSBNZXNzYWdlIHRvIGVuY29kZVxuICogQHBhcmFtIHtXcml0ZXJ9IFt3cml0ZXJdIFdyaXRlciB0byB1c2VcbiAqIEByZXR1cm5zIHtXcml0ZXJ9IFdyaXRlclxuICogQHRlbXBsYXRlIFQgZXh0ZW5kcyBNZXNzYWdlPFQ+XG4gKiBAdGhpcyBDb25zdHJ1Y3RvcjxUPlxuICovXG5NZXNzYWdlLmVuY29kZSA9IGZ1bmN0aW9uIGVuY29kZShtZXNzYWdlLCB3cml0ZXIpIHtcbiAgICByZXR1cm4gdGhpcy4kdHlwZS5lbmNvZGUobWVzc2FnZSwgd3JpdGVyKTtcbn07XG5cbi8qKlxuICogRW5jb2RlcyBhIG1lc3NhZ2Ugb2YgdGhpcyB0eXBlIHByZWNlZWRlZCBieSBpdHMgbGVuZ3RoIGFzIGEgdmFyaW50LlxuICogQHBhcmFtIHtUfE9iamVjdC48c3RyaW5nLCo+fSBtZXNzYWdlIE1lc3NhZ2UgdG8gZW5jb2RlXG4gKiBAcGFyYW0ge1dyaXRlcn0gW3dyaXRlcl0gV3JpdGVyIHRvIHVzZVxuICogQHJldHVybnMge1dyaXRlcn0gV3JpdGVyXG4gKiBAdGVtcGxhdGUgVCBleHRlbmRzIE1lc3NhZ2U8VD5cbiAqIEB0aGlzIENvbnN0cnVjdG9yPFQ+XG4gKi9cbk1lc3NhZ2UuZW5jb2RlRGVsaW1pdGVkID0gZnVuY3Rpb24gZW5jb2RlRGVsaW1pdGVkKG1lc3NhZ2UsIHdyaXRlcikge1xuICAgIHJldHVybiB0aGlzLiR0eXBlLmVuY29kZURlbGltaXRlZChtZXNzYWdlLCB3cml0ZXIpO1xufTtcblxuLyoqXG4gKiBEZWNvZGVzIGEgbWVzc2FnZSBvZiB0aGlzIHR5cGUuXG4gKiBAbmFtZSBNZXNzYWdlLmRlY29kZVxuICogQGZ1bmN0aW9uXG4gKiBAcGFyYW0ge1JlYWRlcnxVaW50OEFycmF5fSByZWFkZXIgUmVhZGVyIG9yIGJ1ZmZlciB0byBkZWNvZGVcbiAqIEByZXR1cm5zIHtUfSBEZWNvZGVkIG1lc3NhZ2VcbiAqIEB0ZW1wbGF0ZSBUIGV4dGVuZHMgTWVzc2FnZTxUPlxuICogQHRoaXMgQ29uc3RydWN0b3I8VD5cbiAqL1xuTWVzc2FnZS5kZWNvZGUgPSBmdW5jdGlvbiBkZWNvZGUocmVhZGVyKSB7XG4gICAgcmV0dXJuIHRoaXMuJHR5cGUuZGVjb2RlKHJlYWRlcik7XG59O1xuXG4vKipcbiAqIERlY29kZXMgYSBtZXNzYWdlIG9mIHRoaXMgdHlwZSBwcmVjZWVkZWQgYnkgaXRzIGxlbmd0aCBhcyBhIHZhcmludC5cbiAqIEBuYW1lIE1lc3NhZ2UuZGVjb2RlRGVsaW1pdGVkXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7UmVhZGVyfFVpbnQ4QXJyYXl9IHJlYWRlciBSZWFkZXIgb3IgYnVmZmVyIHRvIGRlY29kZVxuICogQHJldHVybnMge1R9IERlY29kZWQgbWVzc2FnZVxuICogQHRlbXBsYXRlIFQgZXh0ZW5kcyBNZXNzYWdlPFQ+XG4gKiBAdGhpcyBDb25zdHJ1Y3RvcjxUPlxuICovXG5NZXNzYWdlLmRlY29kZURlbGltaXRlZCA9IGZ1bmN0aW9uIGRlY29kZURlbGltaXRlZChyZWFkZXIpIHtcbiAgICByZXR1cm4gdGhpcy4kdHlwZS5kZWNvZGVEZWxpbWl0ZWQocmVhZGVyKTtcbn07XG5cbi8qKlxuICogVmVyaWZpZXMgYSBtZXNzYWdlIG9mIHRoaXMgdHlwZS5cbiAqIEBuYW1lIE1lc3NhZ2UudmVyaWZ5XG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7T2JqZWN0LjxzdHJpbmcsKj59IG1lc3NhZ2UgUGxhaW4gb2JqZWN0IHRvIHZlcmlmeVxuICogQHJldHVybnMge3N0cmluZ3xudWxsfSBgbnVsbGAgaWYgdmFsaWQsIG90aGVyd2lzZSB0aGUgcmVhc29uIHdoeSBpdCBpcyBub3RcbiAqL1xuTWVzc2FnZS52ZXJpZnkgPSBmdW5jdGlvbiB2ZXJpZnkobWVzc2FnZSkge1xuICAgIHJldHVybiB0aGlzLiR0eXBlLnZlcmlmeShtZXNzYWdlKTtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBtZXNzYWdlIG9mIHRoaXMgdHlwZSBmcm9tIGEgcGxhaW4gb2JqZWN0LiBBbHNvIGNvbnZlcnRzIHZhbHVlcyB0byB0aGVpciByZXNwZWN0aXZlIGludGVybmFsIHR5cGVzLlxuICogQHBhcmFtIHtPYmplY3QuPHN0cmluZywqPn0gb2JqZWN0IFBsYWluIG9iamVjdFxuICogQHJldHVybnMge1R9IE1lc3NhZ2UgaW5zdGFuY2VcbiAqIEB0ZW1wbGF0ZSBUIGV4dGVuZHMgTWVzc2FnZTxUPlxuICogQHRoaXMgQ29uc3RydWN0b3I8VD5cbiAqL1xuTWVzc2FnZS5mcm9tT2JqZWN0ID0gZnVuY3Rpb24gZnJvbU9iamVjdChvYmplY3QpIHtcbiAgICByZXR1cm4gdGhpcy4kdHlwZS5mcm9tT2JqZWN0KG9iamVjdCk7XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBwbGFpbiBvYmplY3QgZnJvbSBhIG1lc3NhZ2Ugb2YgdGhpcyB0eXBlLiBBbHNvIGNvbnZlcnRzIHZhbHVlcyB0byBvdGhlciB0eXBlcyBpZiBzcGVjaWZpZWQuXG4gKiBAcGFyYW0ge1R9IG1lc3NhZ2UgTWVzc2FnZSBpbnN0YW5jZVxuICogQHBhcmFtIHtJQ29udmVyc2lvbk9wdGlvbnN9IFtvcHRpb25zXSBDb252ZXJzaW9uIG9wdGlvbnNcbiAqIEByZXR1cm5zIHtPYmplY3QuPHN0cmluZywqPn0gUGxhaW4gb2JqZWN0XG4gKiBAdGVtcGxhdGUgVCBleHRlbmRzIE1lc3NhZ2U8VD5cbiAqIEB0aGlzIENvbnN0cnVjdG9yPFQ+XG4gKi9cbk1lc3NhZ2UudG9PYmplY3QgPSBmdW5jdGlvbiB0b09iamVjdChtZXNzYWdlLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHRoaXMuJHR5cGUudG9PYmplY3QobWVzc2FnZSwgb3B0aW9ucyk7XG59O1xuXG4vKipcbiAqIENvbnZlcnRzIHRoaXMgbWVzc2FnZSB0byBKU09OLlxuICogQHJldHVybnMge09iamVjdC48c3RyaW5nLCo+fSBKU09OIG9iamVjdFxuICovXG5NZXNzYWdlLnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiB0b0pTT04oKSB7XG4gICAgcmV0dXJuIHRoaXMuJHR5cGUudG9PYmplY3QodGhpcywgdXRpbC50b0pTT05PcHRpb25zKTtcbn07XG5cbi8qZXNsaW50LWVuYWJsZSB2YWxpZC1qc2RvYyovIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/message.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/method.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/method.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(/*! ./object */ \"./node_modules/protobufjs/src/object.js\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/method.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/namespace.js":
/*!**************************************************!*\
  !*** ./node_modules/protobufjs/src/namespace.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(/*! ./object */ \"./node_modules/protobufjs/src/object.js\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\"),\n    util     = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\"),\n    OneOf    = __webpack_require__(/*! ./oneof */ \"./node_modules/protobufjs/src/oneof.js\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n */\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/namespace.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/object.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/object.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/object.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/oneof.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/oneof.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(/*! ./object */ \"./node_modules/protobufjs/src/object.js\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\"),\n    util  = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/oneof.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/reader.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/reader.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = Reader;\n\nvar util      = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/reader.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/reader_buffer.js":
/*!******************************************************!*\
  !*** ./node_modules/protobufjs/src/reader_buffer.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = __webpack_require__(/*! ./reader */ \"./node_modules/protobufjs/src/reader.js\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvcmVhZGVyX2J1ZmZlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiOztBQUVBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLHlEQUFVO0FBQy9COztBQUVBLFdBQVcsbUJBQU8sQ0FBQyxxRUFBZ0I7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm90b2J1ZmpzL3NyYy9yZWFkZXJfYnVmZmVyLmpzPzUwODciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5tb2R1bGUuZXhwb3J0cyA9IEJ1ZmZlclJlYWRlcjtcblxuLy8gZXh0ZW5kcyBSZWFkZXJcbnZhciBSZWFkZXIgPSByZXF1aXJlKFwiLi9yZWFkZXJcIik7XG4oQnVmZmVyUmVhZGVyLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoUmVhZGVyLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yID0gQnVmZmVyUmVhZGVyO1xuXG52YXIgdXRpbCA9IHJlcXVpcmUoXCIuL3V0aWwvbWluaW1hbFwiKTtcblxuLyoqXG4gKiBDb25zdHJ1Y3RzIGEgbmV3IGJ1ZmZlciByZWFkZXIgaW5zdGFuY2UuXG4gKiBAY2xhc3NkZXNjIFdpcmUgZm9ybWF0IHJlYWRlciB1c2luZyBub2RlIGJ1ZmZlcnMuXG4gKiBAZXh0ZW5kcyBSZWFkZXJcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtCdWZmZXJ9IGJ1ZmZlciBCdWZmZXIgdG8gcmVhZCBmcm9tXG4gKi9cbmZ1bmN0aW9uIEJ1ZmZlclJlYWRlcihidWZmZXIpIHtcbiAgICBSZWFkZXIuY2FsbCh0aGlzLCBidWZmZXIpO1xuXG4gICAgLyoqXG4gICAgICogUmVhZCBidWZmZXIuXG4gICAgICogQG5hbWUgQnVmZmVyUmVhZGVyI2J1ZlxuICAgICAqIEB0eXBlIHtCdWZmZXJ9XG4gICAgICovXG59XG5cbkJ1ZmZlclJlYWRlci5fY29uZmlndXJlID0gZnVuY3Rpb24gKCkge1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgaWYgKHV0aWwuQnVmZmVyKVxuICAgICAgICBCdWZmZXJSZWFkZXIucHJvdG90eXBlLl9zbGljZSA9IHV0aWwuQnVmZmVyLnByb3RvdHlwZS5zbGljZTtcbn07XG5cblxuLyoqXG4gKiBAb3ZlcnJpZGVcbiAqL1xuQnVmZmVyUmVhZGVyLnByb3RvdHlwZS5zdHJpbmcgPSBmdW5jdGlvbiByZWFkX3N0cmluZ19idWZmZXIoKSB7XG4gICAgdmFyIGxlbiA9IHRoaXMudWludDMyKCk7IC8vIG1vZGlmaWVzIHBvc1xuICAgIHJldHVybiB0aGlzLmJ1Zi51dGY4U2xpY2VcbiAgICAgICAgPyB0aGlzLmJ1Zi51dGY4U2xpY2UodGhpcy5wb3MsIHRoaXMucG9zID0gTWF0aC5taW4odGhpcy5wb3MgKyBsZW4sIHRoaXMubGVuKSlcbiAgICAgICAgOiB0aGlzLmJ1Zi50b1N0cmluZyhcInV0Zi04XCIsIHRoaXMucG9zLCB0aGlzLnBvcyA9IE1hdGgubWluKHRoaXMucG9zICsgbGVuLCB0aGlzLmxlbikpO1xufTtcblxuLyoqXG4gKiBSZWFkcyBhIHNlcXVlbmNlIG9mIGJ5dGVzIHByZWNlZWRlZCBieSBpdHMgbGVuZ3RoIGFzIGEgdmFyaW50LlxuICogQG5hbWUgQnVmZmVyUmVhZGVyI2J5dGVzXG4gKiBAZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtCdWZmZXJ9IFZhbHVlIHJlYWRcbiAqL1xuXG5CdWZmZXJSZWFkZXIuX2NvbmZpZ3VyZSgpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/reader_buffer.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/root.js":
/*!*********************************************!*\
  !*** ./node_modules/protobufjs/src/root.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = __webpack_require__(/*! ./namespace */ \"./node_modules/protobufjs/src/namespace.js\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\"),\n    Enum    = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    OneOf   = __webpack_require__(/*! ./oneof */ \"./node_modules/protobufjs/src/oneof.js\"),\n    util    = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        if (sync)\n            throw err;\n        var cb = callback;\n        callback = null;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n        filename = getBundledFileName(filename) || filename;\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        //do not allow to extend same field twice to prevent the error\n        if (extendedType.get(sisterField.name)) {\n            return true;\n        }\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/root.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/roots.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/roots.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvcm9vdHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvcm9vdHMuanM/MWY5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbm1vZHVsZS5leHBvcnRzID0ge307XG5cbi8qKlxuICogTmFtZWQgcm9vdHMuXG4gKiBUaGlzIGlzIHdoZXJlIHBianMgc3RvcmVzIGdlbmVyYXRlZCBzdHJ1Y3R1cmVzICh0aGUgb3B0aW9uIGAtciwgLS1yb290YCBzcGVjaWZpZXMgYSBuYW1lKS5cbiAqIENhbiBhbHNvIGJlIHVzZWQgbWFudWFsbHkgdG8gbWFrZSByb290cyBhdmFpbGFibGUgYWNyb3NzIG1vZHVsZXMuXG4gKiBAbmFtZSByb290c1xuICogQHR5cGUge09iamVjdC48c3RyaW5nLFJvb3Q+fVxuICogQGV4YW1wbGVcbiAqIC8vIHBianMgLXIgbXlyb290IC1vIGNvbXBpbGVkLmpzIC4uLlxuICpcbiAqIC8vIGluIGFub3RoZXIgbW9kdWxlOlxuICogcmVxdWlyZShcIi4vY29tcGlsZWQuanNcIik7XG4gKlxuICogLy8gaW4gYW55IHN1YnNlcXVlbnQgbW9kdWxlOlxuICogdmFyIHJvb3QgPSBwcm90b2J1Zi5yb290c1tcIm15cm9vdFwiXTtcbiAqL1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/roots.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/rpc.js":
/*!********************************************!*\
  !*** ./node_modules/protobufjs/src/rpc.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = __webpack_require__(/*! ./rpc/service */ \"./node_modules/protobufjs/src/rpc/service.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvcnBjLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQ0FBaUMsc0JBQXNCO0FBQ3ZEO0FBQ0EsVUFBVTtBQUNWLFdBQVcsbUNBQW1DLFlBQVksSUFBSTtBQUM5RCxXQUFXLFlBQVk7QUFDdkIsV0FBVyxpQkFBaUI7QUFDNUIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0EsbUNBQW1DLGNBQWM7QUFDakQ7QUFDQSxVQUFVO0FBQ1YsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsaUJBQWlCO0FBQzVCLGFBQWE7QUFDYjs7QUFFQSxjQUFjLG1CQUFPLENBQUMsbUVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3RvYnVmanMvc3JjL3JwYy5qcz80Y2NlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIFN0cmVhbWluZyBSUEMgaGVscGVycy5cbiAqIEBuYW1lc3BhY2VcbiAqL1xudmFyIHJwYyA9IGV4cG9ydHM7XG5cbi8qKlxuICogUlBDIGltcGxlbWVudGF0aW9uIHBhc3NlZCB0byB7QGxpbmsgU2VydmljZSNjcmVhdGV9IHBlcmZvcm1pbmcgYSBzZXJ2aWNlIHJlcXVlc3Qgb24gbmV0d29yayBsZXZlbCwgaS5lLiBieSB1dGlsaXppbmcgaHR0cCByZXF1ZXN0cyBvciB3ZWJzb2NrZXRzLlxuICogQHR5cGVkZWYgUlBDSW1wbFxuICogQHR5cGUge2Z1bmN0aW9ufVxuICogQHBhcmFtIHtNZXRob2R8cnBjLlNlcnZpY2VNZXRob2Q8TWVzc2FnZTx7fT4sTWVzc2FnZTx7fT4+fSBtZXRob2QgUmVmbGVjdGVkIG9yIHN0YXRpYyBtZXRob2QgYmVpbmcgY2FsbGVkXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IHJlcXVlc3REYXRhIFJlcXVlc3QgZGF0YVxuICogQHBhcmFtIHtSUENJbXBsQ2FsbGJhY2t9IGNhbGxiYWNrIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICogQGV4YW1wbGVcbiAqIGZ1bmN0aW9uIHJwY0ltcGwobWV0aG9kLCByZXF1ZXN0RGF0YSwgY2FsbGJhY2spIHtcbiAqICAgICBpZiAocHJvdG9idWYudXRpbC5sY0ZpcnN0KG1ldGhvZC5uYW1lKSAhPT0gXCJteU1ldGhvZFwiKSAvLyBjb21wYXRpYmxlIHdpdGggc3RhdGljIGNvZGVcbiAqICAgICAgICAgdGhyb3cgRXJyb3IoXCJubyBzdWNoIG1ldGhvZFwiKTtcbiAqICAgICBhc3luY2hyb25vdXNseU9idGFpbkFSZXNwb25zZShyZXF1ZXN0RGF0YSwgZnVuY3Rpb24oZXJyLCByZXNwb25zZURhdGEpIHtcbiAqICAgICAgICAgY2FsbGJhY2soZXJyLCByZXNwb25zZURhdGEpO1xuICogICAgIH0pO1xuICogfVxuICovXG5cbi8qKlxuICogTm9kZS1zdHlsZSBjYWxsYmFjayBhcyB1c2VkIGJ5IHtAbGluayBSUENJbXBsfS5cbiAqIEB0eXBlZGVmIFJQQ0ltcGxDYWxsYmFja1xuICogQHR5cGUge2Z1bmN0aW9ufVxuICogQHBhcmFtIHtFcnJvcnxudWxsfSBlcnJvciBFcnJvciwgaWYgYW55LCBvdGhlcndpc2UgYG51bGxgXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl8bnVsbH0gW3Jlc3BvbnNlXSBSZXNwb25zZSBkYXRhIG9yIGBudWxsYCB0byBzaWduYWwgZW5kIG9mIHN0cmVhbSwgaWYgdGhlcmUgaGFzbid0IGJlZW4gYW4gZXJyb3JcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKi9cblxucnBjLlNlcnZpY2UgPSByZXF1aXJlKFwiLi9ycGMvc2VydmljZVwiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/rpc.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/rpc/service.js":
/*!****************************************************!*\
  !*** ./node_modules/protobufjs/src/rpc/service.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = Service;\n\nvar util = __webpack_require__(/*! ../util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/rpc/service.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/service.js":
/*!************************************************!*\
  !*** ./node_modules/protobufjs/src/service.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = __webpack_require__(/*! ./namespace */ \"./node_modules/protobufjs/src/namespace.js\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = __webpack_require__(/*! ./method */ \"./node_modules/protobufjs/src/method.js\"),\n    util   = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\"),\n    rpc    = __webpack_require__(/*! ./rpc */ \"./node_modules/protobufjs/src/rpc.js\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/service.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/type.js":
/*!*********************************************!*\
  !*** ./node_modules/protobufjs/src/type.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = __webpack_require__(/*! ./namespace */ \"./node_modules/protobufjs/src/namespace.js\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    OneOf     = __webpack_require__(/*! ./oneof */ \"./node_modules/protobufjs/src/oneof.js\"),\n    Field     = __webpack_require__(/*! ./field */ \"./node_modules/protobufjs/src/field.js\"),\n    MapField  = __webpack_require__(/*! ./mapfield */ \"./node_modules/protobufjs/src/mapfield.js\"),\n    Service   = __webpack_require__(/*! ./service */ \"./node_modules/protobufjs/src/service.js\"),\n    Message   = __webpack_require__(/*! ./message */ \"./node_modules/protobufjs/src/message.js\"),\n    Reader    = __webpack_require__(/*! ./reader */ \"./node_modules/protobufjs/src/reader.js\"),\n    Writer    = __webpack_require__(/*! ./writer */ \"./node_modules/protobufjs/src/writer.js\"),\n    util      = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\"),\n    encoder   = __webpack_require__(/*! ./encoder */ \"./node_modules/protobufjs/src/encoder.js\"),\n    decoder   = __webpack_require__(/*! ./decoder */ \"./node_modules/protobufjs/src/decoder.js\"),\n    verifier  = __webpack_require__(/*! ./verifier */ \"./node_modules/protobufjs/src/verifier.js\"),\n    converter = __webpack_require__(/*! ./converter */ \"./node_modules/protobufjs/src/converter.js\"),\n    wrappers  = __webpack_require__(/*! ./wrappers */ \"./node_modules/protobufjs/src/wrappers.js\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/type.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/types.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/types.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/types.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/util.js":
/*!*********************************************!*\
  !*** ./node_modules/protobufjs/src/util.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\nvar roots = __webpack_require__(/*! ./roots */ \"./node_modules/protobufjs/src/roots.js\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = __webpack_require__(/*! @protobufjs/codegen */ \"./node_modules/@protobufjs/codegen/index.js\");\nutil.fetch   = __webpack_require__(/*! @protobufjs/fetch */ \"./node_modules/@protobufjs/fetch/index.js\");\nutil.path    = __webpack_require__(/*! @protobufjs/path */ \"./node_modules/@protobufjs/path/index.js\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = __webpack_require__(/*! ./type */ \"./node_modules/protobufjs/src/type.js\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\" || part === \"prototype\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (__webpack_require__(/*! ./root */ \"./node_modules/protobufjs/src/root.js\"))());\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/util.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/util/longbits.js":
/*!******************************************************!*\
  !*** ./node_modules/protobufjs/src/util/longbits.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = LongBits;\n\nvar util = __webpack_require__(/*! ../util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvdXRpbC9sb25nYml0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiOztBQUVBLFdBQVcsbUJBQU8sQ0FBQyxzRUFBaUI7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUEsNkJBQTZCO0FBQzdCLDZDQUE2QztBQUM3QywyQkFBMkI7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxlQUFlO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsb0JBQW9CO0FBQy9CLGFBQWEsZUFBZTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsYUFBYSxNQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxlQUFlO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3RvYnVmanMvc3JjL3V0aWwvbG9uZ2JpdHMuanM/YTU2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbm1vZHVsZS5leHBvcnRzID0gTG9uZ0JpdHM7XG5cbnZhciB1dGlsID0gcmVxdWlyZShcIi4uL3V0aWwvbWluaW1hbFwiKTtcblxuLyoqXG4gKiBDb25zdHJ1Y3RzIG5ldyBsb25nIGJpdHMuXG4gKiBAY2xhc3NkZXNjIEhlbHBlciBjbGFzcyBmb3Igd29ya2luZyB3aXRoIHRoZSBsb3cgYW5kIGhpZ2ggYml0cyBvZiBhIDY0IGJpdCB2YWx1ZS5cbiAqIEBtZW1iZXJvZiB1dGlsXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7bnVtYmVyfSBsbyBMb3cgMzIgYml0cywgdW5zaWduZWRcbiAqIEBwYXJhbSB7bnVtYmVyfSBoaSBIaWdoIDMyIGJpdHMsIHVuc2lnbmVkXG4gKi9cbmZ1bmN0aW9uIExvbmdCaXRzKGxvLCBoaSkge1xuXG4gICAgLy8gbm90ZSB0aGF0IHRoZSBjYXN0cyBiZWxvdyBhcmUgdGhlb3JldGljYWxseSB1bm5lY2Vzc2FyeSBhcyBvZiB0b2RheSwgYnV0IG9sZGVyIHN0YXRpY2FsbHlcbiAgICAvLyBnZW5lcmF0ZWQgY29udmVydGVyIGNvZGUgbWlnaHQgc3RpbGwgY2FsbCB0aGUgY3RvciB3aXRoIHNpZ25lZCAzMmJpdHMuIGtlcHQgZm9yIGNvbXBhdC5cblxuICAgIC8qKlxuICAgICAqIExvdyBiaXRzLlxuICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICovXG4gICAgdGhpcy5sbyA9IGxvID4+PiAwO1xuXG4gICAgLyoqXG4gICAgICogSGlnaCBiaXRzLlxuICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICovXG4gICAgdGhpcy5oaSA9IGhpID4+PiAwO1xufVxuXG4vKipcbiAqIFplcm8gYml0cy5cbiAqIEBtZW1iZXJvZiB1dGlsLkxvbmdCaXRzXG4gKiBAdHlwZSB7dXRpbC5Mb25nQml0c31cbiAqL1xudmFyIHplcm8gPSBMb25nQml0cy56ZXJvID0gbmV3IExvbmdCaXRzKDAsIDApO1xuXG56ZXJvLnRvTnVtYmVyID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuemVyby56ekVuY29kZSA9IHplcm8uenpEZWNvZGUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH07XG56ZXJvLmxlbmd0aCA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMTsgfTtcblxuLyoqXG4gKiBaZXJvIGhhc2guXG4gKiBAbWVtYmVyb2YgdXRpbC5Mb25nQml0c1xuICogQHR5cGUge3N0cmluZ31cbiAqL1xudmFyIHplcm9IYXNoID0gTG9uZ0JpdHMuemVyb0hhc2ggPSBcIlxcMFxcMFxcMFxcMFxcMFxcMFxcMFxcMFwiO1xuXG4vKipcbiAqIENvbnN0cnVjdHMgbmV3IGxvbmcgYml0cyBmcm9tIHRoZSBzcGVjaWZpZWQgbnVtYmVyLlxuICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlIFZhbHVlXG4gKiBAcmV0dXJucyB7dXRpbC5Mb25nQml0c30gSW5zdGFuY2VcbiAqL1xuTG9uZ0JpdHMuZnJvbU51bWJlciA9IGZ1bmN0aW9uIGZyb21OdW1iZXIodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IDApXG4gICAgICAgIHJldHVybiB6ZXJvO1xuICAgIHZhciBzaWduID0gdmFsdWUgPCAwO1xuICAgIGlmIChzaWduKVxuICAgICAgICB2YWx1ZSA9IC12YWx1ZTtcbiAgICB2YXIgbG8gPSB2YWx1ZSA+Pj4gMCxcbiAgICAgICAgaGkgPSAodmFsdWUgLSBsbykgLyA0Mjk0OTY3Mjk2ID4+PiAwO1xuICAgIGlmIChzaWduKSB7XG4gICAgICAgIGhpID0gfmhpID4+PiAwO1xuICAgICAgICBsbyA9IH5sbyA+Pj4gMDtcbiAgICAgICAgaWYgKCsrbG8gPiA0Mjk0OTY3Mjk1KSB7XG4gICAgICAgICAgICBsbyA9IDA7XG4gICAgICAgICAgICBpZiAoKytoaSA+IDQyOTQ5NjcyOTUpXG4gICAgICAgICAgICAgICAgaGkgPSAwO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXcgTG9uZ0JpdHMobG8sIGhpKTtcbn07XG5cbi8qKlxuICogQ29uc3RydWN0cyBuZXcgbG9uZyBiaXRzIGZyb20gYSBudW1iZXIsIGxvbmcgb3Igc3RyaW5nLlxuICogQHBhcmFtIHtMb25nfG51bWJlcnxzdHJpbmd9IHZhbHVlIFZhbHVlXG4gKiBAcmV0dXJucyB7dXRpbC5Mb25nQml0c30gSW5zdGFuY2VcbiAqL1xuTG9uZ0JpdHMuZnJvbSA9IGZ1bmN0aW9uIGZyb20odmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcIm51bWJlclwiKVxuICAgICAgICByZXR1cm4gTG9uZ0JpdHMuZnJvbU51bWJlcih2YWx1ZSk7XG4gICAgaWYgKHV0aWwuaXNTdHJpbmcodmFsdWUpKSB7XG4gICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgICAgIGlmICh1dGlsLkxvbmcpXG4gICAgICAgICAgICB2YWx1ZSA9IHV0aWwuTG9uZy5mcm9tU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgcmV0dXJuIExvbmdCaXRzLmZyb21OdW1iZXIocGFyc2VJbnQodmFsdWUsIDEwKSk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZS5sb3cgfHwgdmFsdWUuaGlnaCA/IG5ldyBMb25nQml0cyh2YWx1ZS5sb3cgPj4+IDAsIHZhbHVlLmhpZ2ggPj4+IDApIDogemVybztcbn07XG5cbi8qKlxuICogQ29udmVydHMgdGhpcyBsb25nIGJpdHMgdG8gYSBwb3NzaWJseSB1bnNhZmUgSmF2YVNjcmlwdCBudW1iZXIuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFt1bnNpZ25lZD1mYWxzZV0gV2hldGhlciB1bnNpZ25lZCBvciBub3RcbiAqIEByZXR1cm5zIHtudW1iZXJ9IFBvc3NpYmx5IHVuc2FmZSBudW1iZXJcbiAqL1xuTG9uZ0JpdHMucHJvdG90eXBlLnRvTnVtYmVyID0gZnVuY3Rpb24gdG9OdW1iZXIodW5zaWduZWQpIHtcbiAgICBpZiAoIXVuc2lnbmVkICYmIHRoaXMuaGkgPj4+IDMxKSB7XG4gICAgICAgIHZhciBsbyA9IH50aGlzLmxvICsgMSA+Pj4gMCxcbiAgICAgICAgICAgIGhpID0gfnRoaXMuaGkgICAgID4+PiAwO1xuICAgICAgICBpZiAoIWxvKVxuICAgICAgICAgICAgaGkgPSBoaSArIDEgPj4+IDA7XG4gICAgICAgIHJldHVybiAtKGxvICsgaGkgKiA0Mjk0OTY3Mjk2KTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubG8gKyB0aGlzLmhpICogNDI5NDk2NzI5Njtcbn07XG5cbi8qKlxuICogQ29udmVydHMgdGhpcyBsb25nIGJpdHMgdG8gYSBsb25nLlxuICogQHBhcmFtIHtib29sZWFufSBbdW5zaWduZWQ9ZmFsc2VdIFdoZXRoZXIgdW5zaWduZWQgb3Igbm90XG4gKiBAcmV0dXJucyB7TG9uZ30gTG9uZ1xuICovXG5Mb25nQml0cy5wcm90b3R5cGUudG9Mb25nID0gZnVuY3Rpb24gdG9Mb25nKHVuc2lnbmVkKSB7XG4gICAgcmV0dXJuIHV0aWwuTG9uZ1xuICAgICAgICA/IG5ldyB1dGlsLkxvbmcodGhpcy5sbyB8IDAsIHRoaXMuaGkgfCAwLCBCb29sZWFuKHVuc2lnbmVkKSlcbiAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgICAgOiB7IGxvdzogdGhpcy5sbyB8IDAsIGhpZ2g6IHRoaXMuaGkgfCAwLCB1bnNpZ25lZDogQm9vbGVhbih1bnNpZ25lZCkgfTtcbn07XG5cbnZhciBjaGFyQ29kZUF0ID0gU3RyaW5nLnByb3RvdHlwZS5jaGFyQ29kZUF0O1xuXG4vKipcbiAqIENvbnN0cnVjdHMgbmV3IGxvbmcgYml0cyBmcm9tIHRoZSBzcGVjaWZpZWQgOCBjaGFyYWN0ZXJzIGxvbmcgaGFzaC5cbiAqIEBwYXJhbSB7c3RyaW5nfSBoYXNoIEhhc2hcbiAqIEByZXR1cm5zIHt1dGlsLkxvbmdCaXRzfSBCaXRzXG4gKi9cbkxvbmdCaXRzLmZyb21IYXNoID0gZnVuY3Rpb24gZnJvbUhhc2goaGFzaCkge1xuICAgIGlmIChoYXNoID09PSB6ZXJvSGFzaClcbiAgICAgICAgcmV0dXJuIHplcm87XG4gICAgcmV0dXJuIG5ldyBMb25nQml0cyhcbiAgICAgICAgKCBjaGFyQ29kZUF0LmNhbGwoaGFzaCwgMClcbiAgICAgICAgfCBjaGFyQ29kZUF0LmNhbGwoaGFzaCwgMSkgPDwgOFxuICAgICAgICB8IGNoYXJDb2RlQXQuY2FsbChoYXNoLCAyKSA8PCAxNlxuICAgICAgICB8IGNoYXJDb2RlQXQuY2FsbChoYXNoLCAzKSA8PCAyNCkgPj4+IDBcbiAgICAsXG4gICAgICAgICggY2hhckNvZGVBdC5jYWxsKGhhc2gsIDQpXG4gICAgICAgIHwgY2hhckNvZGVBdC5jYWxsKGhhc2gsIDUpIDw8IDhcbiAgICAgICAgfCBjaGFyQ29kZUF0LmNhbGwoaGFzaCwgNikgPDwgMTZcbiAgICAgICAgfCBjaGFyQ29kZUF0LmNhbGwoaGFzaCwgNykgPDwgMjQpID4+PiAwXG4gICAgKTtcbn07XG5cbi8qKlxuICogQ29udmVydHMgdGhpcyBsb25nIGJpdHMgdG8gYSA4IGNoYXJhY3RlcnMgbG9uZyBoYXNoLlxuICogQHJldHVybnMge3N0cmluZ30gSGFzaFxuICovXG5Mb25nQml0cy5wcm90b3R5cGUudG9IYXNoID0gZnVuY3Rpb24gdG9IYXNoKCkge1xuICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKFxuICAgICAgICB0aGlzLmxvICAgICAgICAmIDI1NSxcbiAgICAgICAgdGhpcy5sbyA+Pj4gOCAgJiAyNTUsXG4gICAgICAgIHRoaXMubG8gPj4+IDE2ICYgMjU1LFxuICAgICAgICB0aGlzLmxvID4+PiAyNCAgICAgICxcbiAgICAgICAgdGhpcy5oaSAgICAgICAgJiAyNTUsXG4gICAgICAgIHRoaXMuaGkgPj4+IDggICYgMjU1LFxuICAgICAgICB0aGlzLmhpID4+PiAxNiAmIDI1NSxcbiAgICAgICAgdGhpcy5oaSA+Pj4gMjRcbiAgICApO1xufTtcblxuLyoqXG4gKiBaaWctemFnIGVuY29kZXMgdGhpcyBsb25nIGJpdHMuXG4gKiBAcmV0dXJucyB7dXRpbC5Mb25nQml0c30gYHRoaXNgXG4gKi9cbkxvbmdCaXRzLnByb3RvdHlwZS56ekVuY29kZSA9IGZ1bmN0aW9uIHp6RW5jb2RlKCkge1xuICAgIHZhciBtYXNrID0gICB0aGlzLmhpID4+IDMxO1xuICAgIHRoaXMuaGkgID0gKCh0aGlzLmhpIDw8IDEgfCB0aGlzLmxvID4+PiAzMSkgXiBtYXNrKSA+Pj4gMDtcbiAgICB0aGlzLmxvICA9ICggdGhpcy5sbyA8PCAxICAgICAgICAgICAgICAgICAgIF4gbWFzaykgPj4+IDA7XG4gICAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFppZy16YWcgZGVjb2RlcyB0aGlzIGxvbmcgYml0cy5cbiAqIEByZXR1cm5zIHt1dGlsLkxvbmdCaXRzfSBgdGhpc2BcbiAqL1xuTG9uZ0JpdHMucHJvdG90eXBlLnp6RGVjb2RlID0gZnVuY3Rpb24genpEZWNvZGUoKSB7XG4gICAgdmFyIG1hc2sgPSAtKHRoaXMubG8gJiAxKTtcbiAgICB0aGlzLmxvICA9ICgodGhpcy5sbyA+Pj4gMSB8IHRoaXMuaGkgPDwgMzEpIF4gbWFzaykgPj4+IDA7XG4gICAgdGhpcy5oaSAgPSAoIHRoaXMuaGkgPj4+IDEgICAgICAgICAgICAgICAgICBeIG1hc2spID4+PiAwO1xuICAgIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBsZW5ndGggb2YgdGhpcyBsb25nYml0cyB3aGVuIGVuY29kZWQgYXMgYSB2YXJpbnQuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBMZW5ndGhcbiAqL1xuTG9uZ0JpdHMucHJvdG90eXBlLmxlbmd0aCA9IGZ1bmN0aW9uIGxlbmd0aCgpIHtcbiAgICB2YXIgcGFydDAgPSAgdGhpcy5sbyxcbiAgICAgICAgcGFydDEgPSAodGhpcy5sbyA+Pj4gMjggfCB0aGlzLmhpIDw8IDQpID4+PiAwLFxuICAgICAgICBwYXJ0MiA9ICB0aGlzLmhpID4+PiAyNDtcbiAgICByZXR1cm4gcGFydDIgPT09IDBcbiAgICAgICAgID8gcGFydDEgPT09IDBcbiAgICAgICAgICAgPyBwYXJ0MCA8IDE2Mzg0XG4gICAgICAgICAgICAgPyBwYXJ0MCA8IDEyOCA/IDEgOiAyXG4gICAgICAgICAgICAgOiBwYXJ0MCA8IDIwOTcxNTIgPyAzIDogNFxuICAgICAgICAgICA6IHBhcnQxIDwgMTYzODRcbiAgICAgICAgICAgICA/IHBhcnQxIDwgMTI4ID8gNSA6IDZcbiAgICAgICAgICAgICA6IHBhcnQxIDwgMjA5NzE1MiA/IDcgOiA4XG4gICAgICAgICA6IHBhcnQyIDwgMTI4ID8gOSA6IDEwO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/util/longbits.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/util/minimal.js":
/*!*****************************************************!*\
  !*** ./node_modules/protobufjs/src/util/minimal.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = __webpack_require__(/*! @protobufjs/aspromise */ \"./node_modules/@protobufjs/aspromise/index.js\");\n\n// converts to / from base64 encoded strings\nutil.base64 = __webpack_require__(/*! @protobufjs/base64 */ \"./node_modules/@protobufjs/base64/index.js\");\n\n// base class of rpc.Service\nutil.EventEmitter = __webpack_require__(/*! @protobufjs/eventemitter */ \"./node_modules/@protobufjs/eventemitter/index.js\");\n\n// float handling accross browsers\nutil.float = __webpack_require__(/*! @protobufjs/float */ \"./node_modules/@protobufjs/float/index.js\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = __webpack_require__(/*! @protobufjs/inquire */ \"./node_modules/@protobufjs/inquire/index.js\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = __webpack_require__(/*! @protobufjs/utf8 */ \"./node_modules/@protobufjs/utf8/index.js\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = __webpack_require__(/*! @protobufjs/pool */ \"./node_modules/@protobufjs/pool/index.js\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = __webpack_require__(/*! ./longbits */ \"./node_modules/protobufjs/src/util/longbits.js\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof __webpack_require__.g !== \"undefined\"\n                   && __webpack_require__.g\n                   && __webpack_require__.g.process\n                   && __webpack_require__.g.process.versions\n                   && __webpack_require__.g.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && __webpack_require__.g\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/util/minimal.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/verifier.js":
/*!*************************************************!*\
  !*** ./node_modules/protobufjs/src/verifier.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = verifier;\n\nvar Enum      = __webpack_require__(/*! ./enum */ \"./node_modules/protobufjs/src/enum.js\"),\n    util      = __webpack_require__(/*! ./util */ \"./node_modules/protobufjs/src/util.js\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/verifier.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/wrappers.js":
/*!*************************************************!*\
  !*** ./node_modules/protobufjs/src/wrappers.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = __webpack_require__(/*! ./message */ \"./node_modules/protobufjs/src/message.js\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].slice(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.slice(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvd3JhcHBlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxtQkFBTyxDQUFDLDJEQUFXOztBQUVqQztBQUNBLHFDQUFxQyxlQUFlO0FBQ3BEO0FBQ0EsVUFBVTtBQUNWLFdBQVcsbUJBQW1CO0FBQzlCLGFBQWEsVUFBVSxHQUFHO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsZUFBZTtBQUNsRDtBQUNBLFVBQVU7QUFDVixXQUFXLFVBQVUsR0FBRztBQUN4QixXQUFXLG9CQUFvQjtBQUMvQixhQUFhLG1CQUFtQjtBQUNoQztBQUNBOztBQUVBO0FBQ0EsZ0NBQWdDLGVBQWU7QUFDL0M7QUFDQSxjQUFjLDRCQUE0QjtBQUMxQyxjQUFjLDBCQUEwQjtBQUN4Qzs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTs7QUFFQTtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3RvYnVmanMvc3JjL3dyYXBwZXJzLmpzPzNlZjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogV3JhcHBlcnMgZm9yIGNvbW1vbiB0eXBlcy5cbiAqIEB0eXBlIHtPYmplY3QuPHN0cmluZyxJV3JhcHBlcj59XG4gKiBAY29uc3RcbiAqL1xudmFyIHdyYXBwZXJzID0gZXhwb3J0cztcblxudmFyIE1lc3NhZ2UgPSByZXF1aXJlKFwiLi9tZXNzYWdlXCIpO1xuXG4vKipcbiAqIEZyb20gb2JqZWN0IGNvbnZlcnRlciBwYXJ0IG9mIGFuIHtAbGluayBJV3JhcHBlcn0uXG4gKiBAdHlwZWRlZiBXcmFwcGVyRnJvbU9iamVjdENvbnZlcnRlclxuICogQHR5cGUge2Z1bmN0aW9ufVxuICogQHBhcmFtIHtPYmplY3QuPHN0cmluZywqPn0gb2JqZWN0IFBsYWluIG9iamVjdFxuICogQHJldHVybnMge01lc3NhZ2U8e30+fSBNZXNzYWdlIGluc3RhbmNlXG4gKiBAdGhpcyBUeXBlXG4gKi9cblxuLyoqXG4gKiBUbyBvYmplY3QgY29udmVydGVyIHBhcnQgb2YgYW4ge0BsaW5rIElXcmFwcGVyfS5cbiAqIEB0eXBlZGVmIFdyYXBwZXJUb09iamVjdENvbnZlcnRlclxuICogQHR5cGUge2Z1bmN0aW9ufVxuICogQHBhcmFtIHtNZXNzYWdlPHt9Pn0gbWVzc2FnZSBNZXNzYWdlIGluc3RhbmNlXG4gKiBAcGFyYW0ge0lDb252ZXJzaW9uT3B0aW9uc30gW29wdGlvbnNdIENvbnZlcnNpb24gb3B0aW9uc1xuICogQHJldHVybnMge09iamVjdC48c3RyaW5nLCo+fSBQbGFpbiBvYmplY3RcbiAqIEB0aGlzIFR5cGVcbiAqL1xuXG4vKipcbiAqIENvbW1vbiB0eXBlIHdyYXBwZXIgcGFydCBvZiB7QGxpbmsgd3JhcHBlcnN9LlxuICogQGludGVyZmFjZSBJV3JhcHBlclxuICogQHByb3BlcnR5IHtXcmFwcGVyRnJvbU9iamVjdENvbnZlcnRlcn0gW2Zyb21PYmplY3RdIEZyb20gb2JqZWN0IGNvbnZlcnRlclxuICogQHByb3BlcnR5IHtXcmFwcGVyVG9PYmplY3RDb252ZXJ0ZXJ9IFt0b09iamVjdF0gVG8gb2JqZWN0IGNvbnZlcnRlclxuICovXG5cbi8vIEN1c3RvbSB3cmFwcGVyIGZvciBBbnlcbndyYXBwZXJzW1wiLmdvb2dsZS5wcm90b2J1Zi5BbnlcIl0gPSB7XG5cbiAgICBmcm9tT2JqZWN0OiBmdW5jdGlvbihvYmplY3QpIHtcblxuICAgICAgICAvLyB1bndyYXAgdmFsdWUgdHlwZSBpZiBtYXBwZWRcbiAgICAgICAgaWYgKG9iamVjdCAmJiBvYmplY3RbXCJAdHlwZVwiXSkge1xuICAgICAgICAgICAgIC8vIE9ubHkgdXNlIGZ1bGx5IHF1YWxpZmllZCB0eXBlIG5hbWUgYWZ0ZXIgdGhlIGxhc3QgJy8nXG4gICAgICAgICAgICB2YXIgbmFtZSA9IG9iamVjdFtcIkB0eXBlXCJdLnN1YnN0cmluZyhvYmplY3RbXCJAdHlwZVwiXS5sYXN0SW5kZXhPZihcIi9cIikgKyAxKTtcbiAgICAgICAgICAgIHZhciB0eXBlID0gdGhpcy5sb29rdXAobmFtZSk7XG4gICAgICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgICAgICAgICAgaWYgKHR5cGUpIHtcbiAgICAgICAgICAgICAgICAvLyB0eXBlX3VybCBkb2VzIG5vdCBhY2NlcHQgbGVhZGluZyBcIi5cIlxuICAgICAgICAgICAgICAgIHZhciB0eXBlX3VybCA9IG9iamVjdFtcIkB0eXBlXCJdLmNoYXJBdCgwKSA9PT0gXCIuXCIgP1xuICAgICAgICAgICAgICAgICAgICBvYmplY3RbXCJAdHlwZVwiXS5zbGljZSgxKSA6IG9iamVjdFtcIkB0eXBlXCJdO1xuICAgICAgICAgICAgICAgIC8vIHR5cGVfdXJsIHByZWZpeCBpcyBvcHRpb25hbCwgYnV0IHBhdGggc2VwZXJhdG9yIGlzIHJlcXVpcmVkXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVfdXJsLmluZGV4T2YoXCIvXCIpID09PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICB0eXBlX3VybCA9IFwiL1wiICsgdHlwZV91cmw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIHR5cGVfdXJsOiB0eXBlX3VybCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHR5cGUuZW5jb2RlKHR5cGUuZnJvbU9iamVjdChvYmplY3QpKS5maW5pc2goKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuZnJvbU9iamVjdChvYmplY3QpO1xuICAgIH0sXG5cbiAgICB0b09iamVjdDogZnVuY3Rpb24obWVzc2FnZSwgb3B0aW9ucykge1xuXG4gICAgICAgIC8vIERlZmF1bHQgcHJlZml4XG4gICAgICAgIHZhciBnb29nbGVBcGkgPSBcInR5cGUuZ29vZ2xlYXBpcy5jb20vXCI7XG4gICAgICAgIHZhciBwcmVmaXggPSBcIlwiO1xuICAgICAgICB2YXIgbmFtZSA9IFwiXCI7XG5cbiAgICAgICAgLy8gZGVjb2RlIHZhbHVlIGlmIHJlcXVlc3RlZCBhbmQgdW5tYXBwZWRcbiAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5qc29uICYmIG1lc3NhZ2UudHlwZV91cmwgJiYgbWVzc2FnZS52YWx1ZSkge1xuICAgICAgICAgICAgLy8gT25seSB1c2UgZnVsbHkgcXVhbGlmaWVkIHR5cGUgbmFtZSBhZnRlciB0aGUgbGFzdCAnLydcbiAgICAgICAgICAgIG5hbWUgPSBtZXNzYWdlLnR5cGVfdXJsLnN1YnN0cmluZyhtZXNzYWdlLnR5cGVfdXJsLmxhc3RJbmRleE9mKFwiL1wiKSArIDEpO1xuICAgICAgICAgICAgLy8gU2VwYXJhdGUgdGhlIHByZWZpeCB1c2VkXG4gICAgICAgICAgICBwcmVmaXggPSBtZXNzYWdlLnR5cGVfdXJsLnN1YnN0cmluZygwLCBtZXNzYWdlLnR5cGVfdXJsLmxhc3RJbmRleE9mKFwiL1wiKSArIDEpO1xuICAgICAgICAgICAgdmFyIHR5cGUgPSB0aGlzLmxvb2t1cChuYW1lKTtcbiAgICAgICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgICAgICAgICBpZiAodHlwZSlcbiAgICAgICAgICAgICAgICBtZXNzYWdlID0gdHlwZS5kZWNvZGUobWVzc2FnZS52YWx1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB3cmFwIHZhbHVlIGlmIHVubWFwcGVkXG4gICAgICAgIGlmICghKG1lc3NhZ2UgaW5zdGFuY2VvZiB0aGlzLmN0b3IpICYmIG1lc3NhZ2UgaW5zdGFuY2VvZiBNZXNzYWdlKSB7XG4gICAgICAgICAgICB2YXIgb2JqZWN0ID0gbWVzc2FnZS4kdHlwZS50b09iamVjdChtZXNzYWdlLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHZhciBtZXNzYWdlTmFtZSA9IG1lc3NhZ2UuJHR5cGUuZnVsbE5hbWVbMF0gPT09IFwiLlwiID9cbiAgICAgICAgICAgICAgICBtZXNzYWdlLiR0eXBlLmZ1bGxOYW1lLnNsaWNlKDEpIDogbWVzc2FnZS4kdHlwZS5mdWxsTmFtZTtcbiAgICAgICAgICAgIC8vIERlZmF1bHQgdG8gdHlwZS5nb29nbGVhcGlzLmNvbSBwcmVmaXggaWYgbm8gcHJlZml4IGlzIHVzZWRcbiAgICAgICAgICAgIGlmIChwcmVmaXggPT09IFwiXCIpIHtcbiAgICAgICAgICAgICAgICBwcmVmaXggPSBnb29nbGVBcGk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBuYW1lID0gcHJlZml4ICsgbWVzc2FnZU5hbWU7XG4gICAgICAgICAgICBvYmplY3RbXCJAdHlwZVwiXSA9IG5hbWU7XG4gICAgICAgICAgICByZXR1cm4gb2JqZWN0O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXMudG9PYmplY3QobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/wrappers.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/writer.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/writer.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = Writer;\n\nvar util      = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/writer.js\n"));

/***/ }),

/***/ "./node_modules/protobufjs/src/writer_buffer.js":
/*!******************************************************!*\
  !*** ./node_modules/protobufjs/src/writer_buffer.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = __webpack_require__(/*! ./writer */ \"./node_modules/protobufjs/src/writer.js\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvdG9idWZqcy9zcmMvd3JpdGVyX2J1ZmZlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiOztBQUVBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLHlEQUFVO0FBQy9COztBQUVBLFdBQVcsbUJBQU8sQ0FBQyxxRUFBZ0I7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixpQkFBaUIsUUFBUTtBQUN6QjtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGVBQWU7QUFDOUM7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3RvYnVmanMvc3JjL3dyaXRlcl9idWZmZXIuanM/MjBkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbm1vZHVsZS5leHBvcnRzID0gQnVmZmVyV3JpdGVyO1xuXG4vLyBleHRlbmRzIFdyaXRlclxudmFyIFdyaXRlciA9IHJlcXVpcmUoXCIuL3dyaXRlclwiKTtcbihCdWZmZXJXcml0ZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShXcml0ZXIucHJvdG90eXBlKSkuY29uc3RydWN0b3IgPSBCdWZmZXJXcml0ZXI7XG5cbnZhciB1dGlsID0gcmVxdWlyZShcIi4vdXRpbC9taW5pbWFsXCIpO1xuXG4vKipcbiAqIENvbnN0cnVjdHMgYSBuZXcgYnVmZmVyIHdyaXRlciBpbnN0YW5jZS5cbiAqIEBjbGFzc2Rlc2MgV2lyZSBmb3JtYXQgd3JpdGVyIHVzaW5nIG5vZGUgYnVmZmVycy5cbiAqIEBleHRlbmRzIFdyaXRlclxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIEJ1ZmZlcldyaXRlcigpIHtcbiAgICBXcml0ZXIuY2FsbCh0aGlzKTtcbn1cblxuQnVmZmVyV3JpdGVyLl9jb25maWd1cmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgLyoqXG4gICAgICogQWxsb2NhdGVzIGEgYnVmZmVyIG9mIHRoZSBzcGVjaWZpZWQgc2l6ZS5cbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc2l6ZSBCdWZmZXIgc2l6ZVxuICAgICAqIEByZXR1cm5zIHtCdWZmZXJ9IEJ1ZmZlclxuICAgICAqL1xuICAgIEJ1ZmZlcldyaXRlci5hbGxvYyA9IHV0aWwuX0J1ZmZlcl9hbGxvY1Vuc2FmZTtcblxuICAgIEJ1ZmZlcldyaXRlci53cml0ZUJ5dGVzQnVmZmVyID0gdXRpbC5CdWZmZXIgJiYgdXRpbC5CdWZmZXIucHJvdG90eXBlIGluc3RhbmNlb2YgVWludDhBcnJheSAmJiB1dGlsLkJ1ZmZlci5wcm90b3R5cGUuc2V0Lm5hbWUgPT09IFwic2V0XCJcbiAgICAgICAgPyBmdW5jdGlvbiB3cml0ZUJ5dGVzQnVmZmVyX3NldCh2YWwsIGJ1ZiwgcG9zKSB7XG4gICAgICAgICAgYnVmLnNldCh2YWwsIHBvcyk7IC8vIGZhc3RlciB0aGFuIGNvcHkgKHJlcXVpcmVzIG5vZGUgPj0gNCB3aGVyZSBCdWZmZXJzIGV4dGVuZCBVaW50OEFycmF5IGFuZCBzZXQgaXMgcHJvcGVybHkgaW5oZXJpdGVkKVxuICAgICAgICAgIC8vIGFsc28gd29ya3MgZm9yIHBsYWluIGFycmF5IHZhbHVlc1xuICAgICAgICB9XG4gICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgICAgIDogZnVuY3Rpb24gd3JpdGVCeXRlc0J1ZmZlcl9jb3B5KHZhbCwgYnVmLCBwb3MpIHtcbiAgICAgICAgICBpZiAodmFsLmNvcHkpIC8vIEJ1ZmZlciB2YWx1ZXNcbiAgICAgICAgICAgIHZhbC5jb3B5KGJ1ZiwgcG9zLCAwLCB2YWwubGVuZ3RoKTtcbiAgICAgICAgICBlbHNlIGZvciAodmFyIGkgPSAwOyBpIDwgdmFsLmxlbmd0aDspIC8vIHBsYWluIGFycmF5IHZhbHVlc1xuICAgICAgICAgICAgYnVmW3BvcysrXSA9IHZhbFtpKytdO1xuICAgICAgICB9O1xufTtcblxuXG4vKipcbiAqIEBvdmVycmlkZVxuICovXG5CdWZmZXJXcml0ZXIucHJvdG90eXBlLmJ5dGVzID0gZnVuY3Rpb24gd3JpdGVfYnl0ZXNfYnVmZmVyKHZhbHVlKSB7XG4gICAgaWYgKHV0aWwuaXNTdHJpbmcodmFsdWUpKVxuICAgICAgICB2YWx1ZSA9IHV0aWwuX0J1ZmZlcl9mcm9tKHZhbHVlLCBcImJhc2U2NFwiKTtcbiAgICB2YXIgbGVuID0gdmFsdWUubGVuZ3RoID4+PiAwO1xuICAgIHRoaXMudWludDMyKGxlbik7XG4gICAgaWYgKGxlbilcbiAgICAgICAgdGhpcy5fcHVzaChCdWZmZXJXcml0ZXIud3JpdGVCeXRlc0J1ZmZlciwgbGVuLCB2YWx1ZSk7XG4gICAgcmV0dXJuIHRoaXM7XG59O1xuXG5mdW5jdGlvbiB3cml0ZVN0cmluZ0J1ZmZlcih2YWwsIGJ1ZiwgcG9zKSB7XG4gICAgaWYgKHZhbC5sZW5ndGggPCA0MCkgLy8gcGxhaW4ganMgaXMgZmFzdGVyIGZvciBzaG9ydCBzdHJpbmdzIChwcm9iYWJseSBkdWUgdG8gcmVkdW5kYW50IGFzc2VydGlvbnMpXG4gICAgICAgIHV0aWwudXRmOC53cml0ZSh2YWwsIGJ1ZiwgcG9zKTtcbiAgICBlbHNlIGlmIChidWYudXRmOFdyaXRlKVxuICAgICAgICBidWYudXRmOFdyaXRlKHZhbCwgcG9zKTtcbiAgICBlbHNlXG4gICAgICAgIGJ1Zi53cml0ZSh2YWwsIHBvcyk7XG59XG5cbi8qKlxuICogQG92ZXJyaWRlXG4gKi9cbkJ1ZmZlcldyaXRlci5wcm90b3R5cGUuc3RyaW5nID0gZnVuY3Rpb24gd3JpdGVfc3RyaW5nX2J1ZmZlcih2YWx1ZSkge1xuICAgIHZhciBsZW4gPSB1dGlsLkJ1ZmZlci5ieXRlTGVuZ3RoKHZhbHVlKTtcbiAgICB0aGlzLnVpbnQzMihsZW4pO1xuICAgIGlmIChsZW4pXG4gICAgICAgIHRoaXMuX3B1c2god3JpdGVTdHJpbmdCdWZmZXIsIGxlbiwgdmFsdWUpO1xuICAgIHJldHVybiB0aGlzO1xufTtcblxuXG4vKipcbiAqIEZpbmlzaGVzIHRoZSB3cml0ZSBvcGVyYXRpb24uXG4gKiBAbmFtZSBCdWZmZXJXcml0ZXIjZmluaXNoXG4gKiBAZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtCdWZmZXJ9IEZpbmlzaGVkIGJ1ZmZlclxuICovXG5cbkJ1ZmZlcldyaXRlci5fY29uZmlndXJlKCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/protobufjs/src/writer_buffer.js\n"));

/***/ }),

/***/ "./node_modules/ts-mixer/dist/esm/index.js":
/*!*************************************************!*\
  !*** ./node_modules/ts-mixer/dist/esm/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mixin: function() { return /* binding */ Mixin; },\n/* harmony export */   decorate: function() { return /* binding */ decorate; },\n/* harmony export */   hasMixin: function() { return /* binding */ hasMixin; },\n/* harmony export */   mix: function() { return /* binding */ mix; },\n/* harmony export */   settings: function() { return /* binding */ settings; }\n/* harmony export */ });\n/**\n * Utility function that works like `Object.apply`, but copies getters and setters properly as well.  Additionally gives\n * the option to exclude properties by name.\n */\nconst copyProps = (dest, src, exclude = []) => {\n    const props = Object.getOwnPropertyDescriptors(src);\n    for (let prop of exclude)\n        delete props[prop];\n    Object.defineProperties(dest, props);\n};\n/**\n * Returns the full chain of prototypes up until Object.prototype given a starting object.  The order of prototypes will\n * be closest to farthest in the chain.\n */\nconst protoChain = (obj, currentChain = [obj]) => {\n    const proto = Object.getPrototypeOf(obj);\n    if (proto === null)\n        return currentChain;\n    return protoChain(proto, [...currentChain, proto]);\n};\n/**\n * Identifies the nearest ancestor common to all the given objects in their prototype chains.  For most unrelated\n * objects, this function should return Object.prototype.\n */\nconst nearestCommonProto = (...objs) => {\n    if (objs.length === 0)\n        return undefined;\n    let commonProto = undefined;\n    const protoChains = objs.map(obj => protoChain(obj));\n    while (protoChains.every(protoChain => protoChain.length > 0)) {\n        const protos = protoChains.map(protoChain => protoChain.pop());\n        const potentialCommonProto = protos[0];\n        if (protos.every(proto => proto === potentialCommonProto))\n            commonProto = potentialCommonProto;\n        else\n            break;\n    }\n    return commonProto;\n};\n/**\n * Creates a new prototype object that is a mixture of the given prototypes.  The mixing is achieved by first\n * identifying the nearest common ancestor and using it as the prototype for a new object.  Then all properties/methods\n * downstream of this prototype (ONLY downstream) are copied into the new object.\n *\n * The resulting prototype is more performant than softMixProtos(...), as well as ES5 compatible.  However, it's not as\n * flexible as updates to the source prototypes aren't captured by the mixed result.  See softMixProtos for why you may\n * want to use that instead.\n */\nconst hardMixProtos = (ingredients, constructor, exclude = []) => {\n    var _a;\n    const base = (_a = nearestCommonProto(...ingredients)) !== null && _a !== void 0 ? _a : Object.prototype;\n    const mixedProto = Object.create(base);\n    // Keeps track of prototypes we've already visited to avoid copying the same properties multiple times.  We init the\n    // list with the proto chain below the nearest common ancestor because we don't want any of those methods mixed in\n    // when they will already be accessible via prototype access.\n    const visitedProtos = protoChain(base);\n    for (let prototype of ingredients) {\n        let protos = protoChain(prototype);\n        // Apply the prototype chain in reverse order so that old methods don't override newer ones.\n        for (let i = protos.length - 1; i >= 0; i--) {\n            let newProto = protos[i];\n            if (visitedProtos.indexOf(newProto) === -1) {\n                copyProps(mixedProto, newProto, ['constructor', ...exclude]);\n                visitedProtos.push(newProto);\n            }\n        }\n    }\n    mixedProto.constructor = constructor;\n    return mixedProto;\n};\nconst unique = (arr) => arr.filter((e, i) => arr.indexOf(e) == i);\n\n/**\n * Finds the ingredient with the given prop, searching in reverse order and breadth-first if searching ingredient\n * prototypes is required.\n */\nconst getIngredientWithProp = (prop, ingredients) => {\n    const protoChains = ingredients.map(ingredient => protoChain(ingredient));\n    // since we search breadth-first, we need to keep track of our depth in the prototype chains\n    let protoDepth = 0;\n    // not all prototype chains are the same depth, so this remains true as long as at least one of the ingredients'\n    // prototype chains has an object at this depth\n    let protosAreLeftToSearch = true;\n    while (protosAreLeftToSearch) {\n        // with the start of each horizontal slice, we assume this is the one that's deeper than any of the proto chains\n        protosAreLeftToSearch = false;\n        // scan through the ingredients right to left\n        for (let i = ingredients.length - 1; i >= 0; i--) {\n            const searchTarget = protoChains[i][protoDepth];\n            if (searchTarget !== undefined && searchTarget !== null) {\n                // if we find something, this is proof that this horizontal slice potentially more objects to search\n                protosAreLeftToSearch = true;\n                // eureka, we found it\n                if (Object.getOwnPropertyDescriptor(searchTarget, prop) != undefined) {\n                    return protoChains[i][0];\n                }\n            }\n        }\n        protoDepth++;\n    }\n    return undefined;\n};\n/**\n * \"Mixes\" ingredients by wrapping them in a Proxy.  The optional prototype argument allows the mixed object to sit\n * downstream of an existing prototype chain.  Note that \"properties\" cannot be added, deleted, or modified.\n */\nconst proxyMix = (ingredients, prototype = Object.prototype) => new Proxy({}, {\n    getPrototypeOf() {\n        return prototype;\n    },\n    setPrototypeOf() {\n        throw Error('Cannot set prototype of Proxies created by ts-mixer');\n    },\n    getOwnPropertyDescriptor(_, prop) {\n        return Object.getOwnPropertyDescriptor(getIngredientWithProp(prop, ingredients) || {}, prop);\n    },\n    defineProperty() {\n        throw new Error('Cannot define new properties on Proxies created by ts-mixer');\n    },\n    has(_, prop) {\n        return getIngredientWithProp(prop, ingredients) !== undefined || prototype[prop] !== undefined;\n    },\n    get(_, prop) {\n        return (getIngredientWithProp(prop, ingredients) || prototype)[prop];\n    },\n    set(_, prop, val) {\n        const ingredientWithProp = getIngredientWithProp(prop, ingredients);\n        if (ingredientWithProp === undefined)\n            throw new Error('Cannot set new properties on Proxies created by ts-mixer');\n        ingredientWithProp[prop] = val;\n        return true;\n    },\n    deleteProperty() {\n        throw new Error('Cannot delete properties on Proxies created by ts-mixer');\n    },\n    ownKeys() {\n        return ingredients\n            .map(Object.getOwnPropertyNames)\n            .reduce((prev, curr) => curr.concat(prev.filter(key => curr.indexOf(key) < 0)));\n    },\n});\n/**\n * Creates a new proxy-prototype object that is a \"soft\" mixture of the given prototypes.  The mixing is achieved by\n * proxying all property access to the ingredients.  This is not ES5 compatible and less performant.  However, any\n * changes made to the source prototypes will be reflected in the proxy-prototype, which may be desirable.\n */\nconst softMixProtos = (ingredients, constructor) => proxyMix([...ingredients, { constructor }]);\n\nconst settings = {\n    initFunction: null,\n    staticsStrategy: 'copy',\n    prototypeStrategy: 'copy',\n    decoratorInheritance: 'deep',\n};\n\n// Keeps track of constituent classes for every mixin class created by ts-mixer.\nconst mixins = new WeakMap();\nconst getMixinsForClass = (clazz) => mixins.get(clazz);\nconst registerMixins = (mixedClass, constituents) => mixins.set(mixedClass, constituents);\nconst hasMixin = (instance, mixin) => {\n    if (instance instanceof mixin)\n        return true;\n    const constructor = instance.constructor;\n    const visited = new Set();\n    let frontier = new Set();\n    frontier.add(constructor);\n    while (frontier.size > 0) {\n        // check if the frontier has the mixin we're looking for.  if not, we can say we visited every item in the frontier\n        if (frontier.has(mixin))\n            return true;\n        frontier.forEach((item) => visited.add(item));\n        // build a new frontier based on the associated mixin classes and prototype chains of each frontier item\n        const newFrontier = new Set();\n        frontier.forEach((item) => {\n            var _a;\n            const itemConstituents = (_a = mixins.get(item)) !== null && _a !== void 0 ? _a : protoChain(item.prototype)\n                .map((proto) => proto.constructor)\n                .filter((item) => item !== null);\n            if (itemConstituents)\n                itemConstituents.forEach((constituent) => {\n                    if (!visited.has(constituent) && !frontier.has(constituent))\n                        newFrontier.add(constituent);\n                });\n        });\n        // we have a new frontier, now search again\n        frontier = newFrontier;\n    }\n    // if we get here, we couldn't find the mixin anywhere in the prototype chain or associated mixin classes\n    return false;\n};\n\nconst mergeObjectsOfDecorators = (o1, o2) => {\n    var _a, _b;\n    const allKeys = unique([...Object.getOwnPropertyNames(o1), ...Object.getOwnPropertyNames(o2)]);\n    const mergedObject = {};\n    for (let key of allKeys)\n        mergedObject[key] = unique([...((_a = o1 === null || o1 === void 0 ? void 0 : o1[key]) !== null && _a !== void 0 ? _a : []), ...((_b = o2 === null || o2 === void 0 ? void 0 : o2[key]) !== null && _b !== void 0 ? _b : [])]);\n    return mergedObject;\n};\nconst mergePropertyAndMethodDecorators = (d1, d2) => {\n    var _a, _b, _c, _d;\n    return ({\n        property: mergeObjectsOfDecorators((_a = d1 === null || d1 === void 0 ? void 0 : d1.property) !== null && _a !== void 0 ? _a : {}, (_b = d2 === null || d2 === void 0 ? void 0 : d2.property) !== null && _b !== void 0 ? _b : {}),\n        method: mergeObjectsOfDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.method) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.method) !== null && _d !== void 0 ? _d : {}),\n    });\n};\nconst mergeDecorators = (d1, d2) => {\n    var _a, _b, _c, _d, _e, _f;\n    return ({\n        class: unique([...(_a = d1 === null || d1 === void 0 ? void 0 : d1.class) !== null && _a !== void 0 ? _a : [], ...(_b = d2 === null || d2 === void 0 ? void 0 : d2.class) !== null && _b !== void 0 ? _b : []]),\n        static: mergePropertyAndMethodDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.static) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.static) !== null && _d !== void 0 ? _d : {}),\n        instance: mergePropertyAndMethodDecorators((_e = d1 === null || d1 === void 0 ? void 0 : d1.instance) !== null && _e !== void 0 ? _e : {}, (_f = d2 === null || d2 === void 0 ? void 0 : d2.instance) !== null && _f !== void 0 ? _f : {}),\n    });\n};\nconst decorators = new Map();\nconst findAllConstituentClasses = (...classes) => {\n    var _a;\n    const allClasses = new Set();\n    const frontier = new Set([...classes]);\n    while (frontier.size > 0) {\n        for (let clazz of frontier) {\n            const protoChainClasses = protoChain(clazz.prototype).map(proto => proto.constructor);\n            const mixinClasses = (_a = getMixinsForClass(clazz)) !== null && _a !== void 0 ? _a : [];\n            const potentiallyNewClasses = [...protoChainClasses, ...mixinClasses];\n            const newClasses = potentiallyNewClasses.filter(c => !allClasses.has(c));\n            for (let newClass of newClasses)\n                frontier.add(newClass);\n            allClasses.add(clazz);\n            frontier.delete(clazz);\n        }\n    }\n    return [...allClasses];\n};\nconst deepDecoratorSearch = (...classes) => {\n    const decoratorsForClassChain = findAllConstituentClasses(...classes)\n        .map(clazz => decorators.get(clazz))\n        .filter(decorators => !!decorators);\n    if (decoratorsForClassChain.length == 0)\n        return {};\n    if (decoratorsForClassChain.length == 1)\n        return decoratorsForClassChain[0];\n    return decoratorsForClassChain.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst directDecoratorSearch = (...classes) => {\n    const classDecorators = classes.map(clazz => getDecoratorsForClass(clazz));\n    if (classDecorators.length === 0)\n        return {};\n    if (classDecorators.length === 1)\n        return classDecorators[0];\n    return classDecorators.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst getDecoratorsForClass = (clazz) => {\n    let decoratorsForClass = decorators.get(clazz);\n    if (!decoratorsForClass) {\n        decoratorsForClass = {};\n        decorators.set(clazz, decoratorsForClass);\n    }\n    return decoratorsForClass;\n};\nconst decorateClass = (decorator) => ((clazz) => {\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    let classDecorators = decoratorsForClass.class;\n    if (!classDecorators) {\n        classDecorators = [];\n        decoratorsForClass.class = classDecorators;\n    }\n    classDecorators.push(decorator);\n    return decorator(clazz);\n});\nconst decorateMember = (decorator) => ((object, key, ...otherArgs) => {\n    var _a, _b, _c;\n    const decoratorTargetType = typeof object === 'function' ? 'static' : 'instance';\n    const decoratorType = typeof object[key] === 'function' ? 'method' : 'property';\n    const clazz = decoratorTargetType === 'static' ? object : object.constructor;\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    const decoratorsForTargetType = (_a = decoratorsForClass === null || decoratorsForClass === void 0 ? void 0 : decoratorsForClass[decoratorTargetType]) !== null && _a !== void 0 ? _a : {};\n    decoratorsForClass[decoratorTargetType] = decoratorsForTargetType;\n    let decoratorsForType = (_b = decoratorsForTargetType === null || decoratorsForTargetType === void 0 ? void 0 : decoratorsForTargetType[decoratorType]) !== null && _b !== void 0 ? _b : {};\n    decoratorsForTargetType[decoratorType] = decoratorsForType;\n    let decoratorsForKey = (_c = decoratorsForType === null || decoratorsForType === void 0 ? void 0 : decoratorsForType[key]) !== null && _c !== void 0 ? _c : [];\n    decoratorsForType[key] = decoratorsForKey;\n    // @ts-ignore: array is type `A[] | B[]` and item is type `A | B`, so technically a type error, but it's fine\n    decoratorsForKey.push(decorator);\n    // @ts-ignore\n    return decorator(object, key, ...otherArgs);\n});\nconst decorate = (decorator) => ((...args) => {\n    if (args.length === 1)\n        return decorateClass(decorator)(args[0]);\n    return decorateMember(decorator)(...args);\n});\n\nfunction Mixin(...constructors) {\n    var _a, _b, _c;\n    const prototypes = constructors.map(constructor => constructor.prototype);\n    // Here we gather up the init functions of the ingredient prototypes, combine them into one init function, and\n    // attach it to the mixed class prototype.  The reason we do this is because we want the init functions to mix\n    // similarly to constructors -- not methods, which simply override each other.\n    const initFunctionName = settings.initFunction;\n    if (initFunctionName !== null) {\n        const initFunctions = prototypes\n            .map(proto => proto[initFunctionName])\n            .filter(func => typeof func === 'function');\n        const combinedInitFunction = function (...args) {\n            for (let initFunction of initFunctions)\n                initFunction.apply(this, args);\n        };\n        const extraProto = { [initFunctionName]: combinedInitFunction };\n        prototypes.push(extraProto);\n    }\n    function MixedClass(...args) {\n        for (const constructor of constructors)\n            // @ts-ignore: potentially abstract class\n            copyProps(this, new constructor(...args));\n        if (initFunctionName !== null && typeof this[initFunctionName] === 'function')\n            this[initFunctionName].apply(this, args);\n    }\n    MixedClass.prototype = settings.prototypeStrategy === 'copy'\n        ? hardMixProtos(prototypes, MixedClass)\n        : softMixProtos(prototypes, MixedClass);\n    Object.setPrototypeOf(MixedClass, settings.staticsStrategy === 'copy'\n        ? hardMixProtos(constructors, null, ['prototype'])\n        : proxyMix(constructors, Function.prototype));\n    let DecoratedMixedClass = MixedClass;\n    if (settings.decoratorInheritance !== 'none') {\n        const classDecorators = settings.decoratorInheritance === 'deep'\n            ? deepDecoratorSearch(...constructors)\n            : directDecoratorSearch(...constructors);\n        for (let decorator of (_a = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.class) !== null && _a !== void 0 ? _a : []) {\n            const result = decorator(DecoratedMixedClass);\n            if (result) {\n                DecoratedMixedClass = result;\n            }\n        }\n        applyPropAndMethodDecorators((_b = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.static) !== null && _b !== void 0 ? _b : {}, DecoratedMixedClass);\n        applyPropAndMethodDecorators((_c = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.instance) !== null && _c !== void 0 ? _c : {}, DecoratedMixedClass.prototype);\n    }\n    registerMixins(DecoratedMixedClass, constructors);\n    return DecoratedMixedClass;\n}\nconst applyPropAndMethodDecorators = (propAndMethodDecorators, target) => {\n    const propDecorators = propAndMethodDecorators.property;\n    const methodDecorators = propAndMethodDecorators.method;\n    if (propDecorators)\n        for (let key in propDecorators)\n            for (let decorator of propDecorators[key])\n                decorator(target, key);\n    if (methodDecorators)\n        for (let key in methodDecorators)\n            for (let decorator of methodDecorators[key])\n                decorator(target, key, Object.getOwnPropertyDescriptor(target, key));\n};\n/**\n * A decorator version of the `Mixin` function.  You'll want to use this instead of `Mixin` for mixing generic classes.\n */\nconst mix = (...ingredients) => decoratedClass => {\n    // @ts-ignore\n    const mixedClass = Mixin(...ingredients.concat([decoratedClass]));\n    Object.defineProperty(mixedClass, 'name', {\n        value: decoratedClass.name,\n        writable: false,\n    });\n    return mixedClass;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ts-mixer/dist/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/ua-parser-js/src/ua-parser.js":
/*!****************************************************!*\
  !*** ./node_modules/ua-parser-js/src/ua-parser.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_RESULT__;/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.37\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.37',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 500;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,      // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant|iemobile|slim)\\s?(?:browser)?[\\/ ]?([\\w\\.]*)/i,             // Avant/IEMobile/SlimBrowser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(heytap|ovi)browser\\/([\\d\\.]+)/i,                                  // Heytap/Ovi\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart Lenovo '+BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360 ' + BROWSER]], [\n            /(oculus|sailfish|huawei|vivo)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 ' + BROWSER], VERSION], [                    // Oculus/Sailfish/HuaweiBrowser/VivoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, 'Sogou Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, 'Sogou Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345Explorer)[\\/ ]?([\\w\\.]+)/i                        // QQBrowser/2345 Browser\n            ], [NAME, VERSION], [\n            /(lbbrowser)/i,                                                     // LieBao Browser\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(Klarna)\\/([\\w\\.]+)/i,                                             // Klarna Shopping Browser for iOS & Android\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i                     // Chromium/Instagram/Snapchat\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i,                                             // Links\n            /panasonic;(viera)/i                                                // Panasonic Viera\n            ], [NAME, VERSION], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]([-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,                     // Redmi Pad\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i,                             // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( 2| pro)?)/i                                                // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i             // Windows Phone\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /windows nt 6\\.2; (arm)/i,                                        // Windows RT\n            /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n            /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (\"object\" !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (\"function\" === FUNC_TYPE && __webpack_require__.amdO) {\n            !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n                return UAParser;\n            }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ua-parser-js/src/ua-parser.js\n"));

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.mjs":
/*!******************************************!*\
  !*** ./node_modules/tslib/tslib.es6.mjs ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __addDisposableResource: function() { return /* binding */ __addDisposableResource; },\n/* harmony export */   __assign: function() { return /* binding */ __assign; },\n/* harmony export */   __asyncDelegator: function() { return /* binding */ __asyncDelegator; },\n/* harmony export */   __asyncGenerator: function() { return /* binding */ __asyncGenerator; },\n/* harmony export */   __asyncValues: function() { return /* binding */ __asyncValues; },\n/* harmony export */   __await: function() { return /* binding */ __await; },\n/* harmony export */   __awaiter: function() { return /* binding */ __awaiter; },\n/* harmony export */   __classPrivateFieldGet: function() { return /* binding */ __classPrivateFieldGet; },\n/* harmony export */   __classPrivateFieldIn: function() { return /* binding */ __classPrivateFieldIn; },\n/* harmony export */   __classPrivateFieldSet: function() { return /* binding */ __classPrivateFieldSet; },\n/* harmony export */   __createBinding: function() { return /* binding */ __createBinding; },\n/* harmony export */   __decorate: function() { return /* binding */ __decorate; },\n/* harmony export */   __disposeResources: function() { return /* binding */ __disposeResources; },\n/* harmony export */   __esDecorate: function() { return /* binding */ __esDecorate; },\n/* harmony export */   __exportStar: function() { return /* binding */ __exportStar; },\n/* harmony export */   __extends: function() { return /* binding */ __extends; },\n/* harmony export */   __generator: function() { return /* binding */ __generator; },\n/* harmony export */   __importDefault: function() { return /* binding */ __importDefault; },\n/* harmony export */   __importStar: function() { return /* binding */ __importStar; },\n/* harmony export */   __makeTemplateObject: function() { return /* binding */ __makeTemplateObject; },\n/* harmony export */   __metadata: function() { return /* binding */ __metadata; },\n/* harmony export */   __param: function() { return /* binding */ __param; },\n/* harmony export */   __propKey: function() { return /* binding */ __propKey; },\n/* harmony export */   __read: function() { return /* binding */ __read; },\n/* harmony export */   __rest: function() { return /* binding */ __rest; },\n/* harmony export */   __runInitializers: function() { return /* binding */ __runInitializers; },\n/* harmony export */   __setFunctionName: function() { return /* binding */ __setFunctionName; },\n/* harmony export */   __spread: function() { return /* binding */ __spread; },\n/* harmony export */   __spreadArray: function() { return /* binding */ __spreadArray; },\n/* harmony export */   __spreadArrays: function() { return /* binding */ __spreadArrays; },\n/* harmony export */   __values: function() { return /* binding */ __values; }\n/* harmony export */ });\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nfunction __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nfunction __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nfunction __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nfunction __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nfunction __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nfunction __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nfunction __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nfunction __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nfunction __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nfunction __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nfunction __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nfunction __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nfunction __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nfunction __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/tslib/tslib.es6.mjs\n"));

/***/ })

}]);